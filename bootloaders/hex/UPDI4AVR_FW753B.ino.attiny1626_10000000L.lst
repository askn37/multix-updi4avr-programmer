
/var/folders/4m/5plmh1yn7tjd65bkjnn6yc5c0000gn/T/arduino_build_794765/UPDI4AVR_FW753B.ino.elf:     file format elf32-avr


Disassembly of section .data:

00803800 <__data_start>:
__data_start():
  803800:	55 c8       	rjmp	.-3926   	; 0x8028ac <UPDI::nvmprog_key+0x7f90fc>
  803802:	00 c3       	rjmp	.+1536   	; 0x803e04 <__bss_end+0x390>
  803804:	04 55       	subi	r16, 0x54	; 84

00803805 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat>:
  803805:	55 a0 00 55 04                                      U..U.

0080380a <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr>:
  80380a:	55 6a 00 00 00 00                                   Uj....

00803810 <UPDI::st8(unsigned long, unsigned char)::set_ptr>:
  803810:	55 48 00 00 00 00                                   UH....

00803816 <UPDI::ld8(unsigned long)::set_ptr>:
  803816:	55 08 00 00 00 00                                   U.....

0080381c <UPDI::is_cs_stat(unsigned char, unsigned char)::set_ptr>:
  80381c:	55 00                                               U.

0080381e <NVM::set_repeat_rsd>:
  80381e:	55 c2 0e 55 a0 00 55 65                             U..U..Ue

00803826 <NVM::set_repeat>:
  803826:	55 a0 00 55 64                                      U..Ud

0080382b <NVM::set_ptr>:
  80382b:	55 6a 00 00 00 00                                   Uj....

00803831 <UPDI::enter_updi(bool)::set_ptr>:
  803831:	55 e5                                               U.

00803833 <JTAG2::PARAM_BAUD_RATE_VAL>:
  803833:	04 00                                               ..

00803835 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr>:
  803835:	55 00 00                                            U..

Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	67 c0       	rjmp	.+206    	; 0xd0 <__ctors_end>
       2:	00 00       	nop
../../../../crt1/gcrt1.S:67
       4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
       6:	00 00       	nop
../../../../crt1/gcrt1.S:68
       8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
       a:	00 00       	nop
../../../../crt1/gcrt1.S:69
       c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
       e:	00 00       	nop
../../../../crt1/gcrt1.S:70
      10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
      12:	00 00       	nop
../../../../crt1/gcrt1.S:71
      14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
      16:	00 00       	nop
../../../../crt1/gcrt1.S:72
      18:	fd c7       	rjmp	.+4090   	; 0x1014 <__vector_6>
      1a:	00 00       	nop
../../../../crt1/gcrt1.S:73
      1c:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__vector_7>
../../../../crt1/gcrt1.S:74
      20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
      22:	00 00       	nop
../../../../crt1/gcrt1.S:75
      24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
      26:	00 00       	nop
../../../../crt1/gcrt1.S:76
      28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
      2a:	00 00       	nop
../../../../crt1/gcrt1.S:77
      2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
      2e:	00 00       	nop
../../../../crt1/gcrt1.S:78
      30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
      32:	00 00       	nop
../../../../crt1/gcrt1.S:79
      34:	e4 c7       	rjmp	.+4040   	; 0xffe <__vector_13>
      36:	00 00       	nop
../../../../crt1/gcrt1.S:80
      38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
      3a:	00 00       	nop
../../../../crt1/gcrt1.S:81
      3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
      3e:	00 00       	nop
../../../../crt1/gcrt1.S:82
      40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
      42:	00 00       	nop
../../../../crt1/gcrt1.S:83
      44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
      46:	00 00       	nop
../../../../crt1/gcrt1.S:84
      48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
      4a:	00 00       	nop
../../../../crt1/gcrt1.S:85
      4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
      4e:	00 00       	nop
../../../../crt1/gcrt1.S:86
      50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
      52:	00 00       	nop
../../../../crt1/gcrt1.S:87
      54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
      56:	00 00       	nop
../../../../crt1/gcrt1.S:88
      58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
      5a:	00 00       	nop
../../../../crt1/gcrt1.S:89
      5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
      5e:	00 00       	nop
../../../../crt1/gcrt1.S:90
      60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
      62:	00 00       	nop
../../../../crt1/gcrt1.S:91
      64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
      66:	00 00       	nop
../../../../crt1/gcrt1.S:92
      68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
      6a:	00 00       	nop
../../../../crt1/gcrt1.S:93
      6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
      6e:	00 00       	nop
../../../../crt1/gcrt1.S:94
      70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
      72:	00 00       	nop
../../../../crt1/gcrt1.S:95
      74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
	...

00000078 <__trampolines_end>:
__trampolines_start():
      78:	86 01       	movw	r16, r12
      7a:	01 01       	movw	r0, r2
      7c:	02 01       	movw	r0, r4
      7e:	01 35       	cpi	r16, 0x51	; 81
      80:	07 01       	movw	r0, r14
      82:	00 00       	nop
      84:	00 00       	nop
      86:	00 00       	nop
      88:	4a 54       	subi	r20, 0x4A	; 74
      8a:	41 47       	sbci	r20, 0x71	; 113
      8c:	49 43       	sbci	r20, 0x39	; 57
      8e:	45 20       	and	r4, r5
      90:	6d 6b       	ori	r22, 0xBD	; 189
      92:	49 49       	sbci	r20, 0x99	; 153
	...

00000095 <JTAG2::BAUD_TABLE>:
      95:	00 00 1b 41 8d 20 47 10 23 08 12 04 b6 02 5b 01     ...A. G.#.....[.
      a5:	da 0a 04 01 ae 00 57 00 2b 00 39 01 9c 00 00 00     ......W.+.9.....
      b5:	00 00 0b 01 c8 00 a0 00 85 00 64 00 50 00 43 00     ..........d.P.C.
      c5:	3c 00 28 00 1b 00 14 00 0d 00 00                    <.(........

000000d0 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
      d0:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
      d2:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
      d4:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
      d6:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
      d8:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
      da:	de bf       	out	0x3e, r29	; 62

000000dc <__do_copy_data>:
__do_copy_data():
      dc:	18 e3       	ldi	r17, 0x38	; 56
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b8 e3       	ldi	r27, 0x38	; 56
      e2:	ea eb       	ldi	r30, 0xBA	; 186
      e4:	f7 e1       	ldi	r31, 0x17	; 23
      e6:	02 c0       	rjmp	.+4      	; 0xec <__do_copy_data+0x10>
      e8:	05 90       	lpm	r0, Z+
      ea:	0d 92       	st	X+, r0
      ec:	a8 33       	cpi	r26, 0x38	; 56
      ee:	b1 07       	cpc	r27, r17
      f0:	d9 f7       	brne	.-10     	; 0xe8 <__do_copy_data+0xc>

000000f2 <__do_clear_bss>:
__do_clear_bss():
      f2:	2a e3       	ldi	r18, 0x3A	; 58
      f4:	a8 e3       	ldi	r26, 0x38	; 56
      f6:	b8 e3       	ldi	r27, 0x38	; 56
      f8:	01 c0       	rjmp	.+2      	; 0xfc <.do_clear_bss_start>

000000fa <.do_clear_bss_loop>:
      fa:	1d 92       	st	X+, r1

000000fc <.do_clear_bss_start>:
      fc:	a4 37       	cpi	r26, 0x74	; 116
      fe:	b2 07       	cpc	r27, r18
     100:	e1 f7       	brne	.-8      	; 0xfa <.do_clear_bss_loop>
.do_clear_bss_start():
../../../../crt1/gcrt1.S:314
     102:	d7 d7       	rcall	.+4014   	; 0x10b2 <main>
../../../../crt1/gcrt1.S:315
     104:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <_exit>

00000108 <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:209
     108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <UPDI::RECV()>:
_ZN4UPDI4RECVEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:43
/*
 * UPDI受信
 */

uint8_t UPDI::RECV (void) {
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_RXCIF_bp);
     10a:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f7054>
     10e:	87 ff       	sbrs	r24, 7
     110:	fc cf       	rjmp	.-8      	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:44
  UPDI_LASTH = UPDI_USART.RXDATAH ^ 0x80;
     112:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <UPDI::nvmprog_key+0x7f7051>
     116:	80 58       	subi	r24, 0x80	; 128
     118:	8f bb       	out	0x1f, r24	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:45
  return UPDI_LASTL = UPDI_USART.RXDATAL;
     11a:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <UPDI::nvmprog_key+0x7f7050>
     11e:	8e bb       	out	0x1e, r24	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:46
}
     120:	08 95       	ret

00000122 <UPDI::SEND(unsigned char)>:
_ZN4UPDI4SENDEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:54
 * UPDI送信
 *
 * ループバック受信で送信値を照合
 */

bool UPDI::SEND (uint8_t _data) {
     122:	cf 93       	push	r28
     124:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:56
  bool _r;
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_DREIF_bp);
     126:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f7054>
     12a:	85 ff       	sbrs	r24, 5
     12c:	fc cf       	rjmp	.-8      	; 0x126 <UPDI::SEND(unsigned char)+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:57
  UPDI_USART.STATUS = USART_TXCIF_bm;
     12e:	80 e4       	ldi	r24, 0x40	; 64
     130:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <UPDI::nvmprog_key+0x7f7054>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:58
  UPDI_USART.TXDATAL = _data;
     134:	c0 93 02 08 	sts	0x0802, r28	; 0x800802 <UPDI::nvmprog_key+0x7f7052>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:59
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_TXCIF_bp);
     138:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f7054>
     13c:	86 ff       	sbrs	r24, 6
     13e:	fc cf       	rjmp	.-8      	; 0x138 <UPDI::SEND(unsigned char)+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:60
  _r = _data == UPDI::RECV();
     140:	e4 df       	rcall	.-56     	; 0x10a <UPDI::RECV()>
     142:	98 2f       	mov	r25, r24
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	9c 13       	cpse	r25, r28
     148:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:61
  if (!_r) UPDI_LASTH |= 0x20;
     14a:	9c 13       	cpse	r25, r28
     14c:	fd 9a       	sbi	0x1f, 5	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:63
  return _r;
}
     14e:	cf 91       	pop	r28
     150:	08 95       	ret

00000152 <UPDI::send_bytes(unsigned char const*, unsigned int)>:
_ZN4UPDI10send_bytesEPKhj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:110

/*
 * バイト塊送信
 */

bool UPDI::send_bytes (const uint8_t *data, size_t len) {
     152:	0f 93       	push	r16
     154:	1f 93       	push	r17
     156:	cf 93       	push	r28
     158:	df 93       	push	r29
     15a:	eb 01       	movw	r28, r22
     15c:	8c 01       	movw	r16, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:113
  uint8_t *p = (uint8_t*)(void*)data;
  do {
    if (!UPDI::SEND(*p++)) break;
     15e:	f8 01       	movw	r30, r16
     160:	81 91       	ld	r24, Z+
     162:	8f 01       	movw	r16, r30
     164:	de df       	rcall	.-68     	; 0x122 <UPDI::SEND(unsigned char)>
     166:	88 23       	and	r24, r24
     168:	11 f0       	breq	.+4      	; 0x16e <UPDI::send_bytes(unsigned char const*, unsigned int)+0x1c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:114
  } while (--len);
     16a:	21 97       	sbiw	r28, 0x01	; 1
     16c:	c1 f7       	brne	.-16     	; 0x15e <UPDI::send_bytes(unsigned char const*, unsigned int)+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:115
  return len == 0;
     16e:	81 e0       	ldi	r24, 0x01	; 1
     170:	cd 2b       	or	r28, r29
     172:	09 f0       	breq	.+2      	; 0x176 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x24>
     174:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:116
}
     176:	df 91       	pop	r29
     178:	cf 91       	pop	r28
     17a:	1f 91       	pop	r17
     17c:	0f 91       	pop	r16
     17e:	08 95       	ret

00000180 <UPDI::updi_reset(bool)>:
_ZN4UPDI10updi_resetEb():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:223
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
}
inline bool UPDI::updi_reset (bool logic) {
  return UPDI::set_cs_stat(
     180:	81 11       	cpse	r24, r1
     182:	89 e5       	ldi	r24, 0x59	; 89
set_cs_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     184:	98 ec       	ldi	r25, 0xC8	; 200
     186:	90 93 36 38 	sts	0x3836, r25	; 0x803836 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     18a:	80 93 37 38 	sts	0x3837, r24	; 0x803837 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     18e:	63 e0       	ldi	r22, 0x03	; 3
     190:	70 e0       	ldi	r23, 0x00	; 0
     192:	85 e3       	ldi	r24, 0x35	; 53
     194:	98 e3       	ldi	r25, 0x38	; 56
     196:	dd cf       	rjmp	.-70     	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00000198 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>:
_ZN4UPDI11set_cs_ctraEh.constprop.1():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     198:	e5 e3       	ldi	r30, 0x35	; 53
     19a:	f8 e3       	ldi	r31, 0x38	; 56
     19c:	82 ec       	ldi	r24, 0xC2	; 194
     19e:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     1a0:	86 e0       	ldi	r24, 0x06	; 6
     1a2:	82 83       	std	Z+2, r24	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     1a4:	63 e0       	ldi	r22, 0x03	; 3
     1a6:	70 e0       	ldi	r23, 0x00	; 0
     1a8:	cf 01       	movw	r24, r30
     1aa:	d3 cf       	rjmp	.-90     	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>

000001ac <UPDI::enter_updi(bool) [clone .part.4]>:
_ZN4UPDI10enter_updiEb.part.4():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:329

/*
 * UPDI制御開始
 */

bool UPDI::enter_updi (bool skip) {
     1ac:	0f 93       	push	r16
     1ae:	1f 93       	push	r17
     1b0:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:352
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
     1b2:	62 e0       	ldi	r22, 0x02	; 2
     1b4:	70 e0       	ldi	r23, 0x00	; 0
     1b6:	81 e3       	ldi	r24, 0x31	; 49
     1b8:	98 e3       	ldi	r25, 0x38	; 56
     1ba:	cb df       	rcall	.-106    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     1bc:	c8 2f       	mov	r28, r24
     1be:	88 23       	and	r24, r24
     1c0:	61 f1       	breq	.+88     	; 0x21a <UPDI::enter_updi(bool) [clone .part.4]+0x6e>
     1c2:	0a e6       	ldi	r16, 0x6A	; 106
     1c4:	18 e3       	ldi	r17, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:353
    while (_len--) *_p++ = UPDI::RECV();
     1c6:	88 e3       	ldi	r24, 0x38	; 56
     1c8:	0a 37       	cpi	r16, 0x7A	; 122
     1ca:	18 07       	cpc	r17, r24
     1cc:	29 f0       	breq	.+10     	; 0x1d8 <UPDI::enter_updi(bool) [clone .part.4]+0x2c>
     1ce:	9d df       	rcall	.-198    	; 0x10a <UPDI::RECV()>
     1d0:	f8 01       	movw	r30, r16
     1d2:	81 93       	st	Z+, r24
     1d4:	8f 01       	movw	r16, r30
     1d6:	f7 cf       	rjmp	.-18     	; 0x1c6 <UPDI::enter_updi(bool) [clone .part.4]+0x1a>
     1d8:	80 91 6a 38 	lds	r24, 0x386A	; 0x80386a <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:354
    switch (JTAG2::packet.body[3]) {
     1dc:	8d 36       	cpi	r24, 0x6D	; 109
     1de:	79 f0       	breq	.+30     	; 0x1fe <UPDI::enter_updi(bool) [clone .part.4]+0x52>
     1e0:	84 37       	cpi	r24, 0x74	; 116
     1e2:	01 f1       	breq	.+64     	; 0x224 <UPDI::enter_updi(bool) [clone .part.4]+0x78>
     1e4:	81 34       	cpi	r24, 0x41	; 65
     1e6:	19 f5       	brne	.+70     	; 0x22e <UPDI::enter_updi(bool) [clone .part.4]+0x82>
     1e8:	80 91 74 38 	lds	r24, 0x3874	; 0x803874 <JTAG2::packet+0x15>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:369
        break;
      }
      case 'A' : {              // 'AVR_Dx' series
        /* AVR Dx SIB = 'AVR     P:2D:1-3' */
        /* AVR Ex SIB = 'AVR     P:3D:1-3' */
        if (JTAG2::packet.body[13] == '3') {
     1ec:	83 33       	cpi	r24, 0x33	; 51
     1ee:	09 f4       	brne	.+2      	; 0x1f2 <UPDI::enter_updi(bool) [clone .part.4]+0x46>
     1f0:	ea 9a       	sbi	0x1d, 2	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:371
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
     1f2:	e9 9a       	sbi	0x1d, 1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:373
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
     1f4:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:374
        NVM::nvm_flash_offset = 0x800000;
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	a0 e8       	ldi	r26, 0x80	; 128
     1fa:	b0 e0       	ldi	r27, 0x00	; 0
     1fc:	05 c0       	rjmp	.+10     	; 0x208 <UPDI::enter_updi(bool) [clone .part.4]+0x5c>
     1fe:	e8 9a       	sbi	0x1d, 0	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:357
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
    while (_len--) *_p++ = UPDI::RECV();
    switch (JTAG2::packet.body[3]) {
      case 'm' : {              // 'megaAVR' series
        /* megaAVR SIB = 'megaAVR P:0D:1-3' */
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_LOWF_bp);
     200:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:358
        NVM::nvm_flash_offset = 0x4000;
     202:	90 e4       	ldi	r25, 0x40	; 64
     204:	a0 e0       	ldi	r26, 0x00	; 0
     206:	b0 e0       	ldi	r27, 0x00	; 0
     208:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:374
        if (JTAG2::packet.body[13] == '3') {
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
     20c:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
     210:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
     214:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
     218:	e0 9a       	sbi	0x1c, 0	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:379
        break;
      }
      default : return false;
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     21a:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:382
  }
  return true;
}
     21c:	cf 91       	pop	r28
     21e:	1f 91       	pop	r17
     220:	0f 91       	pop	r16
     222:	08 95       	ret
     224:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:363
        NVM::nvm_flash_offset = 0x4000;
        break;
      }
      case 't' : {              // 'tinyAVR' series
        /* tinyAVR SIB = 'tinyAVR P:0D:1-3' */
        NVM::nvm_flash_offset = 0x8000;
     226:	90 e8       	ldi	r25, 0x80	; 128
     228:	a0 e0       	ldi	r26, 0x00	; 0
     22a:	b0 e0       	ldi	r27, 0x00	; 0
     22c:	ed cf       	rjmp	.-38     	; 0x208 <UPDI::enter_updi(bool) [clone .part.4]+0x5c>
     22e:	c0 e0       	ldi	r28, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:377
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
        break;
      }
      default : return false;
     230:	f4 cf       	rjmp	.-24     	; 0x21a <UPDI::enter_updi(bool) [clone .part.4]+0x6e>

00000232 <UPDI::st8(unsigned long, unsigned char)>:
_ZN4UPDI3st8Emh():
     232:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:147

/*
 * 単バイト送信
 */

bool UPDI::st8 (uint32_t addr, uint8_t data) {
     234:	c4 2f       	mov	r28, r20
     236:	60 93 12 38 	sts	0x3812, r22	; 0x803812 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:153
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
     23a:	70 93 13 38 	sts	0x3813, r23	; 0x803813 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x3>
     23e:	80 93 14 38 	sts	0x3814, r24	; 0x803814 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x4>
     242:	90 93 15 38 	sts	0x3815, r25	; 0x803815 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:154
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     246:	65 e0       	ldi	r22, 0x05	; 5
     248:	70 e0       	ldi	r23, 0x00	; 0
     24a:	80 e1       	ldi	r24, 0x10	; 16
     24c:	98 e3       	ldi	r25, 0x38	; 56
     24e:	81 df       	rcall	.-254    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     250:	81 11       	cpse	r24, r1
     252:	02 c0       	rjmp	.+4      	; 0x258 <UPDI::st8(unsigned long, unsigned char)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:157
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  if (!UPDI::SEND(data)) return false;
  return UPDI::UPDI_ACK == UPDI::RECV();
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0b c0       	rjmp	.+22     	; 0x26e <UPDI::st8(unsigned long, unsigned char)+0x3c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:155
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     258:	58 df       	rcall	.-336    	; 0x10a <UPDI::RECV()>
     25a:	80 34       	cpi	r24, 0x40	; 64
     25c:	d9 f7       	brne	.-10     	; 0x254 <UPDI::st8(unsigned long, unsigned char)+0x22>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:156
  if (!UPDI::SEND(data)) return false;
     25e:	8c 2f       	mov	r24, r28
     260:	60 df       	rcall	.-320    	; 0x122 <UPDI::SEND(unsigned char)>
     262:	88 23       	and	r24, r24
     264:	b9 f3       	breq	.-18     	; 0x254 <UPDI::st8(unsigned long, unsigned char)+0x22>
     266:	51 df       	rcall	.-350    	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:157
  return UPDI::UPDI_ACK == UPDI::RECV();
     268:	91 e0       	ldi	r25, 0x01	; 1
     26a:	80 34       	cpi	r24, 0x40	; 64
     26c:	99 f7       	brne	.-26     	; 0x254 <UPDI::st8(unsigned long, unsigned char)+0x22>
     26e:	89 2f       	mov	r24, r25
     270:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:158
}
     272:	08 95       	ret

00000274 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>:
_ZN4UPDI18send_repeat_headerEhmj():
     274:	40 93 0c 38 	sts	0x380C, r20	; 0x80380c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:135
    , UPDI::UPDI_REPEAT | UPDI::UPDI_DATA1
    , 0                   // repeat count
    , UPDI::UPDI_SYNCH
    , UPDI::UPDI_PTR_INC  // +cmd
  };
  _CAPS32(set_ptr[2])->dword = addr;
     278:	50 93 0d 38 	sts	0x380D, r21	; 0x80380d <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x3>
     27c:	60 93 0e 38 	sts	0x380E, r22	; 0x80380e <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x4>
     280:	70 93 0f 38 	sts	0x380F, r23	; 0x80380f <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x5>
     284:	21 50       	subi	r18, 0x01	; 1
     286:	20 93 07 38 	sts	0x3807, r18	; 0x803807 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:136
  set_repeat[2] = len - 1;
     28a:	84 60       	ori	r24, 0x04	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:137
  set_repeat[4] = UPDI::UPDI_PTR_INC | cmd;
     28c:	80 93 09 38 	sts	0x3809, r24	; 0x803809 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:138
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     290:	65 e0       	ldi	r22, 0x05	; 5
     292:	70 e0       	ldi	r23, 0x00	; 0
     294:	8a e0       	ldi	r24, 0x0A	; 10
     296:	98 e3       	ldi	r25, 0x38	; 56
     298:	5c df       	rcall	.-328    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     29a:	88 23       	and	r24, r24
     29c:	41 f0       	breq	.+16     	; 0x2ae <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:139
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     29e:	35 df       	rcall	.-406    	; 0x10a <UPDI::RECV()>
     2a0:	80 34       	cpi	r24, 0x40	; 64
     2a2:	29 f4       	brne	.+10     	; 0x2ae <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
     2a4:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:140
  return UPDI::send_bytes(set_repeat, sizeof(set_repeat));
     2a6:	70 e0       	ldi	r23, 0x00	; 0
     2a8:	85 e0       	ldi	r24, 0x05	; 5
     2aa:	98 e3       	ldi	r25, 0x38	; 56
     2ac:	52 cf       	rjmp	.-348    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     2ae:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:141
}
     2b0:	08 95       	ret

000002b2 <UPDI::BREAK()>:
_ZN4UPDI5BREAKEv():
     2b2:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:81
 * BREAKキャラクタ
 *
 * 送信速度を遅くすることで生成する
 */

void UPDI::BREAK (void) {
     2b4:	df 93       	push	r29
     2b6:	c0 e0       	ldi	r28, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:82
  UPDI_USART.BAUD = UPDI_BAUD_BREAK;
     2b8:	d8 e0       	ldi	r29, 0x08	; 8
     2ba:	80 ec       	ldi	r24, 0xC0	; 192
     2bc:	94 e4       	ldi	r25, 0x44	; 68
     2be:	88 87       	std	Y+8, r24	; 0x08
     2c0:	99 87       	std	Y+9, r25	; 0x09
     2c2:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:83
  UPDI::SEND(UPDI::UPDI_NOP);
     2c4:	2e df       	rcall	.-420    	; 0x122 <UPDI::SEND(unsigned char)>
     2c6:	80 eb       	ldi	r24, 0xB0	; 176
     2c8:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:84
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     2ca:	88 87       	std	Y+8, r24	; 0x08
     2cc:	99 87       	std	Y+9, r25	; 0x09
     2ce:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:85
}
     2d0:	cf 91       	pop	r28
     2d2:	08 95       	ret

000002d4 <UPDI::is_cs_stat(unsigned char, unsigned char)>:
_ZN4UPDI10is_cs_statEhh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:193

/*
 * コントロールステータス受信
 */

bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
     2d4:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:195
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0 };
  set_ptr[1] = UPDI::UPDI_LDCS | code;
     2d6:	c6 2f       	mov	r28, r22
     2d8:	80 68       	ori	r24, 0x80	; 128
     2da:	80 93 1d 38 	sts	0x381D, r24	; 0x80381d <UPDI::is_cs_stat(unsigned char, unsigned char)::set_ptr+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:196
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
     2de:	62 e0       	ldi	r22, 0x02	; 2
     2e0:	70 e0       	ldi	r23, 0x00	; 0
     2e2:	8c e1       	ldi	r24, 0x1C	; 28
     2e4:	98 e3       	ldi	r25, 0x38	; 56
     2e6:	35 df       	rcall	.-406    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     2e8:	81 11       	cpse	r24, r1
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <UPDI::is_cs_stat(unsigned char, unsigned char)+0x1c>
     2ec:	e2 df       	rcall	.-60     	; 0x2b2 <UPDI::BREAK()>
     2ee:	f7 cf       	rjmp	.-18     	; 0x2de <UPDI::is_cs_stat(unsigned char, unsigned char)+0xa>
     2f0:	0c df       	rcall	.-488    	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:197
  return check == (UPDI::RECV() & check);
     2f2:	98 2f       	mov	r25, r24
     2f4:	9c 23       	and	r25, r28
     2f6:	81 e0       	ldi	r24, 0x01	; 1
     2f8:	9c 13       	cpse	r25, r28
     2fa:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:198
}
     2fc:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:184
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_LDS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS16(set_ptr[2])->word = (uint16_t)addr;
     2fe:	08 95       	ret

00000300 <UPDI::ld8(unsigned long)>:
_ZN4UPDI3ld8Em():
     300:	60 93 18 38 	sts	0x3818, r22	; 0x803818 <UPDI::ld8(unsigned long)::set_ptr+0x2>
     304:	70 93 19 38 	sts	0x3819, r23	; 0x803819 <UPDI::ld8(unsigned long)::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:185
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) UPDI::BREAK();
     308:	65 e0       	ldi	r22, 0x05	; 5
     30a:	70 e0       	ldi	r23, 0x00	; 0
     30c:	86 e1       	ldi	r24, 0x16	; 22
     30e:	98 e3       	ldi	r25, 0x38	; 56
     310:	20 df       	rcall	.-448    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     312:	81 11       	cpse	r24, r1
     314:	02 c0       	rjmp	.+4      	; 0x31a <UPDI::ld8(unsigned long)+0x1a>
     316:	cd df       	rcall	.-102    	; 0x2b2 <UPDI::BREAK()>
     318:	f7 cf       	rjmp	.-18     	; 0x308 <UPDI::ld8(unsigned long)+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:186
  return UPDI::RECV();
     31a:	f7 ce       	rjmp	.-530    	; 0x10a <UPDI::RECV()>

0000031c <UPDI::Target_Reset(bool)>:
_ZN4UPDI12Target_ResetEb():
     31c:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:93
 * 対象リセット
 *
 * BREAKを前置するタイプ
 */

bool UPDI::Target_Reset (bool _enable) {
     31e:	c8 2f       	mov	r28, r24
     320:	c8 df       	rcall	.-112    	; 0x2b2 <UPDI::BREAK()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:101
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_ASI_RESET_REQ
    , 0
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	c1 11       	cpse	r28, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:102
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
     326:	89 e5       	ldi	r24, 0x59	; 89
     328:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     32c:	65 e0       	ldi	r22, 0x05	; 5
     32e:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:103
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     330:	80 e0       	ldi	r24, 0x00	; 0
     332:	98 e3       	ldi	r25, 0x38	; 56
     334:	cf 91       	pop	r28
     336:	0d cf       	rjmp	.-486    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00000338 <TIM::LED_Blink()>:
_ZN3TIM9LED_BlinkEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:104
}
     338:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:103
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     33c:	83 30       	cpi	r24, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:155
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     33e:	99 f0       	breq	.+38     	; 0x366 <TIM::LED_Blink()+0x2e>
     340:	83 e0       	ldi	r24, 0x03	; 3
     342:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:156
    TIM::mode = mode;
     346:	89 ea       	ldi	r24, 0xA9	; 169
     348:	95 e5       	ldi	r25, 0x55	; 85
     34a:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f72ec>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:157
    TCB1_CCMP = ccmp;
     34e:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f72ed>
     352:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f72ea>
     356:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f72eb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:158
    TCB1_CNT = 0;
     35a:	8f e4       	ldi	r24, 0x4F	; 79
     35c:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f72e0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:159
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f69f9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     366:	08 95       	ret

00000368 <TIM::LED_Flash()>:
_ZN3TIM9LED_FlashEv():
     368:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:172
}

/* 点滅（SW1アサート）*/
void TIM::LED_Blink (void) {
  LED_TCB1(3, TCB1_BLINK);
}
     36c:	82 30       	cpi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:155
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     36e:	99 f0       	breq	.+38     	; 0x396 <TIM::LED_Flash()+0x2e>
     370:	82 e0       	ldi	r24, 0x02	; 2
     372:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:156
    TIM::mode = mode;
     376:	89 ea       	ldi	r24, 0xA9	; 169
     378:	98 e0       	ldi	r25, 0x08	; 8
     37a:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f72ec>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:157
    TCB1_CCMP = ccmp;
     37e:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f72ed>
     382:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f72ea>
     386:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f72eb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:158
    TCB1_CNT = 0;
     38a:	8f e4       	ldi	r24, 0x4F	; 79
     38c:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f72e0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:159
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f69f9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     396:	08 95       	ret

00000398 <TIM::Timeout_Stop()>:
_ZN3TIM12Timeout_StopEv():
     398:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
     39a:	f8 94       	cli
_ZN3TIM12Timeout_StopEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:167
}

/* フラッシュ（RTSアサート/UPDI許認可後）*/
void TIM::LED_Flash (void) {
  LED_TCB1(2, TCB1_FLASH);
}
     39c:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f72d0>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     3a0:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:133
  }
}

void TIM::Timeout_Stop (void) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    TCB0_CTRLA = 0;
     3a2:	90 93 86 0a 	sts	0x0A86, r25	; 0x800a86 <UPDI::nvmprog_key+0x7f72d6>
__iRestore():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:134
    TCB0_INTFLAGS = TCB_CAPT_bm;
     3a6:	8f bf       	out	0x3f, r24	; 63
_ZN3TIM12Timeout_StopEv():
     3a8:	18 95       	reti
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     3aa:	08 95       	ret

000003ac <SYS::WDT_SET(unsigned char)>:
_ZN3SYS7WDT_SETEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:136
  }
  reti();
     3ac:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <UPDI::nvmprog_key+0x7f6951>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:133
/*
 * WDT操作
 */

void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
     3b0:	90 fd       	sbrc	r25, 0
     3b2:	fc cf       	rjmp	.-8      	; 0x3ac <SYS::WDT_SET(unsigned char)>
     3b4:	98 ed       	ldi	r25, 0xD8	; 216
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:134
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
     3b6:	94 bf       	out	0x34, r25	; 52
     3b8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <UPDI::nvmprog_key+0x7f6950>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:135
}
     3bc:	08 95       	ret

000003be <NVM::nvm_ctrl(unsigned char)>:
_ZN3NVM8nvm_ctrlEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:292
/*
 * NVMCTRL制御
 */

bool NVM::nvm_ctrl (uint8_t nvmcmd) {
  return UPDI::st8(NVM::NVMCTRL_REG_CTRLA, nvmcmd);
     3be:	48 2f       	mov	r20, r24
     3c0:	60 e0       	ldi	r22, 0x00	; 0
     3c2:	70 e1       	ldi	r23, 0x10	; 16
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	34 cf       	rjmp	.-408    	; 0x232 <UPDI::st8(unsigned long, unsigned char)>

000003ca <nvm_ctrl_change(unsigned char)>:
_Z15nvm_ctrl_changeh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:296
}

/* NVMCTRL v0 */
bool nvm_ctrl_change (uint8_t nvmcmd) {
     3ca:	cf 93       	push	r28
     3cc:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:297
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
     3ce:	60 e0       	ldi	r22, 0x00	; 0
     3d0:	70 e1       	ldi	r23, 0x10	; 16
     3d2:	80 e0       	ldi	r24, 0x00	; 0
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	94 df       	rcall	.-216    	; 0x300 <UPDI::ld8(unsigned long)>
     3d8:	8c 13       	cpse	r24, r28
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <nvm_ctrl_change(unsigned char)+0x18>
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:301
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}
     3e0:	08 95       	ret
     3e2:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:298
}

/* NVMCTRL v0 */
bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
     3e4:	ec df       	rcall	.-40     	; 0x3be <NVM::nvm_ctrl(unsigned char)>
     3e6:	88 23       	and	r24, r24
     3e8:	d1 f3       	breq	.-12     	; 0x3de <nvm_ctrl_change(unsigned char)+0x14>
     3ea:	cc 23       	and	r28, r28
     3ec:	b9 f3       	breq	.-18     	; 0x3dc <nvm_ctrl_change(unsigned char)+0x12>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:299
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     3ee:	8c 2f       	mov	r24, r28
     3f0:	cf 91       	pop	r28
     3f2:	e5 cf       	rjmp	.-54     	; 0x3be <NVM::nvm_ctrl(unsigned char)>

000003f4 <JTAG2::set_response(JTAG2::jtag_response_e)>:
_ZN5JTAG212set_responseENS_15jtag_response_eE():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:301
  return true;
}
     3f4:	44 e0       	ldi	r20, 0x04	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:299

/* NVMCTRL v0 */
bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     3f6:	50 e0       	ldi	r21, 0x00	; 0
     3f8:	60 e0       	ldi	r22, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:162
  }
}

/* JTAG Response */
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
     3fa:	70 e0       	ldi	r23, 0x00	; 0
     3fc:	40 93 62 38 	sts	0x3862, r20	; 0x803862 <JTAG2::packet+0x3>
     400:	50 93 63 38 	sts	0x3863, r21	; 0x803863 <JTAG2::packet+0x4>
     404:	60 93 64 38 	sts	0x3864, r22	; 0x803864 <JTAG2::packet+0x5>
     408:	70 93 65 38 	sts	0x3865, r23	; 0x803865 <JTAG2::packet+0x6>
     40c:	80 93 67 38 	sts	0x3867, r24	; 0x803867 <JTAG2::packet+0x8>
     410:	e1 99       	sbic	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:164
  /* 応答番号 */
  packet.body[0] = response_code;
     412:	0b c0       	rjmp	.+22     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     414:	8c b3       	in	r24, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     416:	81 70       	andi	r24, 0x01	; 1
     418:	80 93 68 38 	sts	0x3868, r24	; 0x803868 <JTAG2::packet+0x9>
     41c:	8c b3       	in	r24, 0x1c	; 28
     41e:	80 93 69 38 	sts	0x3869, r24	; 0x803869 <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:169
                 : bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp) ? 1 : 0;
  /* 内部状態フラグ */
  packet.body[2] = UPDI_CONTROL;
     422:	8d b3       	in	r24, 0x1d	; 29
     424:	80 93 6a 38 	sts	0x386A, r24	; 0x80386a <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:170
  packet.body[3] = UPDI_NVMCTRL;
     428:	08 95       	ret
     42a:	82 e0       	ldi	r24, 0x02	; 2
     42c:	f5 cf       	rjmp	.-22     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>

0000042e <_crc_ccitt_update(unsigned int, unsigned char)>:
_ZL17_crc_ccitt_updatejh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:171
}
     42e:	86 27       	eor	r24, r22
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
  /* 応答番号 */
  packet.body[0] = response_code;
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     430:	08 2e       	mov	r0, r24
     432:	82 95       	swap	r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:285
        "eor    %A0,__tmp_reg__"

        : "=d" (__ret)
        : "r" (__data), "0" (__crc)
        : "r0"
    );
     434:	80 7f       	andi	r24, 0xF0	; 240
     436:	80 25       	eor	r24, r0
     438:	09 2e       	mov	r0, r25
     43a:	98 2f       	mov	r25, r24
     43c:	82 95       	swap	r24
     43e:	8f 70       	andi	r24, 0x0F	; 15
     440:	08 26       	eor	r0, r24
     442:	86 95       	lsr	r24
     444:	98 27       	eor	r25, r24
     446:	89 27       	eor	r24, r25
     448:	88 0f       	add	r24, r24
     44a:	88 0f       	add	r24, r24
     44c:	88 0f       	add	r24, r24
     44e:	80 25       	eor	r24, r0
     450:	08 95       	ret

00000452 <JTAG2::answer_transfer()>:
_ZN5JTAG215answer_transferEv():
     452:	af 92       	push	r10
     454:	bf 92       	push	r11
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:287
    return __ret;
}
     456:	cf 92       	push	r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:147
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
  return _crc == 0;
}

/* JTAG Answer */
void JTAG2::answer_transfer (void) {
     458:	df 92       	push	r13
     45a:	ef 92       	push	r14
     45c:	ff 92       	push	r15
     45e:	0f 93       	push	r16
     460:	1f 93       	push	r17
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	00 d0       	rcall	.+0      	; 0x468 <JTAG2::answer_transfer()+0x16>
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
     46c:	8f ef       	ldi	r24, 0xFF	; 255
     46e:	9f ef       	ldi	r25, 0xFF	; 255
     470:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:148
  uint16_t _crc = ~0;
     472:	9a 83       	std	Y+2, r25	; 0x02
     474:	e0 90 62 38 	lds	r14, 0x3862	; 0x803862 <JTAG2::packet+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:149
  int16_t _len = packet.size_word[0] + 8;
     478:	f0 90 63 38 	lds	r15, 0x3863	; 0x803863 <JTAG2::packet+0x4>
     47c:	87 01       	movw	r16, r14
     47e:	08 5f       	subi	r16, 0xF8	; 248
     480:	1f 4f       	sbci	r17, 0xFF	; 255
     482:	8f e5       	ldi	r24, 0x5F	; 95
     484:	c8 2e       	mov	r12, r24
     486:	88 e3       	ldi	r24, 0x38	; 56
     488:	d8 2e       	mov	r13, r24
     48a:	56 01       	movw	r10, r12
     48c:	81 e0       	ldi	r24, 0x01	; 1
     48e:	e8 1a       	sub	r14, r24
     490:	f1 08       	sbc	r15, r1
     492:	a7 ef       	ldi	r26, 0xF7	; 247
     494:	ea 16       	cp	r14, r26
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     496:	af ef       	ldi	r26, 0xFF	; 255
     498:	fa 06       	cpc	r15, r26
     49a:	49 f0       	breq	.+18     	; 0x4ae <JTAG2::answer_transfer()+0x5c>
     49c:	f5 01       	movw	r30, r10
     49e:	61 91       	ld	r22, Z+
     4a0:	5f 01       	movw	r10, r30
crc16_update():
     4a2:	89 81       	ldd	r24, Y+1	; 0x01
     4a4:	9a 81       	ldd	r25, Y+2	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
     4a6:	c3 df       	rcall	.-122    	; 0x42e <_crc_ccitt_update(unsigned int, unsigned char)>
_ZN5JTAG215answer_transferEv():
     4a8:	89 83       	std	Y+1, r24	; 0x01
     4aa:	9a 83       	std	Y+2, r25	; 0x02
     4ac:	ef cf       	rjmp	.-34     	; 0x48c <JTAG2::answer_transfer()+0x3a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
void JTAG2::answer_transfer (void) {
  uint16_t _crc = ~0;
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     4ae:	f8 01       	movw	r30, r16
     4b0:	e1 5a       	subi	r30, 0xA1	; 161
     4b2:	f7 4c       	sbci	r31, 0xC7	; 199
     4b4:	89 81       	ldd	r24, Y+1	; 0x01
     4b6:	80 83       	st	Z, r24
     4b8:	8a 81       	ldd	r24, Y+2	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:153
  (*_q++) = _CAPS16(_crc)->bytes[0];
     4ba:	81 83       	std	Z+1, r24	; 0x01
     4bc:	2f b7       	in	r18, 0x3f	; 63
__iCliRetVal():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  (*_q++) = _CAPS16(_crc)->bytes[1];
     4be:	f8 94       	cli
_ZN5JTAG215answer_transferEv():
     4c0:	32 96       	adiw	r30, 0x02	; 2
put():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:155
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     4c2:	90 e4       	ldi	r25, 0x40	; 64
_ZN5JTAG215answer_transferEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     4c4:	ce 16       	cp	r12, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
     4c6:	df 06       	cpc	r13, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:107
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
  JTAG_USART.STATUS = USART_TXCIF_bm;
     4c8:	71 f4       	brne	.+28     	; 0x4e6 <JTAG2::answer_transfer()+0x94>
__iRestore():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     4ca:	2f bf       	out	0x3f, r18	; 63
_ZN5JTAG215answer_transferEv():
     4cc:	0f 90       	pop	r0
     4ce:	0f 90       	pop	r0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     4d0:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:158
  }
}
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	0f 91       	pop	r16
     4d8:	ff 90       	pop	r15
     4da:	ef 90       	pop	r14
     4dc:	df 90       	pop	r13
     4de:	cf 90       	pop	r12
     4e0:	bf 90       	pop	r11
     4e2:	af 90       	pop	r10
     4e4:	08 95       	ret
     4e6:	d6 01       	movw	r26, r12
     4e8:	8d 91       	ld	r24, X+
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     4ea:	6d 01       	movw	r12, r26
put():
     4ec:	30 91 24 08 	lds	r19, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f7074>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:106
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
     4f0:	35 ff       	sbrs	r19, 5
     4f2:	fc cf       	rjmp	.-8      	; 0x4ec <JTAG2::answer_transfer()+0x9a>
     4f4:	90 93 24 08 	sts	0x0824, r25	; 0x800824 <UPDI::nvmprog_key+0x7f7074>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:108
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
     4f8:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <UPDI::nvmprog_key+0x7f7072>
     4fc:	e3 cf       	rjmp	.-58     	; 0x4c4 <JTAG2::answer_transfer()+0x72>

000004fe <UPDI::enter_prog()>:
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:389
/*
 * プログラミング制御開始
 *
 */

bool UPDI::enter_prog (void) {
     4fe:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:390
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
     500:	e1 99       	sbic	0x1c, 1	; 28
     502:	36 c0       	rjmp	.+108    	; 0x570 <UPDI::enter_prog()+0x72>
is_sys_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     504:	60 e2       	ldi	r22, 0x20	; 32
     506:	8b e0       	ldi	r24, 0x0B	; 11
     508:	e5 de       	rcall	.-566    	; 0x2d4 <UPDI::is_cs_stat(unsigned char, unsigned char)>
     50a:	c8 2f       	mov	r28, r24
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:391
 *
 */

bool UPDI::enter_prog (void) {
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
     50c:	81 11       	cpse	r24, r1
     50e:	fa cf       	rjmp	.-12     	; 0x504 <UPDI::enter_prog()+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:392
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
     510:	f3 99       	sbic	0x1e, 3	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:393
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
     512:	2c c0       	rjmp	.+88     	; 0x56c <UPDI::enter_prog()+0x6e>
     514:	f0 99       	sbic	0x1e, 0	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:203
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
}
inline bool UPDI::is_key_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, check);
     516:	2d c0       	rjmp	.+90     	; 0x572 <UPDI::enter_prog()+0x74>
is_key_stat():
     518:	60 e1       	ldi	r22, 0x10	; 16
     51a:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:394
bool UPDI::enter_prog (void) {
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
     51c:	db de       	rcall	.-586    	; 0x2d4 <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
     51e:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:395
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     520:	12 c0       	rjmp	.+36     	; 0x546 <UPDI::enter_prog()+0x48>
     522:	6a e0       	ldi	r22, 0x0A	; 10
     524:	70 e0       	ldi	r23, 0x00	; 0
     526:	80 eb       	ldi	r24, 0xB0	; 176
     528:	97 e9       	ldi	r25, 0x97	; 151
     52a:	13 de       	rcall	.-986    	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     52c:	88 23       	and	r24, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     52e:	09 f1       	breq	.+66     	; 0x572 <UPDI::enter_prog()+0x74>
delay_micros():
     530:	89 ef       	ldi	r24, 0xF9	; 249
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	01 97       	sbiw	r24, 0x01	; 1
     536:	f1 f7       	brne	.-4      	; 0x534 <UPDI::enter_prog()+0x36>
     538:	00 c0       	rjmp	.+0      	; 0x53a <UPDI::enter_prog()+0x3c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:203
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
}
inline bool UPDI::is_key_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, check);
     53a:	00 00       	nop
is_key_stat():
     53c:	60 e1       	ldi	r22, 0x10	; 16
     53e:	87 e0       	ldi	r24, 0x07	; 7
     540:	c9 de       	rcall	.-622    	; 0x2d4 <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:396
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
        do{ delay_micros(100); } while (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG));
     542:	88 23       	and	r24, r24
     544:	a9 f3       	breq	.-22     	; 0x530 <UPDI::enter_prog()+0x32>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:398
      }
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	1b de       	rcall	.-970    	; 0x180 <UPDI::updi_reset(bool)>
     54a:	88 23       	and	r24, r24
     54c:	91 f0       	breq	.+36     	; 0x572 <UPDI::enter_prog()+0x74>
     54e:	80 e0       	ldi	r24, 0x00	; 0
     550:	17 de       	rcall	.-978    	; 0x180 <UPDI::updi_reset(bool)>
     552:	88 23       	and	r24, r24
     554:	71 f0       	breq	.+28     	; 0x572 <UPDI::enter_prog()+0x74>
delay_micros():
     556:	89 ef       	ldi	r24, 0xF9	; 249
     558:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     55a:	01 97       	sbiw	r24, 0x01	; 1
     55c:	f1 f7       	brne	.-4      	; 0x55a <UPDI::enter_prog()+0x5c>
     55e:	00 c0       	rjmp	.+0      	; 0x560 <UPDI::enter_prog()+0x62>
     560:	00 00       	nop
is_sys_stat():
     562:	68 e0       	ldi	r22, 0x08	; 8
     564:	8b e0       	ldi	r24, 0x0B	; 11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     566:	b6 de       	rcall	.-660    	; 0x2d4 <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
     568:	88 23       	and	r24, r24
     56a:	a9 f3       	breq	.-22     	; 0x556 <UPDI::enter_prog()+0x58>
     56c:	e0 9a       	sbi	0x1c, 0	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:399
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
        do{ delay_micros(100); } while (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG));
      }
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
      do{ delay_micros(100); } while (!UPDI::is_sys_stat(UPDI::UPDI_SYS_NVMPROG));
     56e:	e1 9a       	sbi	0x1c, 1	; 28
     570:	c1 e0       	ldi	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:401
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     572:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:402
    UPDI_CONTROL |= _BV(UPDI::UPDI_PROG_bp);
     574:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:404
  }
  return true;
     576:	08 95       	ret

00000578 <HV_Pulse()>:
_Z8HV_Pulsev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:405
}
     578:	80 e3       	ldi	r24, 0x30	; 48
     57a:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <UPDI::nvmprog_key+0x7f7251>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:195
/*
 * HVチャージポンプ駆動制御
 */

void TIM::HV_Pulse_ON (void) {
  TCA0_SPLIT_CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm;
     57e:	21 9a       	sbi	0x04, 1	; 4
delay_micros():
     580:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:271
 * HVパルス印加
 */
void HV_Pulse (void) {
  // UPDI_USART.CTRLB = UPDI_USART_OFF;
  TIM::HV_Pulse_ON();
  openDrainWrite(TRST_PIN, LOW);
     582:	93 e1       	ldi	r25, 0x13	; 19
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     584:	01 97       	sbiw	r24, 0x01	; 1
     586:	f1 f7       	brne	.-4      	; 0x584 <HV_Pulse()+0xc>
     588:	00 c0       	rjmp	.+0      	; 0x58a <HV_Pulse()+0x12>
     58a:	00 00       	nop
_Z8HV_Pulsev():
     58c:	21 98       	cbi	0x04, 1	; 4
delay_micros():
     58e:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:273
  delay_micros(2000);
  openDrainWrite(TRST_PIN, HIGH);
     590:	93 e1       	ldi	r25, 0x13	; 19
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     592:	01 97       	sbiw	r24, 0x01	; 1
     594:	f1 f7       	brne	.-4      	; 0x592 <HV_Pulse()+0x1a>
     596:	00 c0       	rjmp	.+0      	; 0x598 <HV_Pulse()+0x20>
     598:	00 00       	nop
_Z8HV_Pulsev():
     59a:	e9 9b       	sbis	0x1d, 1	; 29
     59c:	1a c0       	rjmp	.+52     	; 0x5d2 <HV_Pulse()+0x5a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:275
  delay_micros(2000);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     59e:	2d 9a       	sbi	0x05, 5	; 5
delay_micros():
     5a0:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:276
    digitalWrite(HV8_PIN, HIGH);
     5a2:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     5a4:	01 97       	sbiw	r24, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <HV_Pulse()+0x2c>
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <HV_Pulse()+0x32>
     5aa:	00 00       	nop
_Z8HV_Pulsev():
     5ac:	2d 98       	cbi	0x05, 5	; 5
HV_Pulse_OFF():
     5ae:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <UPDI::nvmprog_key+0x7f7251>
_Z8HV_Pulsev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:199
}

void TIM::HV_Pulse_OFF (void) {
  TCA0_SPLIT_CTRLB = 0;
     5b2:	88 ee       	ldi	r24, 0xE8	; 232
     5b4:	93 e0       	ldi	r25, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:286
    digitalWrite(HV12_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
  }
  TIM::HV_Pulse_OFF();
  UPDI_USART.BAUD = UPDI_BAUD_SHORT_BREAK;
     5b6:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f7058>
     5ba:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f7059>
     5be:	80 e0       	ldi	r24, 0x00	; 0
     5c0:	b0 dd       	rcall	.-1184   	; 0x122 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:287
  UPDI::SEND(UPDI::UPDI_NOP);
     5c2:	80 eb       	ldi	r24, 0xB0	; 176
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f7058>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:288
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     5ca:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f7059>
     5ce:	e3 9a       	sbi	0x1c, 3	; 28
     5d0:	08 95       	ret
     5d2:	e8 99       	sbic	0x1d, 0	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:289
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERHV_bp);
     5d4:	ec cf       	rjmp	.-40     	; 0x5ae <HV_Pulse()+0x36>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:290
}
     5d6:	0e 9a       	sbi	0x01, 6	; 1
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:280
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
    digitalWrite(HV8_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV8_PIN, LOW);
  }
  else if (bit_is_clear(UPDI_NVMCTRL, UPDI::UPDI_LOWF_bp)) {
     5d8:	8f ec       	ldi	r24, 0xCF	; 207
     5da:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:281
    digitalWrite(HV12_PIN, HIGH);
     5dc:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     5de:	f1 f7       	brne	.-4      	; 0x5dc <HV_Pulse()+0x64>
     5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <HV_Pulse()+0x6a>
     5e2:	00 00       	nop
_Z8HV_Pulsev():
     5e4:	0e 98       	cbi	0x01, 6	; 1
     5e6:	e3 cf       	rjmp	.-58     	; 0x5ae <HV_Pulse()+0x36>

000005e8 <UPDI::updi_activate()>:
_ZN4UPDI13updi_activateEv():
     5e8:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:283
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
     5ea:	df 93       	push	r29
     5ec:	1f 92       	push	r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:411

/*
 * UPDI許認可
 */

bool UPDI::updi_activate (void) {
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62
     5f2:	83 e0       	ldi	r24, 0x03	; 3
     5f4:	89 83       	std	Y+1, r24	; 0x01
     5f6:	89 81       	ldd	r24, Y+1	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:412
  volatile uint8_t count = 3;
     5f8:	81 50       	subi	r24, 0x01	; 1
     5fa:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:413
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
     5fc:	88 23       	and	r24, r24
     5fe:	09 f4       	brne	.+2      	; 0x602 <UPDI::updi_activate()+0x1a>
     600:	52 c0       	rjmp	.+164    	; 0x6a6 <UPDI::updi_activate()+0xbe>
     602:	e1 99       	sbic	0x1c, 1	; 28
     604:	50 c0       	rjmp	.+160    	; 0x6a6 <UPDI::updi_activate()+0xbe>
delay_millis():
     606:	2f e3       	ldi	r18, 0x3F	; 63
     608:	3d e0       	ldi	r19, 0x0D	; 13
     60a:	83 e0       	ldi	r24, 0x03	; 3
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
     60c:	21 50       	subi	r18, 0x01	; 1
     60e:	30 40       	sbci	r19, 0x00	; 0
     610:	80 40       	sbci	r24, 0x00	; 0
     612:	e1 f7       	brne	.-8      	; 0x60c <UPDI::updi_activate()+0x24>
     614:	00 c0       	rjmp	.+0      	; 0x616 <UPDI::updi_activate()+0x2e>
     616:	00 00       	nop
_ZN4UPDI13updi_activateEv():
     618:	88 e3       	ldi	r24, 0x38	; 56
     61a:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:415
    delay_millis(100);
    if (setjmp(TIM::CONTEXT) == 0) {
     61c:	0e 94 91 0b 	call	0x1722	; 0x1722 <setjmp>
     620:	89 2b       	or	r24, r25
     622:	09 f0       	breq	.+2      	; 0x626 <UPDI::updi_activate()+0x3e>
     624:	3b c0       	rjmp	.+118    	; 0x69c <UPDI::updi_activate()+0xb4>
Timeout_Start():
     626:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     628:	f8 94       	cli
Timeout_Start():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:123
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    TCB0_CNT = 0;
     62a:	ea e8       	ldi	r30, 0x8A	; 138
     62c:	fa e0       	ldi	r31, 0x0A	; 10
     62e:	10 82       	st	Z, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:124
    TCB0_CCMP = _ms >> 2;
     630:	11 82       	std	Z+1, r1	; 0x01
     632:	25 e2       	ldi	r18, 0x25	; 37
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	ec e8       	ldi	r30, 0x8C	; 140
     638:	fa e0       	ldi	r31, 0x0A	; 10
     63a:	20 83       	st	Z, r18
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:125
    TCB0_INTCTRL = TCB_CAPT_bm;
     63c:	31 83       	std	Z+1, r19	; 0x01
     63e:	21 e0       	ldi	r18, 0x01	; 1
     640:	e5 e8       	ldi	r30, 0x85	; 133
     642:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:126
    TCB0_INTFLAGS = TCB_CAPT_bm;
     644:	20 83       	st	Z, r18
     646:	e6 e8       	ldi	r30, 0x86	; 134
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:127
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     648:	fa e0       	ldi	r31, 0x0A	; 10
     64a:	20 83       	st	Z, r18
     64c:	2f e0       	ldi	r18, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:335
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, UPDI::UPDI_SIB_128 };
  uint8_t* _p = &JTAG2::packet.body[3];
  size_t _len = 16;
  if (!skip) {
    /* HV制御強制許可 */
    if (bit_is_set(UPDI_CONTROL, UPDI_FCHV_bp)) {
     64e:	e0 e8       	ldi	r30, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:336
      HV_Pulse();
     650:	fa e0       	ldi	r31, 0x0A	; 10
     652:	20 83       	st	Z, r18
__iRestore():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:339

      /* send nvmprog_key */
      if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     654:	8f bf       	out	0x3f, r24	; 63
enter_updi():
     656:	e4 9b       	sbis	0x1c, 4	; 28
     658:	2d c0       	rjmp	.+90     	; 0x6b4 <UPDI::updi_activate()+0xcc>
     65a:	8e df       	rcall	.-228    	; 0x578 <HV_Pulse()>
     65c:	6a e0       	ldi	r22, 0x0A	; 10
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	80 eb       	ldi	r24, 0xB0	; 176
     662:	97 e9       	ldi	r25, 0x97	; 151
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:342

      /* restart target : change mode */
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     664:	76 dd       	rcall	.-1300   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     666:	88 23       	and	r24, r24
     668:	c9 f0       	breq	.+50     	; 0x69c <UPDI::updi_activate()+0xb4>
     66a:	81 e0       	ldi	r24, 0x01	; 1
     66c:	89 dd       	rcall	.-1262   	; 0x180 <UPDI::updi_reset(bool)>
     66e:	88 23       	and	r24, r24
     670:	a9 f0       	breq	.+42     	; 0x69c <UPDI::updi_activate()+0xb4>
     672:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
     674:	85 dd       	rcall	.-1270   	; 0x180 <UPDI::updi_reset(bool)>
     676:	88 23       	and	r24, r24
     678:	89 f0       	breq	.+34     	; 0x69c <UPDI::updi_activate()+0xb4>
delay_millis():
     67a:	3f e9       	ldi	r19, 0x9F	; 159
     67c:	86 e8       	ldi	r24, 0x86	; 134
     67e:	91 e0       	ldi	r25, 0x01	; 1
     680:	31 50       	subi	r19, 0x01	; 1
     682:	80 40       	sbci	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:350
      delay_millis(50);
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
     684:	90 40       	sbci	r25, 0x00	; 0
     686:	e1 f7       	brne	.-8      	; 0x680 <UPDI::updi_activate()+0x98>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:351
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     688:	00 c0       	rjmp	.+0      	; 0x68a <UPDI::updi_activate()+0xa2>
     68a:	00 00       	nop
enter_updi():
     68c:	e0 99       	sbic	0x1c, 0	; 28
     68e:	05 c0       	rjmp	.+10     	; 0x69a <UPDI::updi_activate()+0xb2>
     690:	83 dd       	rcall	.-1274   	; 0x198 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:417
  volatile uint8_t count = 3;
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
    delay_millis(100);
    if (setjmp(TIM::CONTEXT) == 0) {
      TIM::Timeout_Start(150);
      UPDI::enter_updi(false) && UPDI::enter_prog();
     692:	88 23       	and	r24, r24
     694:	19 f0       	breq	.+6      	; 0x69c <UPDI::updi_activate()+0xb4>
     696:	8a dd       	rcall	.-1260   	; 0x1ac <UPDI::enter_updi(bool) [clone .part.4]>
_ZN4UPDI13updi_activateEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:419
    }
    TIM::Timeout_Stop();
     698:	81 11       	cpse	r24, r1
     69a:	31 df       	rcall	.-414    	; 0x4fe <UPDI::enter_prog()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:422

    /* 2周目以降は JPショートならHV制御強制を許可 */
    if (!digitalRead(JP_SENSE_PIN)) UPDI_CONTROL |= _BV(UPDI::UPDI_FCHV_bp);
     69c:	7d de       	rcall	.-774    	; 0x398 <TIM::Timeout_Stop()>
     69e:	53 99       	sbic	0x0a, 3	; 10
     6a0:	aa cf       	rjmp	.-172    	; 0x5f6 <UPDI::updi_activate()+0xe>
     6a2:	e4 9a       	sbi	0x1c, 4	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:424
  }
  return bit_is_set(UPDI_CONTROL, UPDI_PROG_bp);
     6a4:	a8 cf       	rjmp	.-176    	; 0x5f6 <UPDI::updi_activate()+0xe>
     6a6:	8c b3       	in	r24, 0x1c	; 28
     6a8:	86 95       	lsr	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:425
}
     6aa:	81 70       	andi	r24, 0x01	; 1
     6ac:	0f 90       	pop	r0
     6ae:	df 91       	pop	r29
     6b0:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:348

      /* wait enable : chip erase mode success */
      delay_millis(50);
    }
    else
      UPDI::BREAK();
     6b2:	08 95       	ret
enter_updi():
     6b4:	fe dd       	rcall	.-1028   	; 0x2b2 <UPDI::BREAK()>
     6b6:	ea cf       	rjmp	.-44     	; 0x68c <UPDI::updi_activate()+0xa4>

000006b8 <NVM::nvm_wait_v3()>:
_ZN3NVM11nvm_wait_v3Ev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:283
  return UPDI_LASTL;
}

/* NVMCTRL v3 */
uint8_t NVM::nvm_wait_v3 (void) {
  while (UPDI::ld8(NVM::NVMCTRL_V3_REG_STATUS) & 3) delay_micros(50);
     6b8:	66 e0       	ldi	r22, 0x06	; 6
     6ba:	70 e1       	ldi	r23, 0x10	; 16
     6bc:	80 e0       	ldi	r24, 0x00	; 0
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	1f de       	rcall	.-962    	; 0x300 <UPDI::ld8(unsigned long)>
     6c2:	83 70       	andi	r24, 0x03	; 3
     6c4:	29 f0       	breq	.+10     	; 0x6d0 <NVM::nvm_wait_v3()+0x18>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     6c6:	86 ea       	ldi	r24, 0xA6	; 166
     6c8:	8a 95       	dec	r24
     6ca:	f1 f7       	brne	.-4      	; 0x6c8 <NVM::nvm_wait_v3()+0x10>
     6cc:	00 c0       	rjmp	.+0      	; 0x6ce <NVM::nvm_wait_v3()+0x16>
     6ce:	f4 cf       	rjmp	.-24     	; 0x6b8 <NVM::nvm_wait_v3()>
_ZN3NVM11nvm_wait_v3Ev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:284
  return UPDI_LASTL;
     6d0:	8e b3       	in	r24, 0x1e	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:285
}
     6d2:	08 95       	ret

000006d4 <NVM::nvm_ctrl_v3(unsigned char)>:
_ZN3NVM11nvm_ctrl_v3Eh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:310
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
}

/* NVMCTRL v3 */
bool NVM::nvm_ctrl_v3 (uint8_t nvmcmd) {
     6d4:	cf 93       	push	r28
     6d6:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:311
  NVM::nvm_wait_v3();
     6d8:	ef df       	rcall	.-34     	; 0x6b8 <NVM::nvm_wait_v3()>
     6da:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:312
  return nvm_ctrl_change(nvmcmd);
     6dc:	cf 91       	pop	r28
     6de:	75 ce       	rjmp	.-790    	; 0x3ca <nvm_ctrl_change(unsigned char)>

000006e0 <NVM::write_flash_v3(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v3Emj():
     6e0:	cf 92       	push	r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:501

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_flash_v3 (uint32_t start_addr, size_t byte_count) {
     6e2:	df 92       	push	r13
     6e4:	ef 92       	push	r14
     6e6:	ff 92       	push	r15
     6e8:	0f 93       	push	r16
     6ea:	1f 93       	push	r17
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:502
  byte_count >>= 1;
     6f0:	ea 01       	movw	r28, r20
     6f2:	d6 95       	lsr	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:503
  if (byte_count == 0 || byte_count > 256) return false;
     6f4:	c7 95       	ror	r28
     6f6:	9e 01       	movw	r18, r28
     6f8:	21 50       	subi	r18, 0x01	; 1
     6fa:	31 09       	sbc	r19, r1
     6fc:	2f 3f       	cpi	r18, 0xFF	; 255
     6fe:	31 05       	cpc	r19, r1
     700:	11 f0       	breq	.+4      	; 0x706 <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
     702:	08 f0       	brcs	.+2      	; 0x706 <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:508

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     704:	5b c0       	rjmp	.+182    	; 0x7bc <NVM::write_flash_v3(unsigned long, unsigned int)+0xdc>
     706:	6b 01       	movw	r12, r22
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:513
    NVM::nvm_wait_v3();
    if (!UPDI::st8(start_addr, 0xFF)) return false;
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
  }
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPBCLR)) return false;
     708:	7c 01       	movw	r14, r24
     70a:	e2 9b       	sbis	0x1c, 2	; 28
     70c:	42 c0       	rjmp	.+132    	; 0x792 <NVM::write_flash_v3(unsigned long, unsigned int)+0xb2>
     70e:	8f e0       	ldi	r24, 0x0F	; 15
     710:	e1 df       	rcall	.-62     	; 0x6d4 <NVM::nvm_ctrl_v3(unsigned char)>
     712:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:516

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     714:	09 f4       	brne	.+2      	; 0x718 <NVM::write_flash_v3(unsigned long, unsigned int)+0x38>
     716:	52 c0       	rjmp	.+164    	; 0x7bc <NVM::write_flash_v3(unsigned long, unsigned int)+0xdc>
     718:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     71c:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     720:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:517
  set_repeat_rsd[5] = byte_count - 1;
     724:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     728:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:518
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     72a:	81 50       	subi	r24, 0x01	; 1
     72c:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
     730:	65 e0       	ldi	r22, 0x05	; 5
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	8b e2       	ldi	r24, 0x2B	; 43
     736:	98 e3       	ldi	r25, 0x38	; 56
     738:	0c dd       	rcall	.-1512   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:519
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     73a:	88 23       	and	r24, r24
     73c:	09 f4       	brne	.+2      	; 0x740 <NVM::write_flash_v3(unsigned long, unsigned int)+0x60>
     73e:	3e c0       	rjmp	.+124    	; 0x7bc <NVM::write_flash_v3(unsigned long, unsigned int)+0xdc>
     740:	e4 dc       	rcall	.-1592   	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:520
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     742:	80 34       	cpi	r24, 0x40	; 64
     744:	09 f0       	breq	.+2      	; 0x748 <NVM::write_flash_v3(unsigned long, unsigned int)+0x68>
     746:	3a c0       	rjmp	.+116    	; 0x7bc <NVM::write_flash_v3(unsigned long, unsigned int)+0xdc>
     748:	68 e0       	ldi	r22, 0x08	; 8
     74a:	70 e0       	ldi	r23, 0x00	; 0
     74c:	8e e1       	ldi	r24, 0x1E	; 30
     74e:	98 e3       	ldi	r25, 0x38	; 56
     750:	00 dd       	rcall	.-1536   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:525

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     752:	88 23       	and	r24, r24
     754:	99 f1       	breq	.+102    	; 0x7bc <NVM::write_flash_v3(unsigned long, unsigned int)+0xdc>
     756:	0f e5       	ldi	r16, 0x5F	; 95
     758:	18 e3       	ldi	r17, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:526
    UPDI::SEND(*p++);
     75a:	f8 01       	movw	r30, r16
     75c:	82 89       	ldd	r24, Z+18	; 0x12
     75e:	e1 dc       	rcall	.-1598   	; 0x122 <UPDI::SEND(unsigned char)>
     760:	f8 01       	movw	r30, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:527
  } while (--byte_count);
     762:	83 89       	ldd	r24, Z+19	; 0x13
     764:	de dc       	rcall	.-1604   	; 0x122 <UPDI::SEND(unsigned char)>
     766:	21 97       	sbiw	r28, 0x01	; 1
     768:	0e 5f       	subi	r16, 0xFE	; 254
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     76a:	1f 4f       	sbci	r17, 0xFF	; 255
     76c:	20 97       	sbiw	r28, 0x00	; 0
     76e:	a9 f7       	brne	.-22     	; 0x75a <NVM::write_flash_v3(unsigned long, unsigned int)+0x7a>
delay_micros():
     770:	f2 e9       	ldi	r31, 0x92	; 146
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:531
  UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     772:	fa 95       	dec	r31
     774:	f1 f7       	brne	.-4      	; 0x772 <NVM::write_flash_v3(unsigned long, unsigned int)+0x92>
     776:	00 c0       	rjmp	.+0      	; 0x778 <NVM::write_flash_v3(unsigned long, unsigned int)+0x98>
_ZN3NVM14write_flash_v3Emj():
     778:	0f dd       	rcall	.-1506   	; 0x198 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:533

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
     77a:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:534
}
     77c:	f9 f0       	breq	.+62     	; 0x7bc <NVM::write_flash_v3(unsigned long, unsigned int)+0xdc>
     77e:	84 e0       	ldi	r24, 0x04	; 4
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	1f 91       	pop	r17
     786:	0f 91       	pop	r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:533
  UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
     788:	ff 90       	pop	r15
     78a:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:508
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     78c:	df 90       	pop	r13
     78e:	cf 90       	pop	r12
     790:	a1 cf       	rjmp	.-190    	; 0x6d4 <NVM::nvm_ctrl_v3(unsigned char)>
     792:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     796:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	86 23       	and	r24, r22
     79e:	9d 21       	and	r25, r13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:509
    NVM::nvm_wait_v3();
     7a0:	89 2b       	or	r24, r25
     7a2:	09 f0       	breq	.+2      	; 0x7a6 <NVM::write_flash_v3(unsigned long, unsigned int)+0xc6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:510
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     7a4:	b4 cf       	rjmp	.-152    	; 0x70e <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     7a6:	88 df       	rcall	.-240    	; 0x6b8 <NVM::nvm_wait_v3()>
     7a8:	4f ef       	ldi	r20, 0xFF	; 255
     7aa:	c7 01       	movw	r24, r14
     7ac:	b6 01       	movw	r22, r12
     7ae:	41 dd       	rcall	.-1406   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
     7b0:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:511
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
     7b2:	21 f0       	breq	.+8      	; 0x7bc <NVM::write_flash_v3(unsigned long, unsigned int)+0xdc>
     7b4:	88 e0       	ldi	r24, 0x08	; 8
     7b6:	8e df       	rcall	.-228    	; 0x6d4 <NVM::nvm_ctrl_v3(unsigned char)>
     7b8:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:534

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
}
     7ba:	a9 cf       	rjmp	.-174    	; 0x70e <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     7bc:	80 e0       	ldi	r24, 0x00	; 0
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	1f 91       	pop	r17
     7c4:	0f 91       	pop	r16
     7c6:	ff 90       	pop	r15
     7c8:	ef 90       	pop	r14
     7ca:	df 90       	pop	r13
     7cc:	cf 90       	pop	r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:277
 */

/* NVMCTRL v0 */
/* NVMCTRL v2 */
uint8_t NVM::nvm_wait (void) {
  while (UPDI::ld8(NVM::NVMCTRL_REG_STATUS) & 3) delay_micros(50);
     7ce:	08 95       	ret

000007d0 <NVM::nvm_wait()>:
_ZN3NVM8nvm_waitEv():
     7d0:	62 e0       	ldi	r22, 0x02	; 2
     7d2:	70 e1       	ldi	r23, 0x10	; 16
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	93 dd       	rcall	.-1242   	; 0x300 <UPDI::ld8(unsigned long)>
     7da:	83 70       	andi	r24, 0x03	; 3
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     7dc:	29 f0       	breq	.+10     	; 0x7e8 <NVM::nvm_wait()+0x18>
delay_micros():
     7de:	86 ea       	ldi	r24, 0xA6	; 166
     7e0:	8a 95       	dec	r24
     7e2:	f1 f7       	brne	.-4      	; 0x7e0 <NVM::nvm_wait()+0x10>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:278
  return UPDI_LASTL;
     7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <NVM::nvm_wait()+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:279
}
     7e6:	f4 cf       	rjmp	.-24     	; 0x7d0 <NVM::nvm_wait()>
_ZN3NVM8nvm_waitEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:304
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
     7e8:	8e b3       	in	r24, 0x1e	; 30
     7ea:	08 95       	ret

000007ec <NVM::nvm_ctrl_v2(unsigned char)>:
_ZN3NVM11nvm_ctrl_v2Eh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:305
  NVM::nvm_wait();
     7ec:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:306
  return nvm_ctrl_change(nvmcmd);
     7ee:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:307
}
     7f0:	ef df       	rcall	.-34     	; 0x7d0 <NVM::nvm_wait()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:306
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
     7f2:	8c 2f       	mov	r24, r28
     7f4:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:466
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_flash_v2 (uint32_t start_addr, size_t byte_count) {
     7f6:	e9 cd       	rjmp	.-1070   	; 0x3ca <nvm_ctrl_change(unsigned char)>

000007f8 <NVM::write_flash_v2(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v2Emj():
     7f8:	cf 92       	push	r12
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:467
  byte_count >>= 1;
     802:	1f 93       	push	r17
     804:	cf 93       	push	r28
     806:	df 93       	push	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:468
  if (byte_count == 0 || byte_count > 256) return false;
     808:	ea 01       	movw	r28, r20
     80a:	d6 95       	lsr	r29
     80c:	c7 95       	ror	r28
     80e:	9e 01       	movw	r18, r28
     810:	21 50       	subi	r18, 0x01	; 1
     812:	31 09       	sbc	r19, r1
     814:	2f 3f       	cpi	r18, 0xFF	; 255
     816:	31 05       	cpc	r19, r1
     818:	11 f0       	breq	.+4      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:473

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     81a:	08 f0       	brcs	.+2      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     81c:	5a c0       	rjmp	.+180    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:477
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
    if (!UPDI::st8(start_addr, 0xFF)) return false;
  }
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLWR)) return false;
     81e:	6b 01       	movw	r12, r22
     820:	7c 01       	movw	r14, r24
     822:	e2 9b       	sbis	0x1c, 2	; 28
     824:	42 c0       	rjmp	.+132    	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
     826:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:480

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     828:	e1 df       	rcall	.-62     	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     82a:	88 23       	and	r24, r24
     82c:	09 f4       	brne	.+2      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     82e:	51 c0       	rjmp	.+162    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     830:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     834:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:481
  set_repeat_rsd[5] = byte_count - 1;
     838:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
     83c:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:482
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     840:	8c 2f       	mov	r24, r28
     842:	81 50       	subi	r24, 0x01	; 1
     844:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
     848:	65 e0       	ldi	r22, 0x05	; 5
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:483
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     84e:	98 e3       	ldi	r25, 0x38	; 56
     850:	80 dc       	rcall	.-1792   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     852:	88 23       	and	r24, r24
     854:	09 f4       	brne	.+2      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
     856:	3d c0       	rjmp	.+122    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:484
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     858:	58 dc       	rcall	.-1872   	; 0x10a <UPDI::RECV()>
     85a:	80 34       	cpi	r24, 0x40	; 64
     85c:	09 f0       	breq	.+2      	; 0x860 <__DATA_REGION_LENGTH__+0x60>
     85e:	39 c0       	rjmp	.+114    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     860:	68 e0       	ldi	r22, 0x08	; 8
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	8e e1       	ldi	r24, 0x1E	; 30
     866:	98 e3       	ldi	r25, 0x38	; 56
     868:	74 dc       	rcall	.-1816   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     86a:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:489

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     86c:	91 f1       	breq	.+100    	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     86e:	0f e5       	ldi	r16, 0x5F	; 95
     870:	18 e3       	ldi	r17, 0x38	; 56
     872:	f8 01       	movw	r30, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:490
    UPDI::SEND(*p++);
     874:	82 89       	ldd	r24, Z+18	; 0x12
     876:	55 dc       	rcall	.-1878   	; 0x122 <UPDI::SEND(unsigned char)>
     878:	f8 01       	movw	r30, r16
     87a:	83 89       	ldd	r24, Z+19	; 0x13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:491
  } while (--byte_count);
     87c:	52 dc       	rcall	.-1884   	; 0x122 <UPDI::SEND(unsigned char)>
     87e:	21 97       	sbiw	r28, 0x01	; 1
     880:	0e 5f       	subi	r16, 0xFE	; 254
     882:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     884:	20 97       	sbiw	r28, 0x00	; 0
     886:	a9 f7       	brne	.-22     	; 0x872 <__DATA_REGION_LENGTH__+0x72>
delay_micros():
     888:	f2 e9       	ldi	r31, 0x92	; 146
     88a:	fa 95       	dec	r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:495
  UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     88c:	f1 f7       	brne	.-4      	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
     88e:	00 c0       	rjmp	.+0      	; 0x890 <__DATA_REGION_LENGTH__+0x90>
_ZN3NVM14write_flash_v2Emj():
     890:	83 dc       	rcall	.-1786   	; 0x198 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
     892:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:497

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     894:	f1 f0       	breq	.+60     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:498
}
     896:	80 e0       	ldi	r24, 0x00	; 0
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	1f 91       	pop	r17
     89e:	0f 91       	pop	r16
     8a0:	ff 90       	pop	r15
     8a2:	ef 90       	pop	r14
     8a4:	df 90       	pop	r13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:497
  UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     8a6:	cf 90       	pop	r12
     8a8:	a1 cf       	rjmp	.-190    	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:473
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     8aa:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     8ae:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     8b2:	01 97       	sbiw	r24, 0x01	; 1
     8b4:	86 23       	and	r24, r22
     8b6:	9d 21       	and	r25, r13
     8b8:	89 2b       	or	r24, r25
     8ba:	09 f0       	breq	.+2      	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     8bc:	b4 cf       	rjmp	.-152    	; 0x826 <__DATA_REGION_LENGTH__+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:474
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     8be:	88 e0       	ldi	r24, 0x08	; 8
     8c0:	95 df       	rcall	.-214    	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     8c2:	88 23       	and	r24, r24
     8c4:	31 f0       	breq	.+12     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     8c6:	4f ef       	ldi	r20, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:475
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     8c8:	c7 01       	movw	r24, r14
     8ca:	b6 01       	movw	r22, r12
     8cc:	b2 dc       	rcall	.-1692   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
     8ce:	81 11       	cpse	r24, r1
     8d0:	aa cf       	rjmp	.-172    	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:498

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}
     8d6:	cf 91       	pop	r28
     8d8:	1f 91       	pop	r17
     8da:	0f 91       	pop	r16
     8dc:	ff 90       	pop	r15
     8de:	ef 90       	pop	r14
     8e0:	df 90       	pop	r13
     8e2:	cf 90       	pop	r12
     8e4:	08 95       	ret

000008e6 <UPDI::runtime(unsigned char)>:
_ZN4UPDI7runtimeEh():
     8e6:	af 92       	push	r10
     8e8:	bf 92       	push	r11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:431

/*
 * UPDI制御プロセス
 */

bool UPDI::runtime (uint8_t updi_cmd) {
     8ea:	cf 92       	push	r12
     8ec:	df 92       	push	r13
     8ee:	ef 92       	push	r14
     8f0:	ff 92       	push	r15
     8f2:	0f 93       	push	r16
     8f4:	1f 93       	push	r17
     8f6:	cf 93       	push	r28
     8f8:	df 93       	push	r29
     8fa:	cd b7       	in	r28, 0x3d	; 61
     8fc:	de b7       	in	r29, 0x3e	; 62
     8fe:	26 97       	sbiw	r28, 0x06	; 6
     900:	cd bf       	out	0x3d, r28	; 61
     902:	de bf       	out	0x3e, r29	; 62
     904:	8e 83       	std	Y+6, r24	; 0x06
     906:	1d 82       	std	Y+5, r1	; 0x05
     908:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:432
  volatile bool _result = false;
     90a:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:434
  uint16_t limit = 4000;
  if (setjmp(TIM::CONTEXT) == 0) {
     90c:	0a d7       	rcall	.+3604   	; 0x1722 <setjmp>
     90e:	89 2b       	or	r24, r25
     910:	09 f0       	breq	.+2      	; 0x914 <UPDI::runtime(unsigned char)+0x2e>
     912:	26 c1       	rjmp	.+588    	; 0xb60 <UPDI::runtime(unsigned char)+0x27a>
Timeout_Start():
     914:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
     916:	f8 94       	cli
Timeout_Start():
     918:	10 92 8a 0a 	sts	0x0A8A, r1	; 0x800a8a <UPDI::nvmprog_key+0x7f72da>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
     91c:	10 92 8b 0a 	sts	0x0A8B, r1	; 0x800a8b <UPDI::nvmprog_key+0x7f72db>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:123
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    TCB0_CNT = 0;
     920:	28 ee       	ldi	r18, 0xE8	; 232
     922:	33 e0       	ldi	r19, 0x03	; 3
     924:	20 93 8c 0a 	sts	0x0A8C, r18	; 0x800a8c <UPDI::nvmprog_key+0x7f72dc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:124
    TCB0_CCMP = _ms >> 2;
     928:	30 93 8d 0a 	sts	0x0A8D, r19	; 0x800a8d <UPDI::nvmprog_key+0x7f72dd>
     92c:	81 e0       	ldi	r24, 0x01	; 1
     92e:	80 93 85 0a 	sts	0x0A85, r24	; 0x800a85 <UPDI::nvmprog_key+0x7f72d5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:125
    TCB0_INTCTRL = TCB_CAPT_bm;
     932:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f72d6>
     936:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:126
    TCB0_INTFLAGS = TCB_CAPT_bm;
     938:	80 93 80 0a 	sts	0x0A80, r24	; 0x800a80 <UPDI::nvmprog_key+0x7f72d0>
__iRestore():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:127
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     93c:	9f bf       	out	0x3f, r25	; 63
_ZN4UPDI7runtimeEh():
     93e:	8e 81       	ldd	r24, Y+6	; 0x06
     940:	83 30       	cpi	r24, 0x03	; 3
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     942:	09 f4       	brne	.+2      	; 0x946 <UPDI::runtime(unsigned char)+0x60>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:436
    TIM::Timeout_Start(limit);
    switch (updi_cmd) {
     944:	07 c3       	rjmp	.+1550   	; 0xf54 <UPDI::runtime(unsigned char)+0x66e>
     946:	84 30       	cpi	r24, 0x04	; 4
     948:	09 f4       	brne	.+2      	; 0x94c <UPDI::runtime(unsigned char)+0x66>
     94a:	51 c3       	rjmp	.+1698   	; 0xfee <UPDI::runtime(unsigned char)+0x708>
     94c:	82 30       	cpi	r24, 0x02	; 2
     94e:	09 f4       	brne	.+2      	; 0x952 <UPDI::runtime(unsigned char)+0x6c>
     950:	96 c0       	rjmp	.+300    	; 0xa7e <UPDI::runtime(unsigned char)+0x198>
read_memory():
     952:	ef e5       	ldi	r30, 0x5F	; 95
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:49
/*
 * メモリ読込中核
 */

bool NVM::read_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     954:	f8 e3       	ldi	r31, 0x38	; 56
     956:	81 85       	ldd	r24, Z+9	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:50
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     958:	02 85       	ldd	r16, Z+10	; 0x0a
     95a:	13 85       	ldd	r17, Z+11	; 0x0b
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:51
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     95c:	46 85       	ldd	r20, Z+14	; 0x0e
     95e:	57 85       	ldd	r21, Z+15	; 0x0f
     960:	60 89       	ldd	r22, Z+16	; 0x10
     962:	71 89       	ldd	r23, Z+17	; 0x11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:52
  JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
     964:	92 e8       	ldi	r25, 0x82	; 130
     966:	90 87       	std	Z+8, r25	; 0x08
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:53
  JTAG2::packet.size_word[0] = byte_count + 1;
     968:	98 01       	movw	r18, r16
     96a:	2f 5f       	subi	r18, 0xFF	; 255
     96c:	3f 4f       	sbci	r19, 0xFF	; 255
     96e:	23 83       	std	Z+3, r18	; 0x03
     970:	34 83       	std	Z+4, r19	; 0x04
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:57
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     972:	02 30       	cpi	r16, 0x02	; 2
     974:	11 05       	cpc	r17, r1
     976:	08 f4       	brcc	.+2      	; 0x97a <UPDI::runtime(unsigned char)+0x94>
     978:	46 c0       	rjmp	.+140    	; 0xa06 <UPDI::runtime(unsigned char)+0x120>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:58
    switch (mem_type) {
     97a:	80 3c       	cpi	r24, 0xC0	; 192
     97c:	09 f4       	brne	.+2      	; 0x980 <UPDI::runtime(unsigned char)+0x9a>
     97e:	5c c0       	rjmp	.+184    	; 0xa38 <UPDI::runtime(unsigned char)+0x152>
     980:	48 f4       	brcc	.+18     	; 0x994 <UPDI::runtime(unsigned char)+0xae>
     982:	82 32       	cpi	r24, 0x22	; 34
     984:	09 f4       	brne	.+2      	; 0x988 <UPDI::runtime(unsigned char)+0xa2>
     986:	65 c0       	rjmp	.+202    	; 0xa52 <UPDI::runtime(unsigned char)+0x16c>
     988:	18 f0       	brcs	.+6      	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     98a:	82 5b       	subi	r24, 0xB2	; 178
     98c:	84 30       	cpi	r24, 0x04	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:304
bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) HV_Pulse();

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     98e:	d8 f1       	brcs	.+118    	; 0xa06 <UPDI::runtime(unsigned char)+0x120>
_ZN4UPDI7runtimeEh():
     990:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:58
     992:	33 c0       	rjmp	.+102    	; 0x9fa <UPDI::runtime(unsigned char)+0x114>
read_memory():
     994:	84 3c       	cpi	r24, 0xC4	; 196
     996:	09 f4       	brne	.+2      	; 0x99a <UPDI::runtime(unsigned char)+0xb4>
     998:	5c c0       	rjmp	.+184    	; 0xa52 <UPDI::runtime(unsigned char)+0x16c>
     99a:	88 f5       	brcc	.+98     	; 0x9fe <UPDI::runtime(unsigned char)+0x118>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:66
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
      }
      /* Flash 領域 */
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     99c:	81 3c       	cpi	r24, 0xC1	; 193
     99e:	c1 f7       	brne	.-16     	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     9a0:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
     9a4:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     9a8:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:242
 * Flash領域ワード読込
 */

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  uint8_t* p = &JTAG2::packet.body[1];
  byte_count >>= 1;
     9ac:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
read_flash():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:243
  if (byte_count == 0 || byte_count > 256) return false;
     9b0:	16 95       	lsr	r17
     9b2:	07 95       	ror	r16
     9b4:	98 01       	movw	r18, r16
     9b6:	21 50       	subi	r18, 0x01	; 1
     9b8:	31 09       	sbc	r19, r1
     9ba:	2f 3f       	cpi	r18, 0xFF	; 255
     9bc:	31 05       	cpc	r19, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:66
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
      }
      /* Flash 領域 */
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     9be:	09 f0       	breq	.+2      	; 0x9c2 <UPDI::runtime(unsigned char)+0xdc>
     9c0:	38 f7       	brcc	.-50     	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
read_memory():
     9c2:	48 0f       	add	r20, r24
     9c4:	59 1f       	adc	r21, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:244

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  uint8_t* p = &JTAG2::packet.body[1];
  byte_count >>= 1;
  if (byte_count == 0 || byte_count > 256) return false;
  if (!UPDI::send_repeat_header(
     9c6:	6a 1f       	adc	r22, r26
     9c8:	7b 1f       	adc	r23, r27
read_flash():
     9ca:	98 01       	movw	r18, r16
     9cc:	81 e2       	ldi	r24, 0x21	; 33
     9ce:	52 dc       	rcall	.-1884   	; 0x274 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     9d0:	88 23       	and	r24, r24
     9d2:	f1 f2       	breq	.-68     	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     9d4:	6f e5       	ldi	r22, 0x5F	; 95
     9d6:	e6 2e       	mov	r14, r22
     9d8:	68 e3       	ldi	r22, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:250
    (UPDI::UPDI_LD | UPDI::UPDI_DATA2),
    start_addr,
    byte_count
  )) return false;
  do {
    *p++ = UPDI::RECV();
     9da:	f6 2e       	mov	r15, r22
     9dc:	96 db       	rcall	.-2260   	; 0x10a <UPDI::RECV()>
     9de:	f7 01       	movw	r30, r14
     9e0:	81 87       	std	Z+9, r24	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:251
    *p++ = UPDI::RECV();
     9e2:	93 db       	rcall	.-2266   	; 0x10a <UPDI::RECV()>
     9e4:	f7 01       	movw	r30, r14
     9e6:	82 87       	std	Z+10, r24	; 0x0a
     9e8:	01 50       	subi	r16, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:252
  } while (--byte_count);
     9ea:	11 09       	sbc	r17, r1
     9ec:	f2 e0       	ldi	r31, 0x02	; 2
     9ee:	ef 0e       	add	r14, r31
     9f0:	f1 1c       	adc	r15, r1
     9f2:	01 15       	cp	r16, r1
     9f4:	11 05       	cpc	r17, r1
     9f6:	91 f7       	brne	.-28     	; 0x9dc <UPDI::runtime(unsigned char)+0xf6>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:253
  return true;
     9f8:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:456
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
     9fa:	8d 83       	std	Y+5, r24	; 0x05
     9fc:	b1 c0       	rjmp	.+354    	; 0xb60 <UPDI::runtime(unsigned char)+0x27a>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:58
  JTAG2::packet.size_word[0] = byte_count + 1;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     9fe:	85 3c       	cpi	r24, 0xC5	; 197
     a00:	a9 f1       	breq	.+106    	; 0xa6c <UPDI::runtime(unsigned char)+0x186>
     a02:	86 3c       	cpi	r24, 0xC6	; 198
     a04:	29 f6       	brne	.-118    	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
read_data():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:262
 * データ領域バイト読込
 */

bool NVM::read_data (uint32_t start_addr, size_t byte_count) {
  uint8_t* p = &JTAG2::packet.body[1];
  if (byte_count == 0 || byte_count > 256) return false;
     a06:	c8 01       	movw	r24, r16
     a08:	01 97       	sbiw	r24, 0x01	; 1
     a0a:	8f 3f       	cpi	r24, 0xFF	; 255
     a0c:	91 05       	cpc	r25, r1
     a0e:	11 f0       	breq	.+4      	; 0xa14 <UPDI::runtime(unsigned char)+0x12e>
     a10:	08 f0       	brcs	.+2      	; 0xa14 <UPDI::runtime(unsigned char)+0x12e>
     a12:	be cf       	rjmp	.-132    	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:263
  if (!UPDI::send_repeat_header(
     a14:	98 01       	movw	r18, r16
     a16:	80 e2       	ldi	r24, 0x20	; 32
     a18:	2d dc       	rcall	.-1958   	; 0x274 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     a1a:	88 23       	and	r24, r24
     a1c:	09 f4       	brne	.+2      	; 0xa20 <UPDI::runtime(unsigned char)+0x13a>
     a1e:	b8 cf       	rjmp	.-144    	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     a20:	58 e6       	ldi	r21, 0x68	; 104
     a22:	e5 2e       	mov	r14, r21
     a24:	58 e3       	ldi	r21, 0x38	; 56
     a26:	f5 2e       	mov	r15, r21
     a28:	70 db       	rcall	.-2336   	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:266
    (UPDI::UPDI_LD | UPDI::UPDI_DATA1),
    start_addr, byte_count)) return false;
  do { *p++ = UPDI::RECV(); } while (--byte_count);
     a2a:	f7 01       	movw	r30, r14
     a2c:	81 93       	st	Z+, r24
     a2e:	7f 01       	movw	r14, r30
     a30:	01 50       	subi	r16, 0x01	; 1
     a32:	11 09       	sbc	r17, r1
     a34:	c9 f7       	brne	.-14     	; 0xa28 <UPDI::runtime(unsigned char)+0x142>
     a36:	e0 cf       	rjmp	.-64     	; 0x9f8 <UPDI::runtime(unsigned char)+0x112>
read_memory():
     a38:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:62
  if (byte_count >= 2) {
    switch (mem_type) {
      /* Data 領域 */
      /* これは常に絶対アドレス */
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
     a3c:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     a40:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
     a44:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
     a48:	48 1b       	sub	r20, r24
     a4a:	59 0b       	sbc	r21, r25
     a4c:	6a 0b       	sbc	r22, r26
     a4e:	7b 0b       	sbc	r23, r27
     a50:	a7 cf       	rjmp	.-178    	; 0x9a0 <UPDI::runtime(unsigned char)+0xba>
     a52:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_eeprom_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:72
        return NVM::read_flash(start_addr, byte_count);
      }
      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :          // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA : {  // 0xC4
        start_addr += NVM::nvm_eeprom_offset;
     a56:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_eeprom_offset+0x1>
     a5a:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_eeprom_offset+0x2>
     a5e:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_eeprom_offset+0x3>
     a62:	48 0f       	add	r20, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:77
        break;
      }
      /* USERROW/USERSIG */
      case JTAG2::MTYPE_USERSIG : {       // 0xC5
        start_addr += NVM::nvm_user_sig_offset;
     a64:	59 1f       	adc	r21, r25
     a66:	6a 1f       	adc	r22, r26
     a68:	7b 1f       	adc	r23, r27
     a6a:	cd cf       	rjmp	.-102    	; 0xa06 <UPDI::runtime(unsigned char)+0x120>
     a6c:	80 91 57 38 	lds	r24, 0x3857	; 0x803857 <NVM::nvm_user_sig_offset>
     a70:	90 91 58 38 	lds	r25, 0x3858	; 0x803858 <NVM::nvm_user_sig_offset+0x1>
     a74:	a0 91 59 38 	lds	r26, 0x3859	; 0x803859 <NVM::nvm_user_sig_offset+0x2>
     a78:	b0 91 5a 38 	lds	r27, 0x385A	; 0x80385a <NVM::nvm_user_sig_offset+0x3>
     a7c:	f2 cf       	rjmp	.-28     	; 0xa62 <UPDI::runtime(unsigned char)+0x17c>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:442
      case UPDI::UPDI_CMD_READ_MEMORY : {
        _result = NVM::read_memory();
        break;
      }
      case UPDI::UPDI_CMD_WRITE_MEMORY : {
        if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) break;
     a7e:	e1 9b       	sbis	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     a80:	6f c0       	rjmp	.+222    	; 0xb60 <UPDI::runtime(unsigned char)+0x27a>
is_sys_stat():
     a82:	61 e0       	ldi	r22, 0x01	; 1
     a84:	8b e0       	ldi	r24, 0x0B	; 11
     a86:	26 dc       	rcall	.-1972   	; 0x2d4 <UPDI::is_cs_stat(unsigned char, unsigned char)>
     a88:	b8 2e       	mov	r11, r24
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:443
        _result = NVM::read_memory();
        break;
      }
      case UPDI::UPDI_CMD_WRITE_MEMORY : {
        if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) break;
        if (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS)) break;
     a8a:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:444
        if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
     a8c:	69 c0       	rjmp	.+210    	; 0xb60 <UPDI::runtime(unsigned char)+0x27a>
     a8e:	f3 9b       	sbis	0x1e, 3	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:100
/*
 * メモリ書込中核
 */

bool NVM::write_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     a90:	67 c0       	rjmp	.+206    	; 0xb60 <UPDI::runtime(unsigned char)+0x27a>
write_memory():
     a92:	ef e5       	ldi	r30, 0x5F	; 95
     a94:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:101
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     a96:	81 85       	ldd	r24, Z+9	; 0x09
     a98:	02 85       	ldd	r16, Z+10	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:102
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     a9a:	13 85       	ldd	r17, Z+11	; 0x0b
     a9c:	c6 84       	ldd	r12, Z+14	; 0x0e
     a9e:	d7 84       	ldd	r13, Z+15	; 0x0f
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:106
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     aa0:	e0 88       	ldd	r14, Z+16	; 0x10
     aa2:	f1 88       	ldd	r15, Z+17	; 0x11
     aa4:	02 30       	cpi	r16, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:107
    switch (mem_type) {
     aa6:	11 05       	cpc	r17, r1
     aa8:	08 f4       	brcc	.+2      	; 0xaac <UPDI::runtime(unsigned char)+0x1c6>
     aaa:	06 c1       	rjmp	.+524    	; 0xcb8 <UPDI::runtime(unsigned char)+0x3d2>
     aac:	82 3c       	cpi	r24, 0xC2	; 194
     aae:	08 f0       	brcs	.+2      	; 0xab2 <UPDI::runtime(unsigned char)+0x1cc>
     ab0:	50 c0       	rjmp	.+160    	; 0xb52 <UPDI::runtime(unsigned char)+0x26c>
     ab2:	80 3c       	cpi	r24, 0xC0	; 192
     ab4:	08 f0       	brcs	.+2      	; 0xab8 <UPDI::runtime(unsigned char)+0x1d2>
     ab6:	68 c0       	rjmp	.+208    	; 0xb88 <UPDI::runtime(unsigned char)+0x2a2>
     ab8:	82 32       	cpi	r24, 0x22	; 34
     aba:	19 f0       	breq	.+6      	; 0xac2 <UPDI::runtime(unsigned char)+0x1dc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:123
      }
      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :        // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA :  // 0xC4
      case JTAG2::MTYPE_LOCK_BITS : {   // 0xB3
        start_addr += NVM::nvm_eeprom_offset;
     abc:	83 3b       	cpi	r24, 0xB3	; 179
     abe:	09 f0       	breq	.+2      	; 0xac2 <UPDI::runtime(unsigned char)+0x1dc>
     ac0:	4e c0       	rjmp	.+156    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     ac2:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_eeprom_offset>
     ac6:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_eeprom_offset+0x1>
     aca:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_eeprom_offset+0x2>
     ace:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_eeprom_offset+0x3>
     ad2:	c8 0e       	add	r12, r24
     ad4:	d9 1e       	adc	r13, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:229
        /* megaAVR/tinyAVR is EEPROM */
        /* この系統は EEPROM として実装されている */
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     ad6:	ea 1e       	adc	r14, r26
     ad8:	fb 1e       	adc	r15, r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:406
  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_eeprom_v3 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     ada:	c8 01       	movw	r24, r16
     adc:	01 97       	sbiw	r24, 0x01	; 1
     ade:	ea 9b       	sbis	0x1d, 2	; 29
     ae0:	b6 c1       	rjmp	.+876    	; 0xe4e <UPDI::runtime(unsigned char)+0x568>
write_eeprom_v3():
     ae2:	8f 3f       	cpi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:408

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD)) return false;
     ae4:	91 05       	cpc	r25, r1
     ae6:	11 f0       	breq	.+4      	; 0xaec <UPDI::runtime(unsigned char)+0x206>
     ae8:	08 f0       	brcs	.+2      	; 0xaec <UPDI::runtime(unsigned char)+0x206>
     aea:	39 c0       	rjmp	.+114    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     aec:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:411

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     aee:	f2 dd       	rcall	.-1052   	; 0x6d4 <NVM::nvm_ctrl_v3(unsigned char)>
     af0:	88 23       	and	r24, r24
     af2:	a9 f1       	breq	.+106    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     af4:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     af8:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     afc:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:412
  set_repeat[2] = (uint8_t)byte_count - 1;
     b00:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     b04:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:413
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     b06:	80 0f       	add	r24, r16
     b08:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
     b0c:	65 e0       	ldi	r22, 0x05	; 5
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	8b e2       	ldi	r24, 0x2B	; 43
     b12:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:414
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     b14:	1e db       	rcall	.-2500   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     b16:	88 23       	and	r24, r24
     b18:	11 f1       	breq	.+68     	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     b1a:	f7 da       	rcall	.-2578   	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:415
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     b1c:	80 34       	cpi	r24, 0x40	; 64
     b1e:	f9 f4       	brne	.+62     	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     b20:	65 e0       	ldi	r22, 0x05	; 5
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	86 e2       	ldi	r24, 0x26	; 38
     b26:	98 e3       	ldi	r25, 0x38	; 56
     b28:	14 db       	rcall	.-2520   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     b2a:	88 23       	and	r24, r24
     b2c:	c1 f0       	breq	.+48     	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     b2e:	21 e7       	ldi	r18, 0x71	; 113
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:420

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     b30:	e2 2e       	mov	r14, r18
     b32:	28 e3       	ldi	r18, 0x38	; 56
     b34:	f2 2e       	mov	r15, r18
     b36:	f7 01       	movw	r30, r14
     b38:	81 91       	ld	r24, Z+
     b3a:	7f 01       	movw	r14, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:421
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     b3c:	f2 da       	rcall	.-2588   	; 0x122 <UPDI::SEND(unsigned char)>
     b3e:	88 23       	and	r24, r24
     b40:	71 f0       	breq	.+28     	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     b42:	e3 da       	rcall	.-2618   	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:422
  } while (--byte_count);
     b44:	80 34       	cpi	r24, 0x40	; 64
     b46:	59 f4       	brne	.+22     	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     b48:	01 50       	subi	r16, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:424

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW);
     b4a:	11 09       	sbc	r17, r1
     b4c:	a1 f7       	brne	.-24     	; 0xb36 <UPDI::runtime(unsigned char)+0x250>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:107
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     b4e:	85 e1       	ldi	r24, 0x15	; 21
     b50:	cf c0       	rjmp	.+414    	; 0xcf0 <UPDI::runtime(unsigned char)+0x40a>
write_memory():
     b52:	84 3c       	cpi	r24, 0xC4	; 196
     b54:	09 f4       	brne	.+2      	; 0xb58 <UPDI::runtime(unsigned char)+0x272>
     b56:	b5 cf       	rjmp	.-150    	; 0xac2 <UPDI::runtime(unsigned char)+0x1dc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:445
        _result = NVM::write_memory();
     b58:	85 3c       	cpi	r24, 0xC5	; 197
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:461
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
        break;
      }
    }
  }
  TIM::Timeout_Stop();
     b5a:	09 f4       	brne	.+2      	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     b5c:	80 c0       	rjmp	.+256    	; 0xc5e <UPDI::runtime(unsigned char)+0x378>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:462
  UPDI_USART.CTRLB = UPDI_USART_ON;
     b5e:	bd 82       	std	Y+5, r11	; 0x05
     b60:	1b dc       	rcall	.-1994   	; 0x398 <TIM::Timeout_Stop()>
     b62:	88 ec       	ldi	r24, 0xC8	; 200
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:463
  wdt_reset();
     b64:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f7056>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:465
  return _result;
}
     b68:	a8 95       	wdr
     b6a:	8d 81       	ldd	r24, Y+5	; 0x05
     b6c:	26 96       	adiw	r28, 0x06	; 6
     b6e:	cd bf       	out	0x3d, r28	; 61
     b70:	de bf       	out	0x3e, r29	; 62
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	1f 91       	pop	r17
     b78:	0f 91       	pop	r16
     b7a:	ff 90       	pop	r15
     b7c:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:112
      /* Flash 領域 */
      /* 奇数量指定は Data領域絶対アドレス指定になる */
      case JTAG2::MTYPE_XMEGA_FLASH :   // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {  // 0xC1
        start_addr += NVM::nvm_flash_offset;
     b7e:	df 90       	pop	r13
     b80:	cf 90       	pop	r12
     b82:	bf 90       	pop	r11
     b84:	af 90       	pop	r10
     b86:	08 95       	ret
write_memory():
     b88:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
     b8c:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     b90:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:113
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     b94:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:139
          /* 書く前にページ消去 */
            NVM::nvm_wait_v3();
          if (!UPDI::st8(start_addr, 0xFF)) return false;
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
     b98:	c8 0e       	add	r12, r24
     b9a:	d9 1e       	adc	r13, r25
     b9c:	ea 1e       	adc	r14, r26
     b9e:	fb 1e       	adc	r15, r27
     ba0:	ea 9b       	sbis	0x1d, 2	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:115
      case JTAG2::MTYPE_XMEGA_FLASH :   // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {  // 0xC1
        start_addr += NVM::nvm_flash_offset;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_flash_v3(start_addr, byte_count);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     ba2:	05 c0       	rjmp	.+10     	; 0xbae <UPDI::runtime(unsigned char)+0x2c8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:116
          return NVM::write_flash_v2(start_addr, byte_count);
     ba4:	a8 01       	movw	r20, r16
     ba6:	c7 01       	movw	r24, r14
     ba8:	b6 01       	movw	r22, r12
     baa:	9a dd       	rcall	.-1228   	; 0x6e0 <NVM::write_flash_v3(unsigned long, unsigned int)>
     bac:	06 c0       	rjmp	.+12     	; 0xbba <UPDI::runtime(unsigned char)+0x2d4>
     bae:	e9 9b       	sbis	0x1d, 1	; 29
     bb0:	06 c0       	rjmp	.+12     	; 0xbbe <UPDI::runtime(unsigned char)+0x2d8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:433
 * Flash領域ワード書込
 */

/* NVMCTRL v0 */
bool NVM::write_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
     bb2:	a8 01       	movw	r20, r16
     bb4:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:434
  if (byte_count == 0 || byte_count > 256) return false;
     bb6:	b6 01       	movw	r22, r12
     bb8:	1f de       	rcall	.-962    	; 0x7f8 <NVM::write_flash_v2(unsigned long, unsigned int)>
     bba:	b8 2e       	mov	r11, r24
     bbc:	d0 cf       	rjmp	.-96     	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
write_flash():
     bbe:	16 95       	lsr	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:438

  /* この系統ではページ消去を書込と同時に行える */
  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
     bc0:	07 95       	ror	r16
     bc2:	c8 01       	movw	r24, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:439
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
     bc4:	01 97       	sbiw	r24, 0x01	; 1
     bc6:	8f 3f       	cpi	r24, 0xFF	; 255
     bc8:	91 05       	cpc	r25, r1
     bca:	09 f0       	breq	.+2      	; 0xbce <UPDI::runtime(unsigned char)+0x2e8>
     bcc:	40 f6       	brcc	.-112    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:440
  NVM::nvm_wait();
     bce:	00 de       	rcall	.-1024   	; 0x7d0 <NVM::nvm_wait()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:443

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     bd0:	84 e0       	ldi	r24, 0x04	; 4
     bd2:	f5 db       	rcall	.-2070   	; 0x3be <NVM::nvm_ctrl(unsigned char)>
     bd4:	88 23       	and	r24, r24
     bd6:	09 f4       	brne	.+2      	; 0xbda <UPDI::runtime(unsigned char)+0x2f4>
     bd8:	c2 cf       	rjmp	.-124    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     bda:	fa dd       	rcall	.-1036   	; 0x7d0 <NVM::nvm_wait()>
     bdc:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:444
  set_repeat_rsd[5] = byte_count - 1;
     be0:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     be4:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:445
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     be8:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     bec:	8f ef       	ldi	r24, 0xFF	; 255
     bee:	80 0f       	add	r24, r16
     bf0:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
     bf4:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:446
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	8b e2       	ldi	r24, 0x2B	; 43
     bfa:	98 e3       	ldi	r25, 0x38	; 56
     bfc:	aa da       	rcall	.-2732   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     bfe:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:447
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     c00:	09 f4       	brne	.+2      	; 0xc04 <UPDI::runtime(unsigned char)+0x31e>
     c02:	ad cf       	rjmp	.-166    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     c04:	82 da       	rcall	.-2812   	; 0x10a <UPDI::RECV()>
     c06:	80 34       	cpi	r24, 0x40	; 64
     c08:	09 f0       	breq	.+2      	; 0xc0c <UPDI::runtime(unsigned char)+0x326>
     c0a:	a9 cf       	rjmp	.-174    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     c0c:	68 e0       	ldi	r22, 0x08	; 8
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	8e e1       	ldi	r24, 0x1E	; 30
     c12:	98 e3       	ldi	r25, 0x38	; 56
     c14:	9e da       	rcall	.-2756   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c16:	88 23       	and	r24, r24
     c18:	09 f4       	brne	.+2      	; 0xc1c <UPDI::runtime(unsigned char)+0x336>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:452

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     c1a:	a1 cf       	rjmp	.-190    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     c1c:	3f e5       	ldi	r19, 0x5F	; 95
     c1e:	e3 2e       	mov	r14, r19
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:453
    UPDI::SEND(*p++);
     c20:	38 e3       	ldi	r19, 0x38	; 56
     c22:	f3 2e       	mov	r15, r19
     c24:	f7 01       	movw	r30, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:454
  } while (--byte_count);
     c26:	82 89       	ldd	r24, Z+18	; 0x12
     c28:	7c da       	rcall	.-2824   	; 0x122 <UPDI::SEND(unsigned char)>
     c2a:	f7 01       	movw	r30, r14
     c2c:	83 89       	ldd	r24, Z+19	; 0x13
     c2e:	79 da       	rcall	.-2830   	; 0x122 <UPDI::SEND(unsigned char)>
     c30:	01 50       	subi	r16, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     c32:	11 09       	sbc	r17, r1
     c34:	f2 e0       	ldi	r31, 0x02	; 2
     c36:	ef 0e       	add	r14, r31
     c38:	f1 1c       	adc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:458
  UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     c3a:	01 15       	cp	r16, r1
     c3c:	11 05       	cpc	r17, r1
     c3e:	91 f7       	brne	.-28     	; 0xc24 <UPDI::runtime(unsigned char)+0x33e>
delay_micros():
     c40:	82 e9       	ldi	r24, 0x92	; 146
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:377
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  /* NVMCTRL write page and complete */
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
     c42:	8a 95       	dec	r24
     c44:	f1 f7       	brne	.-4      	; 0xc42 <UPDI::runtime(unsigned char)+0x35c>
     c46:	00 c0       	rjmp	.+0      	; 0xc48 <UPDI::runtime(unsigned char)+0x362>
write_flash():
     c48:	a7 da       	rcall	.-2738   	; 0x198 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
     c4a:	88 23       	and	r24, r24
     c4c:	09 f4       	brne	.+2      	; 0xc50 <UPDI::runtime(unsigned char)+0x36a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:378
  return NVM::nvm_wait() == 0;
     c4e:	87 cf       	rjmp	.-242    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
write_eeprom():
     c50:	83 e0       	ldi	r24, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:128
        start_addr += NVM::nvm_eeprom_offset;
        break;
      }
      /* USERROW/USERSIG 領域 */
      case JTAG2::MTYPE_USERSIG : {     // 0xC5
        start_addr += NVM::nvm_user_sig_offset;
     c52:	b5 db       	rcall	.-2198   	; 0x3be <NVM::nvm_ctrl(unsigned char)>
     c54:	88 23       	and	r24, r24
     c56:	09 f4       	brne	.+2      	; 0xc5a <UPDI::runtime(unsigned char)+0x374>
     c58:	82 cf       	rjmp	.-252    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     c5a:	ba dd       	rcall	.-1164   	; 0x7d0 <NVM::nvm_wait()>
     c5c:	b6 c0       	rjmp	.+364    	; 0xdca <UPDI::runtime(unsigned char)+0x4e4>
write_memory():
     c5e:	80 91 57 38 	lds	r24, 0x3857	; 0x803857 <NVM::nvm_user_sig_offset>
     c62:	90 91 58 38 	lds	r25, 0x3858	; 0x803858 <NVM::nvm_user_sig_offset+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:133
        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     c66:	a0 91 59 38 	lds	r26, 0x3859	; 0x803859 <NVM::nvm_user_sig_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:135
          /* 書く前にページ消去 */
            NVM::nvm_wait_v3();
     c6a:	b0 91 5a 38 	lds	r27, 0x385A	; 0x80385a <NVM::nvm_user_sig_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:136
          if (!UPDI::st8(start_addr, 0xFF)) return false;
     c6e:	c8 0e       	add	r12, r24
     c70:	d9 1e       	adc	r13, r25
     c72:	ea 1e       	adc	r14, r26
     c74:	fb 1e       	adc	r15, r27
     c76:	ea 9b       	sbis	0x1d, 2	; 29
     c78:	0f c0       	rjmp	.+30     	; 0xc98 <UPDI::runtime(unsigned char)+0x3b2>
     c7a:	1e dd       	rcall	.-1476   	; 0x6b8 <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:137
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
     c7c:	4f ef       	ldi	r20, 0xFF	; 255
     c7e:	c7 01       	movw	r24, r14
     c80:	b6 01       	movw	r22, r12
     c82:	d7 da       	rcall	.-2642   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
     c84:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:138
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     c86:	09 f4       	brne	.+2      	; 0xc8a <UPDI::runtime(unsigned char)+0x3a4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:143
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     c88:	6a cf       	rjmp	.-300    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     c8a:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:145
          /* 書く前にページ消去 */
          if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     c8c:	23 dd       	rcall	.-1466   	; 0x6d4 <NVM::nvm_ctrl_v3(unsigned char)>
     c8e:	88 23       	and	r24, r24
     c90:	09 f4       	brne	.+2      	; 0xc94 <UPDI::runtime(unsigned char)+0x3ae>
     c92:	65 cf       	rjmp	.-310    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     c94:	e2 9a       	sbi	0x1c, 2	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:146
          if (!UPDI::st8(start_addr, 0xFF)) return false;
     c96:	86 cf       	rjmp	.-244    	; 0xba4 <UPDI::runtime(unsigned char)+0x2be>
     c98:	e9 9b       	sbis	0x1d, 1	; 29
     c9a:	1f cf       	rjmp	.-450    	; 0xada <UPDI::runtime(unsigned char)+0x1f4>
     c9c:	88 e0       	ldi	r24, 0x08	; 8
     c9e:	a6 dd       	rcall	.-1204   	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     ca0:	88 23       	and	r24, r24
     ca2:	09 f4       	brne	.+2      	; 0xca6 <UPDI::runtime(unsigned char)+0x3c0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:147
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     ca4:	5c cf       	rjmp	.-328    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     ca6:	4f ef       	ldi	r20, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:159
      default : return false;
    }
  }
  else {
    /* ここは 1byte単位書込で通る */
    uint8_t data = JTAG2::packet.body[10];
     ca8:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:160
    switch (mem_type) {
     caa:	b6 01       	movw	r22, r12
     cac:	c2 da       	rcall	.-2684   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
     cae:	88 23       	and	r24, r24
     cb0:	09 f4       	brne	.+2      	; 0xcb4 <UPDI::runtime(unsigned char)+0x3ce>
     cb2:	55 cf       	rjmp	.-342    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     cb4:	e2 9a       	sbi	0x1c, 2	; 28
     cb6:	7d cf       	rjmp	.-262    	; 0xbb2 <UPDI::runtime(unsigned char)+0x2cc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:179
        /* ここは terminal mode の場合のみ通過するはず */
        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     cb8:	a2 88       	ldd	r10, Z+18	; 0x12
     cba:	82 3b       	cpi	r24, 0xB2	; 178
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:181
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
     cbc:	08 f4       	brcc	.+2      	; 0xcc0 <UPDI::runtime(unsigned char)+0x3da>
     cbe:	0d cf       	rjmp	.-486    	; 0xada <UPDI::runtime(unsigned char)+0x1f4>
     cc0:	84 3b       	cpi	r24, 0xB4	; 180
     cc2:	c0 f0       	brcs	.+48     	; 0xcf4 <UPDI::runtime(unsigned char)+0x40e>
     cc4:	85 3c       	cpi	r24, 0xC5	; 197
     cc6:	09 f0       	breq	.+2      	; 0xcca <UPDI::runtime(unsigned char)+0x3e4>
     cc8:	08 cf       	rjmp	.-496    	; 0xada <UPDI::runtime(unsigned char)+0x1f4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:182
            NVM::nvm_wait_v3();
     cca:	ea 9b       	sbis	0x1d, 2	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:183
            if (!UPDI::st8(start_addr, 0xFF)) return false;
     ccc:	99 c0       	rjmp	.+306    	; 0xe00 <UPDI::runtime(unsigned char)+0x51a>
     cce:	8c 2d       	mov	r24, r12
     cd0:	9c 2d       	mov	r25, r12
     cd2:	9f 73       	andi	r25, 0x3F	; 63
     cd4:	09 f0       	breq	.+2      	; 0xcd8 <UPDI::runtime(unsigned char)+0x3f2>
     cd6:	80 c0       	rjmp	.+256    	; 0xdd8 <UPDI::runtime(unsigned char)+0x4f2>
     cd8:	ff ef       	ldi	r31, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:184
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
     cda:	af 12       	cpse	r10, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:424
  do {
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW);
     cdc:	7d c0       	rjmp	.+250    	; 0xdd8 <UPDI::runtime(unsigned char)+0x4f2>
     cde:	ec dc       	rcall	.-1576   	; 0x6b8 <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:165
    switch (mem_type) {
      /* FUSES/LOCKBITS 領域 */
      /* 常に奇数量絶対アドレス指定の特殊書込 */
      case JTAG2::MTYPE_LOCK_BITS :     // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {   // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
     ce0:	4f ef       	ldi	r20, 0xFF	; 255
     ce2:	c7 01       	movw	r24, r14
     ce4:	b6 01       	movw	r22, r12
     ce6:	a5 da       	rcall	.-2742   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
     ce8:	88 23       	and	r24, r24
     cea:	09 f4       	brne	.+2      	; 0xcee <UPDI::runtime(unsigned char)+0x408>
     cec:	38 cf       	rjmp	.-400    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     cee:	88 e0       	ldi	r24, 0x08	; 8
write_eeprom_v3():
     cf0:	f1 dc       	rcall	.-1566   	; 0x6d4 <NVM::nvm_ctrl_v3(unsigned char)>
     cf2:	63 cf       	rjmp	.-314    	; 0xbba <UPDI::runtime(unsigned char)+0x2d4>
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:166
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     cf4:	c7 01       	movw	r24, r14
     cf6:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:342
  return _r;
}

/* NVMCTRL v3 */
bool NVM::write_fuse_v3 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     cf8:	03 db       	rcall	.-2554   	; 0x300 <UPDI::ld8(unsigned long)>
     cfa:	a8 12       	cpse	r10, r24
     cfc:	04 c0       	rjmp	.+8      	; 0xd06 <UPDI::runtime(unsigned char)+0x420>
     cfe:	8f b3       	in	r24, 0x1f	; 31
     d00:	88 23       	and	r24, r24
     d02:	09 f4       	brne	.+2      	; 0xd06 <UPDI::runtime(unsigned char)+0x420>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:343
  if (!UPDI::st8(addr, data)) return false;
     d04:	24 c1       	rjmp	.+584    	; 0xf4e <UPDI::runtime(unsigned char)+0x668>
     d06:	ea 9b       	sbis	0x1d, 2	; 29
     d08:	1a c0       	rjmp	.+52     	; 0xd3e <UPDI::runtime(unsigned char)+0x458>
write_fuse_v3():
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	6f dd       	rcall	.-1314   	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     d0e:	88 23       	and	r24, r24
     d10:	09 f4       	brne	.+2      	; 0xd14 <UPDI::runtime(unsigned char)+0x42e>
     d12:	25 cf       	rjmp	.-438    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     d14:	c7 01       	movw	r24, r14
     d16:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:344
  bool _r = (NVM::nvm_wait_v3() & 0x70) == 0;
     d18:	88 27       	eor	r24, r24
     d1a:	99 27       	eor	r25, r25
     d1c:	4a 2d       	mov	r20, r10
     d1e:	89 da       	rcall	.-2798   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
     d20:	88 23       	and	r24, r24
     d22:	09 f4       	brne	.+2      	; 0xd26 <UPDI::runtime(unsigned char)+0x440>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:345
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW)) return false;
     d24:	1c cf       	rjmp	.-456    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     d26:	c8 dc       	rcall	.-1648   	; 0x6b8 <NVM::nvm_wait_v3()>
     d28:	80 77       	andi	r24, 0x70	; 112
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:336
/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
  if (!UPDI::st8(addr, data)) return false;
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     d2a:	11 e0       	ldi	r17, 0x01	; 1
     d2c:	09 f0       	breq	.+2      	; 0xd30 <UPDI::runtime(unsigned char)+0x44a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:337
  return _r;
     d2e:	10 e0       	ldi	r17, 0x00	; 0
     d30:	85 e1       	ldi	r24, 0x15	; 21
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:168
      case JTAG2::MTYPE_LOCK_BITS :     // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {   // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     d32:	d0 dc       	rcall	.-1632   	; 0x6d4 <NVM::nvm_ctrl_v3(unsigned char)>
write_fuse_v2():
     d34:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:333
  return ((NVM::nvm_wait() & 7) == 0);
}

/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
     d36:	09 f4       	brne	.+2      	; 0xd3a <UPDI::runtime(unsigned char)+0x454>
     d38:	12 cf       	rjmp	.-476    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
_ZN4UPDI7runtimeEh():
     d3a:	b1 2e       	mov	r11, r17
     d3c:	10 cf       	rjmp	.-480    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
write_memory():
     d3e:	e9 9b       	sbis	0x1d, 1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:334
  if (!UPDI::st8(addr, data)) return false;
     d40:	16 c0       	rjmp	.+44     	; 0xd6e <UPDI::runtime(unsigned char)+0x488>
write_fuse_v2():
     d42:	83 e1       	ldi	r24, 0x13	; 19
     d44:	53 dd       	rcall	.-1370   	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     d46:	88 23       	and	r24, r24
     d48:	09 f4       	brne	.+2      	; 0xd4c <UPDI::runtime(unsigned char)+0x466>
     d4a:	09 cf       	rjmp	.-494    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     d4c:	c7 01       	movw	r24, r14
     d4e:	b6 01       	movw	r22, r12
     d50:	88 27       	eor	r24, r24
     d52:	99 27       	eor	r25, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:335
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
     d54:	4a 2d       	mov	r20, r10
     d56:	6d da       	rcall	.-2854   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
     d58:	88 23       	and	r24, r24
     d5a:	09 f4       	brne	.+2      	; 0xd5e <UPDI::runtime(unsigned char)+0x478>
     d5c:	00 cf       	rjmp	.-512    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     d5e:	38 dd       	rcall	.-1424   	; 0x7d0 <NVM::nvm_wait()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:336
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     d60:	80 77       	andi	r24, 0x70	; 112
     d62:	11 e0       	ldi	r17, 0x01	; 1
     d64:	09 f0       	breq	.+2      	; 0xd68 <UPDI::runtime(unsigned char)+0x482>
     d66:	10 e0       	ldi	r17, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:322
 */

/* NVMCTRL v0 */
bool NVM::write_fuse (uint16_t addr, uint8_t data) {
  fuse_packet_t fuse_packet;
  fuse_packet.data = data;
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	40 dd       	rcall	.-1408   	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     d6c:	e3 cf       	rjmp	.-58     	; 0xd34 <UPDI::runtime(unsigned char)+0x44e>
write_fuse():
     d6e:	8a 2d       	mov	r24, r10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:170
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
          return NVM::write_fuse_v2(start_addr, data);
        return NVM::write_fuse(start_addr, data);
     d70:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:324
/* NVMCTRL v0 */
bool NVM::write_fuse (uint16_t addr, uint8_t data) {
  fuse_packet_t fuse_packet;
  fuse_packet.data = data;
  fuse_packet.addr = addr;
  NVM::nvm_wait();
     d72:	89 83       	std	Y+1, r24	; 0x01
     d74:	9a 83       	std	Y+2, r25	; 0x02
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:165
/*
 * 複バイト送信
 */

bool UPDI::sts8 (uint32_t addr, uint8_t *data, size_t len) {
  if (UPDI::send_repeat_header((UPDI::UPDI_ST | UPDI::UPDI_DATA1), addr, len)) {
     d76:	cb 82       	std	Y+3, r12	; 0x03
     d78:	dc 82       	std	Y+4, r13	; 0x04
write_fuse():
     d7a:	2a dd       	rcall	.-1452   	; 0x7d0 <NVM::nvm_wait()>
sts8():
     d7c:	24 e0       	ldi	r18, 0x04	; 4
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	46 e0       	ldi	r20, 0x06	; 6
     d82:	50 e1       	ldi	r21, 0x10	; 16
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	80 e6       	ldi	r24, 0x60	; 96
     d8a:	74 da       	rcall	.-2840   	; 0x274 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     d8c:	88 23       	and	r24, r24
     d8e:	09 f4       	brne	.+2      	; 0xd92 <UPDI::runtime(unsigned char)+0x4ac>
     d90:	e6 ce       	rjmp	.-564    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     d92:	8e 01       	movw	r16, r28
     d94:	0f 5f       	subi	r16, 0xFF	; 255
     d96:	1f 4f       	sbci	r17, 0xFF	; 255
     d98:	7e 01       	movw	r14, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:167
    do {
      if (!UPDI::SEND(*data++)) break;
     d9a:	95 e0       	ldi	r25, 0x05	; 5
     d9c:	e9 0e       	add	r14, r25
     d9e:	f1 1c       	adc	r15, r1
     da0:	f8 01       	movw	r30, r16
     da2:	81 91       	ld	r24, Z+
     da4:	8f 01       	movw	r16, r30
     da6:	bd d9       	rcall	.-3206   	; 0x122 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:168
      if (UPDI::UPDI_ACK != RECV()) break;
     da8:	88 23       	and	r24, r24
     daa:	09 f4       	brne	.+2      	; 0xdae <UPDI::runtime(unsigned char)+0x4c8>
     dac:	d8 ce       	rjmp	.-592    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     dae:	ad d9       	rcall	.-3238   	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:169
    } while (--len);
     db0:	80 34       	cpi	r24, 0x40	; 64
     db2:	09 f0       	breq	.+2      	; 0xdb6 <UPDI::runtime(unsigned char)+0x4d0>
     db4:	d4 ce       	rjmp	.-600    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:327
  if (!UPDI::sts8(NVM::NVMCTRL_REG_DATA,
    (uint8_t*)&fuse_packet, sizeof(fuse_packet))) return false;
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_WFU)) return false;
     db6:	e0 16       	cp	r14, r16
     db8:	f1 06       	cpc	r15, r17
     dba:	91 f7       	brne	.-28     	; 0xda0 <UPDI::runtime(unsigned char)+0x4ba>
write_fuse():
     dbc:	87 e0       	ldi	r24, 0x07	; 7
     dbe:	ff da       	rcall	.-2562   	; 0x3be <NVM::nvm_ctrl(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:328
  return ((NVM::nvm_wait() & 7) == 0);
     dc0:	88 23       	and	r24, r24
     dc2:	09 f4       	brne	.+2      	; 0xdc6 <UPDI::runtime(unsigned char)+0x4e0>
     dc4:	cc ce       	rjmp	.-616    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:378
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  /* NVMCTRL write page and complete */
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
  return NVM::nvm_wait() == 0;
     dc6:	04 dd       	rcall	.-1528   	; 0x7d0 <NVM::nvm_wait()>
     dc8:	87 70       	andi	r24, 0x07	; 7
write_eeprom():
     dca:	bb 24       	eor	r11, r11
     dcc:	b3 94       	inc	r11
     dce:	88 23       	and	r24, r24
     dd0:	09 f4       	brne	.+2      	; 0xdd4 <UPDI::runtime(unsigned char)+0x4ee>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:189
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
     dd2:	c5 ce       	rjmp	.-630    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:190
            JTAG2::packet.body[11] = data;
     dd4:	b1 2c       	mov	r11, r1
     dd6:	c3 ce       	rjmp	.-634    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
write_memory():
     dd8:	80 ff       	sbrs	r24, 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:191
            JTAG2::packet.body[10] = 0xFF;
     dda:	0e c0       	rjmp	.+28     	; 0xdf8 <UPDI::runtime(unsigned char)+0x512>
     ddc:	ef e5       	ldi	r30, 0x5F	; 95
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:192
            (uint8_t)start_addr--;
     dde:	f8 e3       	ldi	r31, 0x38	; 56
     de0:	a3 8a       	std	Z+19, r10	; 0x13
     de2:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:198
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     de4:	82 8b       	std	Z+18, r24	; 0x12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:199
          return NVM::write_flash_v3(start_addr, byte_count);
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	c8 1a       	sub	r12, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:195
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
     dea:	d1 08       	sbc	r13, r1
     dec:	e1 08       	sbc	r14, r1
     dee:	f1 08       	sbc	r15, r1
     df0:	e2 9a       	sbi	0x1c, 2	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:203
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     df2:	42 e0       	ldi	r20, 0x02	; 2
     df4:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:205
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
     df6:	d7 ce       	rjmp	.-594    	; 0xba6 <UPDI::runtime(unsigned char)+0x2c0>
     df8:	8f ef       	ldi	r24, 0xFF	; 255
     dfa:	80 93 72 38 	sts	0x3872, r24	; 0x803872 <JTAG2::packet+0x13>
     dfe:	f8 cf       	rjmp	.-16     	; 0xdf0 <UPDI::runtime(unsigned char)+0x50a>
     e00:	e9 9b       	sbis	0x1d, 1	; 29
     e02:	6b ce       	rjmp	.-810    	; 0xada <UPDI::runtime(unsigned char)+0x1f4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:206
            if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     e04:	8c 2d       	mov	r24, r12
     e06:	9c 2d       	mov	r25, r12
     e08:	9f 73       	andi	r25, 0x3F	; 63
     e0a:	69 f4       	brne	.+26     	; 0xe26 <UPDI::runtime(unsigned char)+0x540>
     e0c:	9f ef       	ldi	r25, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:207
            if (!UPDI::st8(start_addr, 0xFF)) return false;
     e0e:	a9 12       	cpse	r10, r25
     e10:	0a c0       	rjmp	.+20     	; 0xe26 <UPDI::runtime(unsigned char)+0x540>
     e12:	88 e0       	ldi	r24, 0x08	; 8
     e14:	eb dc       	rcall	.-1578   	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     e16:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:212
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
     e18:	09 f4       	brne	.+2      	; 0xe1c <UPDI::runtime(unsigned char)+0x536>
     e1a:	a1 ce       	rjmp	.-702    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:213
            JTAG2::packet.body[11] = data;
     e1c:	4f ef       	ldi	r20, 0xFF	; 255
     e1e:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:214
            JTAG2::packet.body[10] = 0xFF;
     e20:	b6 01       	movw	r22, r12
     e22:	07 da       	rcall	.-3058   	; 0x232 <UPDI::st8(unsigned long, unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:215
            (uint8_t)start_addr--;
     e24:	ca ce       	rjmp	.-620    	; 0xbba <UPDI::runtime(unsigned char)+0x2d4>
     e26:	80 ff       	sbrs	r24, 0
     e28:	0e c0       	rjmp	.+28     	; 0xe46 <UPDI::runtime(unsigned char)+0x560>
     e2a:	ef e5       	ldi	r30, 0x5F	; 95
     e2c:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:221
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     e2e:	a3 8a       	std	Z+19, r10	; 0x13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:222
          return NVM::write_flash_v2(start_addr, byte_count);
     e30:	8f ef       	ldi	r24, 0xFF	; 255
     e32:	82 8b       	std	Z+18, r24	; 0x12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:218
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
     e34:	e1 e0       	ldi	r30, 0x01	; 1
     e36:	ce 1a       	sub	r12, r30
     e38:	d1 08       	sbc	r13, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:231
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
    return NVM::write_eeprom_v3(start_addr, byte_count);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     e3a:	e1 08       	sbc	r14, r1
     e3c:	f1 08       	sbc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:383
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_eeprom_v2 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     e3e:	e2 9a       	sbi	0x1c, 2	; 28
     e40:	42 e0       	ldi	r20, 0x02	; 2
     e42:	50 e0       	ldi	r21, 0x00	; 0
     e44:	b7 ce       	rjmp	.-658    	; 0xbb4 <UPDI::runtime(unsigned char)+0x2ce>
     e46:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:385

  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
     e48:	80 93 72 38 	sts	0x3872, r24	; 0x803872 <JTAG2::packet+0x13>
     e4c:	f8 cf       	rjmp	.-16     	; 0xe3e <UPDI::runtime(unsigned char)+0x558>
     e4e:	e9 9b       	sbis	0x1d, 1	; 29
     e50:	3f c0       	rjmp	.+126    	; 0xed0 <UPDI::runtime(unsigned char)+0x5ea>
write_eeprom_v2():
     e52:	8f 3f       	cpi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:388

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     e54:	91 05       	cpc	r25, r1
     e56:	11 f0       	breq	.+4      	; 0xe5c <UPDI::runtime(unsigned char)+0x576>
     e58:	08 f0       	brcs	.+2      	; 0xe5c <UPDI::runtime(unsigned char)+0x576>
     e5a:	81 ce       	rjmp	.-766    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     e5c:	83 e1       	ldi	r24, 0x13	; 19
     e5e:	c6 dc       	rcall	.-1652   	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     e60:	88 23       	and	r24, r24
     e62:	09 f4       	brne	.+2      	; 0xe66 <UPDI::runtime(unsigned char)+0x580>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:389
  set_repeat[2] = (uint8_t)byte_count - 1;
     e64:	7c ce       	rjmp	.-776    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     e66:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     e6a:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:390
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     e6e:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
     e72:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     e76:	8f ef       	ldi	r24, 0xFF	; 255
     e78:	80 0f       	add	r24, r16
     e7a:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:391
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     e7e:	65 e0       	ldi	r22, 0x05	; 5
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:392
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     e84:	98 e3       	ldi	r25, 0x38	; 56
     e86:	65 d9       	rcall	.-3382   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     e88:	88 23       	and	r24, r24
     e8a:	09 f4       	brne	.+2      	; 0xe8e <UPDI::runtime(unsigned char)+0x5a8>
     e8c:	68 ce       	rjmp	.-816    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     e8e:	3d d9       	rcall	.-3462   	; 0x10a <UPDI::RECV()>
     e90:	80 34       	cpi	r24, 0x40	; 64
     e92:	09 f0       	breq	.+2      	; 0xe96 <UPDI::runtime(unsigned char)+0x5b0>
     e94:	64 ce       	rjmp	.-824    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     e96:	65 e0       	ldi	r22, 0x05	; 5
     e98:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:397

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     e9a:	86 e2       	ldi	r24, 0x26	; 38
     e9c:	98 e3       	ldi	r25, 0x38	; 56
     e9e:	59 d9       	rcall	.-3406   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     ea0:	88 23       	and	r24, r24
     ea2:	09 f4       	brne	.+2      	; 0xea6 <UPDI::runtime(unsigned char)+0x5c0>
     ea4:	5c ce       	rjmp	.-840    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     ea6:	91 e7       	ldi	r25, 0x71	; 113
     ea8:	e9 2e       	mov	r14, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:398
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     eaa:	98 e3       	ldi	r25, 0x38	; 56
     eac:	f9 2e       	mov	r15, r25
     eae:	f7 01       	movw	r30, r14
     eb0:	81 91       	ld	r24, Z+
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:399
  } while (--byte_count);
     eb2:	7f 01       	movw	r14, r30
     eb4:	36 d9       	rcall	.-3476   	; 0x122 <UPDI::SEND(unsigned char)>
     eb6:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:401

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     eb8:	09 f4       	brne	.+2      	; 0xebc <UPDI::runtime(unsigned char)+0x5d6>
     eba:	51 ce       	rjmp	.-862    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     ebc:	26 d9       	rcall	.-3508   	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:355
 * EEPROM領域バイト書込
 */

/* NVMCTRL v0 */
bool NVM::write_eeprom (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     ebe:	80 34       	cpi	r24, 0x40	; 64
     ec0:	09 f0       	breq	.+2      	; 0xec4 <UPDI::runtime(unsigned char)+0x5de>
     ec2:	4d ce       	rjmp	.-870    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     ec4:	01 50       	subi	r16, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:358

  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
     ec6:	11 09       	sbc	r17, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:359
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
     ec8:	91 f7       	brne	.-28     	; 0xeae <UPDI::runtime(unsigned char)+0x5c8>
     eca:	80 e0       	ldi	r24, 0x00	; 0
     ecc:	8f dc       	rcall	.-1762   	; 0x7ec <NVM::nvm_ctrl_v2(unsigned char)>
     ece:	75 ce       	rjmp	.-790    	; 0xbba <UPDI::runtime(unsigned char)+0x2d4>
write_eeprom():
     ed0:	8f 3f       	cpi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:360
  NVM::nvm_wait();
     ed2:	91 05       	cpc	r25, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:363

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     ed4:	11 f0       	breq	.+4      	; 0xeda <UPDI::runtime(unsigned char)+0x5f4>
     ed6:	08 f0       	brcs	.+2      	; 0xeda <UPDI::runtime(unsigned char)+0x5f4>
     ed8:	42 ce       	rjmp	.-892    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     eda:	7a dc       	rcall	.-1804   	; 0x7d0 <NVM::nvm_wait()>
     edc:	84 e0       	ldi	r24, 0x04	; 4
     ede:	6f da       	rcall	.-2850   	; 0x3be <NVM::nvm_ctrl(unsigned char)>
     ee0:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:364
  set_repeat[2] = (uint8_t)byte_count - 1;
     ee2:	09 f4       	brne	.+2      	; 0xee6 <UPDI::runtime(unsigned char)+0x600>
     ee4:	3c ce       	rjmp	.-904    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     ee6:	74 dc       	rcall	.-1816   	; 0x7d0 <NVM::nvm_wait()>
     ee8:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:365
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     eec:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     ef0:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
     ef4:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     ef8:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:366
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     efa:	80 0f       	add	r24, r16
     efc:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
     f00:	65 e0       	ldi	r22, 0x05	; 5
     f02:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:367
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     f04:	8b e2       	ldi	r24, 0x2B	; 43
     f06:	98 e3       	ldi	r25, 0x38	; 56
     f08:	24 d9       	rcall	.-3512   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     f0a:	88 23       	and	r24, r24
     f0c:	09 f4       	brne	.+2      	; 0xf10 <UPDI::runtime(unsigned char)+0x62a>
     f0e:	27 ce       	rjmp	.-946    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     f10:	fc d8       	rcall	.-3592   	; 0x10a <UPDI::RECV()>
     f12:	80 34       	cpi	r24, 0x40	; 64
     f14:	09 f0       	breq	.+2      	; 0xf18 <UPDI::runtime(unsigned char)+0x632>
     f16:	23 ce       	rjmp	.-954    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     f18:	65 e0       	ldi	r22, 0x05	; 5
     f1a:	70 e0       	ldi	r23, 0x00	; 0
     f1c:	86 e2       	ldi	r24, 0x26	; 38
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:372

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     f1e:	98 e3       	ldi	r25, 0x38	; 56
     f20:	18 d9       	rcall	.-3536   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     f22:	88 23       	and	r24, r24
     f24:	09 f4       	brne	.+2      	; 0xf28 <UPDI::runtime(unsigned char)+0x642>
     f26:	1b ce       	rjmp	.-970    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     f28:	81 e7       	ldi	r24, 0x71	; 113
     f2a:	e8 2e       	mov	r14, r24
     f2c:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:373
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     f2e:	f8 2e       	mov	r15, r24
     f30:	f7 01       	movw	r30, r14
     f32:	81 91       	ld	r24, Z+
     f34:	7f 01       	movw	r14, r30
     f36:	f5 d8       	rcall	.-3606   	; 0x122 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:374
  } while (--byte_count);
     f38:	88 23       	and	r24, r24
     f3a:	09 f4       	brne	.+2      	; 0xf3e <UPDI::runtime(unsigned char)+0x658>
     f3c:	10 ce       	rjmp	.-992    	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     f3e:	e5 d8       	rcall	.-3638   	; 0x10a <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:165
    switch (mem_type) {
      /* FUSES/LOCKBITS 領域 */
      /* 常に奇数量絶対アドレス指定の特殊書込 */
      case JTAG2::MTYPE_LOCK_BITS :     // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {   // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
     f40:	80 34       	cpi	r24, 0x40	; 64
     f42:	09 f0       	breq	.+2      	; 0xf46 <UPDI::runtime(unsigned char)+0x660>
     f44:	0c ce       	rjmp	.-1000   	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:449
        if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
        _result = NVM::write_memory();
        break;
      }
      case UPDI::UPDI_CMD_ERASE : {
        if (JTAG2::packet.body[1] == JTAG2::XMEGA_ERASE_CHIP
     f46:	01 50       	subi	r16, 0x01	; 1
     f48:	11 09       	sbc	r17, r1
     f4a:	91 f7       	brne	.-28     	; 0xf30 <UPDI::runtime(unsigned char)+0x64a>
     f4c:	81 ce       	rjmp	.-766    	; 0xc50 <UPDI::runtime(unsigned char)+0x36a>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:450
          && _CAPS32(JTAG2::packet.body[2])->dword == 0) {
     f4e:	bb 24       	eor	r11, r11
     f50:	b3 94       	inc	r11
     f52:	05 ce       	rjmp	.-1014   	; 0xb5e <UPDI::runtime(unsigned char)+0x278>
     f54:	ef e5       	ldi	r30, 0x5F	; 95
     f56:	f8 e3       	ldi	r31, 0x38	; 56
     f58:	81 85       	ldd	r24, Z+9	; 0x09
     f5a:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:301
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) HV_Pulse();
     f5c:	01 ce       	rjmp	.-1022   	; 0xb60 <UPDI::runtime(unsigned char)+0x27a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:304

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     f5e:	82 85       	ldd	r24, Z+10	; 0x0a
     f60:	93 85       	ldd	r25, Z+11	; 0x0b
     f62:	a4 85       	ldd	r26, Z+12	; 0x0c
     f64:	b5 85       	ldd	r27, Z+13	; 0x0d
     f66:	89 2b       	or	r24, r25
     f68:	8a 2b       	or	r24, r26
     f6a:	8b 2b       	or	r24, r27
     f6c:	09 f0       	breq	.+2      	; 0xf70 <UPDI::runtime(unsigned char)+0x68a>
     f6e:	f8 cd       	rjmp	.-1040   	; 0xb60 <UPDI::runtime(unsigned char)+0x27a>
chip_erase():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:307

  /* send erase_key */
  if (!UPDI::send_bytes(UPDI::erase_key, sizeof(UPDI::erase_key))) return false;
     f70:	e1 9b       	sbis	0x1c, 1	; 28
     f72:	31 c0       	rjmp	.+98     	; 0xfd6 <UPDI::runtime(unsigned char)+0x6f0>
     f74:	6a e0       	ldi	r22, 0x0A	; 10
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	80 eb       	ldi	r24, 0xB0	; 176
     f7a:	97 e9       	ldi	r25, 0x97	; 151
     f7c:	ea d8       	rcall	.-3628   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     f7e:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:310

  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     f80:	09 f4       	brne	.+2      	; 0xf84 <UPDI::runtime(unsigned char)+0x69e>
     f82:	06 cd       	rjmp	.-1524   	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     f84:	6a e0       	ldi	r22, 0x0A	; 10
     f86:	70 e0       	ldi	r23, 0x00	; 0
     f88:	86 ea       	ldi	r24, 0xA6	; 166
     f8a:	97 e9       	ldi	r25, 0x97	; 151
     f8c:	e2 d8       	rcall	.-3644   	; 0x152 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     f8e:	88 23       	and	r24, r24
     f90:	09 f4       	brne	.+2      	; 0xf94 <UPDI::runtime(unsigned char)+0x6ae>
     f92:	fe cc       	rjmp	.-1540   	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	f4 d8       	rcall	.-3608   	; 0x180 <UPDI::updi_reset(bool)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
     f98:	88 23       	and	r24, r24
     f9a:	09 f4       	brne	.+2      	; 0xf9e <UPDI::runtime(unsigned char)+0x6b8>
     f9c:	f9 cc       	rjmp	.-1550   	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     f9e:	80 e0       	ldi	r24, 0x00	; 0
     fa0:	ef d8       	rcall	.-3618   	; 0x180 <UPDI::updi_reset(bool)>
     fa2:	88 23       	and	r24, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     fa4:	09 f4       	brne	.+2      	; 0xfa8 <UPDI::runtime(unsigned char)+0x6c2>
     fa6:	f4 cc       	rjmp	.-1560   	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
delay_millis():
     fa8:	87 ea       	ldi	r24, 0xA7	; 167
     faa:	91 e6       	ldi	r25, 0x61	; 97
     fac:	01 97       	sbiw	r24, 0x01	; 1
     fae:	f1 f7       	brne	.-4      	; 0xfac <UPDI::runtime(unsigned char)+0x6c6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     fb0:	00 c0       	rjmp	.+0      	; 0xfb2 <UPDI::runtime(unsigned char)+0x6cc>
     fb2:	00 00       	nop
delay_micros():
     fb4:	e9 ef       	ldi	r30, 0xF9	; 249
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:315
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;

  /* wait enable : chip erase mode success */
  delay_millis(10);

  do{ delay_micros(100); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS));
     fb8:	31 97       	sbiw	r30, 0x01	; 1
     fba:	f1 f7       	brne	.-4      	; 0xfb8 <UPDI::runtime(unsigned char)+0x6d2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:316
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     fbc:	00 c0       	rjmp	.+0      	; 0xfbe <UPDI::runtime(unsigned char)+0x6d8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:318

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
     fbe:	00 00       	nop
is_sys_stat():
     fc0:	61 e0       	ldi	r22, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:319
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
     fc2:	8b e0       	ldi	r24, 0x0B	; 11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:322
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
     fc4:	87 d9       	rcall	.-3314   	; 0x2d4 <UPDI::is_cs_stat(unsigned char, unsigned char)>
chip_erase():
     fc6:	81 11       	cpse	r24, r1
     fc8:	f5 cf       	rjmp	.-22     	; 0xfb4 <UPDI::runtime(unsigned char)+0x6ce>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:301
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) HV_Pulse();
     fca:	e2 9a       	sbi	0x1c, 2	; 28
     fcc:	e0 9b       	sbis	0x1c, 0	; 28
     fce:	05 c0       	rjmp	.+10     	; 0xfda <UPDI::runtime(unsigned char)+0x6f4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:350
      delay_millis(50);
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
     fd0:	e1 98       	cbi	0x1c, 1	; 28
     fd2:	95 da       	rcall	.-2774   	; 0x4fe <UPDI::enter_prog()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:351
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     fd4:	12 cd       	rjmp	.-1500   	; 0x9fa <UPDI::runtime(unsigned char)+0x114>
     fd6:	d0 da       	rcall	.-2656   	; 0x578 <HV_Pulse()>
     fd8:	cd cf       	rjmp	.-102    	; 0xf74 <UPDI::runtime(unsigned char)+0x68e>
enter_updi():
     fda:	e0 99       	sbic	0x1c, 0	; 28
     fdc:	fa cf       	rjmp	.-12     	; 0xfd2 <UPDI::runtime(unsigned char)+0x6ec>
     fde:	dc d8       	rcall	.-3656   	; 0x198 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
     fe0:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:322

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
     fe2:	09 f4       	brne	.+2      	; 0xfe6 <UPDI::runtime(unsigned char)+0x700>
     fe4:	d5 cc       	rjmp	.-1622   	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
     fe6:	e2 d8       	rcall	.-3644   	; 0x1ac <UPDI::enter_updi(bool) [clone .part.4]>
chip_erase():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:456
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
     fe8:	81 11       	cpse	r24, r1
     fea:	f3 cf       	rjmp	.-26     	; 0xfd2 <UPDI::runtime(unsigned char)+0x6ec>
     fec:	d1 cc       	rjmp	.-1630   	; 0x990 <UPDI::runtime(unsigned char)+0xaa>
_ZN4UPDI7runtimeEh():
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	95 d9       	rcall	.-3286   	; 0x31c <UPDI::Target_Reset(bool)>
     ff2:	88 23       	and	r24, r24
     ff4:	09 f4       	brne	.+2      	; 0xff8 <UPDI::runtime(unsigned char)+0x712>
     ff6:	01 cd       	rjmp	.-1534   	; 0x9fa <UPDI::runtime(unsigned char)+0x114>
     ff8:	80 e0       	ldi	r24, 0x00	; 0
     ffa:	90 d9       	rcall	.-3296   	; 0x31c <UPDI::Target_Reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:275
 *
 * ここから割込元に戻ることはない
 */

ISR(TCB0_INT_vect, ISR_NAKED) {
  __asm__ __volatile__ ("EOR R1,R1");
     ffc:	fe cc       	rjmp	.-1540   	; 0x9fa <UPDI::runtime(unsigned char)+0x114>

00000ffe <__vector_13>:
__vector_13():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:276
  TCB0_CTRLA = 0;
     ffe:	11 24       	eor	r1, r1
    1000:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f72d0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:277
  TCB0_INTFLAGS = TCB_CAPT_bm;
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f72d6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:278
  longjmp(TIM::CONTEXT, 2);
    100a:	62 e0       	ldi	r22, 0x02	; 2
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	88 e3       	ldi	r24, 0x38	; 56
    1010:	98 e3       	ldi	r25, 0x38	; 56
    1012:	a7 d3       	rcall	.+1870   	; 0x1762 <longjmp>

00001014 <__vector_6>:
__vector_6():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:243
 *
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
    1014:	1f 92       	push	r1
    1016:	0f 92       	push	r0
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	0f 92       	push	r0
    101c:	11 24       	eor	r1, r1
    101e:	2f 93       	push	r18
    1020:	3f 93       	push	r19
    1022:	4f 93       	push	r20
    1024:	5f 93       	push	r21
    1026:	6f 93       	push	r22
    1028:	7f 93       	push	r23
    102a:	8f 93       	push	r24
    102c:	9f 93       	push	r25
    102e:	af 93       	push	r26
    1030:	bf 93       	push	r27
    1032:	ef 93       	push	r30
    1034:	ff 93       	push	r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:245
  portRegister(RTS_SENSE_PIN).INTFLAGS =
  portRegister(RTS_SENSE_PIN).INTFLAGS;
    1036:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <UPDI::nvmprog_key+0x7f6c59>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:244
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
  portRegister(RTS_SENSE_PIN).INTFLAGS =
    103a:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6c59>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:247
  portRegister(RTS_SENSE_PIN).INTFLAGS;

  if ( digitalRead(RTS_SENSE_PIN) ) {
    103e:	12 9b       	sbis	0x02, 2	; 2
    1040:	16 c0       	rjmp	.+44     	; 0x106e <__vector_6+0x5a>
System_Reset():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
/*
 * 本体リセット
 */

void SYS::System_Reset (void) {
  _PROTECTED_WRITE(RSTCTRL_SWRR, RSTCTRL_SWRE_bm);
    1042:	88 ed       	ldi	r24, 0xD8	; 216
    1044:	91 e0       	ldi	r25, 0x01	; 1
    1046:	84 bf       	out	0x34, r24	; 52
    1048:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f6891>
__vector_6():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:266
    openDrainWrite(TRST_PIN, HIGH);

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
  }
}
    104c:	ff 91       	pop	r31
    104e:	ef 91       	pop	r30
    1050:	bf 91       	pop	r27
    1052:	af 91       	pop	r26
    1054:	9f 91       	pop	r25
    1056:	8f 91       	pop	r24
    1058:	7f 91       	pop	r23
    105a:	6f 91       	pop	r22
    105c:	5f 91       	pop	r21
    105e:	4f 91       	pop	r20
    1060:	3f 91       	pop	r19
    1062:	2f 91       	pop	r18
    1064:	0f 90       	pop	r0
    1066:	0f be       	out	0x3f, r0	; 63
    1068:	0f 90       	pop	r0
    106a:	1f 90       	pop	r1
    106c:	18 95       	reti
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:253
    /* RTS 開放で本体リセット */
    SYS::System_Reset();
  }
  else {
    /* LED は点滅 */
    TIM::LED_Flash();
    106e:	7c d9       	rcall	.-3336   	; 0x368 <TIM::LED_Flash()>
    1070:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:256

    /* ターゲット再起動 */
    UPDI::Target_Reset(true);
    1072:	54 d9       	rcall	.-3416   	; 0x31c <UPDI::Target_Reset(bool)>
    1074:	21 9a       	sbi	0x04, 1	; 4
    1076:	00 00       	nop
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:259

    /* ターゲットリセットパルス */
    openDrainWrite(TRST_PIN, LOW);
    1078:	21 98       	cbi	0x04, 1	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:260
    nop();
    107a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:261
    openDrainWrite(TRST_PIN, HIGH);
    107c:	4f d9       	rcall	.-3426   	; 0x31c <UPDI::Target_Reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:264

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
    107e:	e6 cf       	rjmp	.-52     	; 0x104c <__vector_6+0x38>

00001080 <__vector_7>:
__vector_7():
    1080:	73 d9       	rcall	.-3354   	; 0x368 <TIM::LED_Flash()>
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	4b d9       	rcall	.-3434   	; 0x31c <UPDI::Target_Reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:212
 * このハンドラから主処理に戻ることはない
 */

ISR(portIntrruptVector(SW_SENSE_PIN), ISR_NAKED) {
  /* LED は点滅 */
  TIM::LED_Flash();
    1086:	88 e0       	ldi	r24, 0x08	; 8
    1088:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f7056>
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:215

  /* ターゲットリセットON */
  UPDI::Target_Reset(true);
    108c:	83 ec       	ldi	r24, 0xC3	; 195
    108e:	99 e0       	ldi	r25, 0x09	; 9
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:216
  UPDI_USART.CTRLB = UPDI_USART_OFF;
    1090:	01 97       	sbiw	r24, 0x01	; 1
    1092:	f1 f7       	brne	.-4      	; 0x1090 <__vector_7+0x10>
    1094:	00 c0       	rjmp	.+0      	; 0x1096 <__vector_7+0x16>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
    1096:	00 00       	nop
__vector_7():
    1098:	01 9a       	sbi	0x00, 1	; 0
    109a:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <UPDI::nvmprog_key+0x7f6c61>
    109e:	09 98       	cbi	0x01, 1	; 1
    10a0:	21 9a       	sbi	0x04, 1	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:222

  /* チャタリング抑制 */
  delay_micros(1000);

  /* ターゲットリセット維持 */
  pinMode(UPDI_TDAT_PIN, OUTPUT);
    10a2:	4a d9       	rcall	.-3436   	; 0x338 <TIM::LED_Blink()>
    10a4:	30 9b       	sbis	0x06, 0	; 6
    10a6:	fe cf       	rjmp	.-4      	; 0x10a4 <__vector_7+0x24>
System_Reset():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:223
  digitalWrite(UPDI_TDAT_PIN, LOW);
    10a8:	88 ed       	ldi	r24, 0xD8	; 216
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:224
  openDrainWrite(TRST_PIN, LOW);
    10aa:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:227

  /* LEDは 交互点滅 */
  TIM::LED_Blink();
    10ac:	84 bf       	out	0x34, r24	; 52
    10ae:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f6891>

000010b2 <main>:
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:230

  /* 押している間は待機 */
  while (!digitalRead(SW_SENSE_PIN));
    10b2:	f8 94       	cli
initVariant():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
    10b4:	24 e0       	ldi	r18, 0x04	; 4
    10b6:	e0 e1       	ldi	r30, 0x10	; 16
    10b8:	f4 e0       	ldi	r31, 0x04	; 4
    10ba:	83 e0       	ldi	r24, 0x03	; 3
    10bc:	98 e0       	ldi	r25, 0x08	; 8
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/variants/tinyAVR2_20/variant.h:281
    "   DEC  R24     \n"
    "   BRNE 2b        " /* 3 loop PORTA to PORTC */
    : : "z" ((register8_t*)&PORTA_PIN0CTRL),
        "r" ((uint8_t)PORT_ISC_INPUT_DISABLE_gc)
      : "r24", "r25"
  );
    10be:	21 93       	st	Z+, r18
    10c0:	9a 95       	dec	r25
    10c2:	e9 f7       	brne	.-6      	; 0x10be <main+0xc>
    10c4:	78 96       	adiw	r30, 0x18	; 24
    10c6:	8a 95       	dec	r24
    10c8:	c9 f7       	brne	.-14     	; 0x10bc <main+0xa>
_CLKCTRL_SETUP():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/CLKCTRL_megaAVR.h:127
  // _PROTECTED_WRITE(CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc);

#else

  #if defined(_CLKCTRL_PDIV_)
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, _CLKCTRL_PDIV_ | CLKCTRL_PEN_bm);
    10ca:	88 ed       	ldi	r24, 0xD8	; 216
    10cc:	41 e0       	ldi	r20, 0x01	; 1
    10ce:	50 e0       	ldi	r21, 0x00	; 0
    10d0:	84 bf       	out	0x34, r24	; 52
    10d2:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <UPDI::nvmprog_key+0x7f68b1>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:17
#include <avr/io.h>

void SYS::setup (void) {

  /* ターゲットリセット開放 */
  pinControlRegister(TRST_PIN) = TRST_PIN_CONFIG;
    10d6:	8c e0       	ldi	r24, 0x0C	; 12
    10d8:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <UPDI::nvmprog_key+0x7f6c81>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:20

  /* 出力方向ポート */
  PORTA_DIRSET = _BV(pinPosition(HVP1_PIN))
    10dc:	88 ef       	ldi	r24, 0xF8	; 248
    10de:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <UPDI::nvmprog_key+0x7f6c51>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:25
               | _BV(pinPosition(HVP2_PIN))
               | _BV(pinPosition(HV12_PIN))
               | _BV(pinPosition(LEDG_PIN))
               | _BV(pinPosition(LEDY_PIN));
  PORTB_DIRSET = _BV(pinPosition(HV8_PIN));
    10e2:	80 e2       	ldi	r24, 0x20	; 32
    10e4:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <UPDI::nvmprog_key+0x7f6c71>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:28

  /* USART 切替 LOW=ターゲット開通（PG_Disable） */
  PORTC_DIRSET = _BV(pinPosition(PGEN_PIN));
    10e8:	81 e0       	ldi	r24, 0x01	; 1
    10ea:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <UPDI::nvmprog_key+0x7f6c91>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:31

  /* LED 出力 */
  LEDG_EVOUT_MUX = LEDG_EVOUT_ALT;          /* OUT:PA7 */
    10ee:	80 93 e0 05 	sts	0x05E0, r24	; 0x8005e0 <UPDI::nvmprog_key+0x7f6e30>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:32
  PORTMUX_CCLROUTEA = PORTMUX_LUT3_ALT1_gc; /* OUT:PA5 IN:PC0,PC1,PC2 */
    10f2:	98 e0       	ldi	r25, 0x08	; 8
    10f4:	90 93 e1 05 	sts	0x05E1, r25	; 0x8005e1 <UPDI::nvmprog_key+0x7f6e31>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:33
  PORTA_OUTSET = _BV(pinPosition(LEDG_PIN))
    10f8:	30 ea       	ldi	r19, 0xA0	; 160
    10fa:	30 93 05 04 	sts	0x0405, r19	; 0x800405 <UPDI::nvmprog_key+0x7f6c55>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:37
               | _BV(pinPosition(LEDY_PIN));

  /* USART代替選択 */
  PORTMUX_USARTROUTEA = JTAG_PMUX_ALT | UPDI_PMUX_ALT;
    10fe:	35 e0       	ldi	r19, 0x05	; 5
    1100:	30 93 e2 05 	sts	0x05E2, r19	; 0x8005e2 <UPDI::nvmprog_key+0x7f6e32>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:40

  /* JTAG ポート */
  pinControlRegister(JTAG_TXD_PIN) = JTAG_TXD_CONFIG;
    1104:	90 93 52 04 	sts	0x0452, r25	; 0x800452 <UPDI::nvmprog_key+0x7f6ca2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:41
  pinControlRegister(JTAG_RXD_PIN) = JTAG_RXD_CONFIG;
    1108:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <UPDI::nvmprog_key+0x7f6ca1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:44

  /* UPDI ポート */
  pinControlRegister(UPDI_TDAT_PIN) = UPDI_TDAT_CONFIG;
    110c:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <UPDI::nvmprog_key+0x7f6c61>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:47

  /* HV 発生器 */
  pinControlRegister(HVP1_PIN) = HVP1_PIN_CONFIG;
    1110:	20 93 13 04 	sts	0x0413, r18	; 0x800413 <UPDI::nvmprog_key+0x7f6c63>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:48
  pinControlRegister(HVP2_PIN) = HVP2_PIN_CONFIG;
    1114:	44 e8       	ldi	r20, 0x84	; 132
    1116:	40 93 14 04 	sts	0x0414, r20	; 0x800414 <UPDI::nvmprog_key+0x7f6c64>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:51

  /* SW1 割込許可 */
  pinControlRegister(SW_SENSE_PIN) = SW_SENSE_CONFIG;
    111a:	4d e0       	ldi	r20, 0x0D	; 13
    111c:	40 93 30 04 	sts	0x0430, r20	; 0x800430 <UPDI::nvmprog_key+0x7f6c80>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:54

  /* RTS 認識 */
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
    1120:	49 e0       	ldi	r20, 0x09	; 9
    1122:	40 93 12 04 	sts	0x0412, r20	; 0x800412 <UPDI::nvmprog_key+0x7f6c62>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:57

  /* JP1 認識 */
  pinControlRegister(JP_SENSE_PIN) = JP_SENSE_CONFIG;
    1126:	90 93 53 04 	sts	0x0453, r25	; 0x800453 <UPDI::nvmprog_key+0x7f6ca3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:60

  /* 状態変数初期化 */
  UPDI_CONTROL = 0;
    112a:	1c ba       	out	0x1c, r1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:61
  UPDI_NVMCTRL = 0;
    112c:	1d ba       	out	0x1d, r1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:47

  /*
   * EVSYS信号分配
   */

  EVSYS_CHANNEL0 = EVSYS_CHANNEL0_CCL_LUT0_gc;
    112e:	90 e1       	ldi	r25, 0x10	; 16
    1130:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <UPDI::nvmprog_key+0x7f69e0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:48
  EVSYS_CHANNEL1 = EVSYS_CHANNEL1_RTC_PIT_DIV128_gc;
    1134:	9a e0       	ldi	r25, 0x0A	; 10
    1136:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <UPDI::nvmprog_key+0x7f69e1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:49
  EVSYS_CHANNEL2 = EVSYS_CHANNEL2_CCL_LUT1_gc;
    113a:	91 e1       	ldi	r25, 0x11	; 17
    113c:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <UPDI::nvmprog_key+0x7f69e2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:50
  EVSYS_USERTCB0COUNT = EVSYS_USER_CHANNEL1_gc;
    1140:	92 e0       	ldi	r25, 0x02	; 2
    1142:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <UPDI::nvmprog_key+0x7f6a01>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:51
  EVSYS_USERTCB1COUNT = EVSYS_USER_CHANNEL1_gc;
    1146:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <UPDI::nvmprog_key+0x7f6a03>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:58
  /*
   * CCL/LUT構築
   */

  /* TRUTH0: 010 is ON */
  CCL_TRUTH0    = CCL_TRUTH_2_bm;
    114a:	20 93 cb 01 	sts	0x01CB, r18	; 0x8001cb <UPDI::nvmprog_key+0x7f6a1b>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:59
  CCL_LUT0CTRLB = CCL_INSEL1_TCB1_gc;                       /* IN1:POS */
    114e:	90 ec       	ldi	r25, 0xC0	; 192
    1150:	90 93 c9 01 	sts	0x01C9, r25	; 0x8001c9 <UPDI::nvmprog_key+0x7f6a19>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:60
  CCL_LUT0CTRLA = CCL_ENABLE_bm;
    1154:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <UPDI::nvmprog_key+0x7f6a18>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:63

  /* TRUTH1: 001 010 is ON */
  CCL_TRUTH1    = CCL_TRUTH_1_bm | CCL_TRUTH_2_bm;
    1158:	96 e0       	ldi	r25, 0x06	; 6
    115a:	90 93 cf 01 	sts	0x01CF, r25	; 0x8001cf <UPDI::nvmprog_key+0x7f6a1f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:64
  CCL_LUT1CTRLB = CCL_INSEL0_TCA0_gc | CCL_INSEL1_TCB1_gc;  /* IN0:POS IN1:POS */
    115e:	9a ec       	ldi	r25, 0xCA	; 202
    1160:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <UPDI::nvmprog_key+0x7f6a1d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:65
  CCL_LUT1CTRLA = CCL_ENABLE_bm;
    1164:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <UPDI::nvmprog_key+0x7f6a1c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:71

  /* TRUTH3: 001 010 is ON */
  /* CCL_INSEL0_USART0_gc : USART0TX normal HIGH */
  /* CCL_INSEL1_IO_gc     : USART1RX normal HIGH */
  /* CCL_INSEL2_IO_gc     : USART1TX normal HIGH */
  CCL_TRUTH3    = (uint8_t) ~CCL_TRUTH_7_bm;
    1168:	9f e7       	ldi	r25, 0x7F	; 127
    116a:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <UPDI::nvmprog_key+0x7f6a27>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:72
  CCL_LUT3CTRLC = CCL_INSEL2_IO_gc;
    116e:	30 93 d6 01 	sts	0x01D6, r19	; 0x8001d6 <UPDI::nvmprog_key+0x7f6a26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:73
  CCL_LUT3CTRLB = CCL_INSEL0_USART0_gc | CCL_INSEL1_IO_gc;
    1172:	98 e5       	ldi	r25, 0x58	; 88
    1174:	90 93 d5 01 	sts	0x01D5, r25	; 0x8001d5 <UPDI::nvmprog_key+0x7f6a25>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:74
  CCL_LUT3CTRLA = CCL_ENABLE_bm | CCL_OUTEN_bm;
    1178:	91 e4       	ldi	r25, 0x41	; 65
    117a:	90 93 d4 01 	sts	0x01D4, r25	; 0x8001d4 <UPDI::nvmprog_key+0x7f6a24>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:77

  /* CCL 有効化 */
  CCL_CTRLA = CCL_RUNSTDBY_bm | CCL_ENABLE_bm;
    117e:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <UPDI::nvmprog_key+0x7f6a10>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:80

  /* RTC_PIT 有効化 */
  RTC_PITCTRLA = RTC_PITEN_bm;
    1182:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <UPDI::nvmprog_key+0x7f69a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:87
  /*
   * タイマー
   */

  /* TCA0 */
  TCA0_SPLIT_CTRLD = TCA_SPLIT_SPLITM_bm;
    1186:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <UPDI::nvmprog_key+0x7f7253>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:88
  TCA0_SPLIT_LPER  = TCA0_STEP - 2;
    118a:	99 e8       	ldi	r25, 0x89	; 137
    118c:	90 93 26 0a 	sts	0x0A26, r25	; 0x800a26 <UPDI::nvmprog_key+0x7f7276>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:89
  TCA0_SPLIT_LCMP0 = TCA0_STEP / 2;
    1190:	95 e4       	ldi	r25, 0x45	; 69
    1192:	90 93 28 0a 	sts	0x0A28, r25	; 0x800a28 <UPDI::nvmprog_key+0x7f7278>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:90
  TCA0_SPLIT_HPER  = 1;
    1196:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <UPDI::nvmprog_key+0x7f7277>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:91
  TCA0_SPLIT_HCMP0 = 1;     /* WOA3=PA3 */
    119a:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <UPDI::nvmprog_key+0x7f7279>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:92
  TCA0_SPLIT_HCMP1 = 1;     /* WOA4=PA4 */
    119e:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <UPDI::nvmprog_key+0x7f727b>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:93
  TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1024_gc;
    11a2:	2f e8       	ldi	r18, 0x8F	; 143
    11a4:	20 93 00 0a 	sts	0x0A00, r18	; 0x800a00 <UPDI::nvmprog_key+0x7f7250>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:96

  /* TCB1 */
  TCB1_CTRLB = TCB_CNTMODE_PWM8_gc;
    11a8:	27 e0       	ldi	r18, 0x07	; 7
    11aa:	20 93 91 0a 	sts	0x0A91, r18	; 0x800a91 <UPDI::nvmprog_key+0x7f72e1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:105
   *
   * RTS Deactive なら ハートビート
   * RTS Active なら フラッシュ
   */

  if ( digitalRead(RTS_SENSE_PIN) ) {
    11ae:	12 9b       	sbis	0x02, 2	; 2
    11b0:	90 c0       	rjmp	.+288    	; 0x12d2 <main+0x220>
LED_HeartBeat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:145
 * LED動作切替
 */

/* ハートビート（待機中）*/
void TIM::LED_HeartBeat (void) {
  if (TIM::mode != 1) {
    11b2:	20 91 50 38 	lds	r18, 0x3850	; 0x803850 <TIM::mode>
    11b6:	21 30       	cpi	r18, 0x01	; 1
    11b8:	89 f0       	breq	.+34     	; 0x11dc <main+0x12a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:146
    TIM::mode = 1;
    11ba:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:147
    TCB1_CCMP = TCB1_HBEAT;
    11be:	2a e8       	ldi	r18, 0x8A	; 138
    11c0:	35 e4       	ldi	r19, 0x45	; 69
    11c2:	20 93 9c 0a 	sts	0x0A9C, r18	; 0x800a9c <UPDI::nvmprog_key+0x7f72ec>
    11c6:	30 93 9d 0a 	sts	0x0A9D, r19	; 0x800a9d <UPDI::nvmprog_key+0x7f72ed>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:148
    TCB1_CNT = 0;
    11ca:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f72ea>
    11ce:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f72eb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:149
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;
    11d2:	90 93 90 0a 	sts	0x0A90, r25	; 0x800a90 <UPDI::nvmprog_key+0x7f72e0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:150
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
    11d6:	83 e0       	ldi	r24, 0x03	; 3
    11d8:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f69f9>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:82
  };
}

/* 初期化 */
void JTAG2::setup (void) {
  JTAG_USART.BAUD = pgm_read_word( &BAUD_TABLE[JTAG2::BAUD_19200] );
    11dc:	ed e9       	ldi	r30, 0x9D	; 157
    11de:	f0 e0       	ldi	r31, 0x00	; 0
    11e0:	85 91       	lpm	r24, Z+
    11e2:	94 91       	lpm	r25, Z
    11e4:	80 93 28 08 	sts	0x0828, r24	; 0x800828 <UPDI::nvmprog_key+0x7f7078>
    11e8:	90 93 29 08 	sts	0x0829, r25	; 0x800829 <UPDI::nvmprog_key+0x7f7079>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:83
  JTAG_USART.CTRLA = JTAG_USART_CTRLA;
    11ec:	10 92 25 08 	sts	0x0825, r1	; 0x800825 <UPDI::nvmprog_key+0x7f7075>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:84
  JTAG_USART.CTRLC = JTAG_USART_CTRLC;
    11f0:	83 e0       	ldi	r24, 0x03	; 3
    11f2:	80 93 27 08 	sts	0x0827, r24	; 0x800827 <UPDI::nvmprog_key+0x7f7077>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:85
  JTAG_USART.CTRLB = JTAG_USART_OFF;
    11f6:	88 e8       	ldi	r24, 0x88	; 136
    11f8:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f7076>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:29
void UPDI::guardtime (void) {
  delay_micros(UPDI_GUARDTIME);
}

void UPDI::setup (void) {
  UPDI_USART.BAUD  = UPDI_BAUD_CALC;
    11fc:	80 eb       	ldi	r24, 0xB0	; 176
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f7058>
    1204:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f7059>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:30
  UPDI_USART.CTRLA = UPDI_USART_CTRLA;
    1208:	8a e0       	ldi	r24, 0x0A	; 10
    120a:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <UPDI::nvmprog_key+0x7f7055>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:31
  UPDI_USART.CTRLC = UPDI_USART_CTRLC;
    120e:	8b e2       	ldi	r24, 0x2B	; 43
    1210:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <UPDI::nvmprog_key+0x7f7057>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:32
  UPDI_USART.CTRLB = UPDI_USART_ON;
    1214:	88 ec       	ldi	r24, 0xC8	; 200
    1216:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f7056>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:35

  /* ソフトリセット後は ターゲットのリセットを解除 */
  if ( bit_is_set(RSTCTRL_RSTFR, RSTCTRL_SWRF_bp) ) UPDI::Target_Reset(false);
    121a:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <UPDI::nvmprog_key+0x7f6890>
    121e:	84 ff       	sbrs	r24, 4
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <main+0x174>
    1222:	80 e0       	ldi	r24, 0x00	; 0
    1224:	7b d8       	rcall	.-3850   	; 0x31c <UPDI::Target_Reset(bool)>
ready():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:119
/*
 * 起動シーケンスの最後に実行
 */

void SYS::ready (void) {
  RSTCTRL_RSTFR = 0xFF;
    1226:	8f ef       	ldi	r24, 0xFF	; 255
    1228:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <UPDI::nvmprog_key+0x7f6890>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:122

  /* 初期化中に検出された非同期割込をクリアする */
  portRegister(RTS_SENSE_PIN).INTFLAGS = 0xFF;
    122c:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6c59>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:125

  /* 割込許可 */
  sei();
    1230:	78 94       	sei
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:297
    case JTAG2::CMND_ENTER_PROGMODE : {
      uint8_t c = UPDI_CONTROL;
      UPDI::updi_activate();
      JTAG2::set_response(JTAG2::RSP_OK);
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
        packet.size = 19;
    1232:	e3 e1       	ldi	r30, 0x13	; 19
    1234:	8e 2e       	mov	r8, r30
    1236:	91 2c       	mov	r9, r1
    1238:	a1 2c       	mov	r10, r1
    123a:	b1 2c       	mov	r11, r1
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:251
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
    123c:	f2 e0       	ldi	r31, 0x02	; 2
    123e:	2f 2e       	mov	r2, r31
    1240:	31 2c       	mov	r3, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    1242:	a3 e0       	ldi	r26, 0x03	; 3
    1244:	ca 2e       	mov	r12, r26
    1246:	d1 2c       	mov	r13, r1
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    1248:	bd e1       	ldi	r27, 0x1D	; 29
    124a:	4b 2e       	mov	r4, r27
    124c:	51 2c       	mov	r5, r1
    124e:	61 2c       	mov	r6, r1
    1250:	71 2c       	mov	r7, r1
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    1252:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f7074>
    1256:	87 ff       	sbrs	r24, 7
    1258:	fc cf       	rjmp	.-8      	; 0x1252 <main+0x1a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    125a:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f7070>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:126
  uint16_t _crc = ~0;
  uint8_t *p = (uint8_t*) &packet.soh;
  uint8_t *q = (uint8_t*) &packet.soh;

  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
    125e:	8b 31       	cpi	r24, 0x1B	; 27
    1260:	c1 f7       	brne	.-16     	; 0x1252 <main+0x1a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:127
  (*p++) = JTAG2::MESSAGE_START;
    1262:	80 93 5f 38 	sts	0x385F, r24	; 0x80385f <JTAG2::packet>
    1266:	e0 e6       	ldi	r30, 0x60	; 96
    1268:	f8 e3       	ldi	r31, 0x38	; 56
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    126a:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f7074>
    126e:	87 ff       	sbrs	r24, 7
    1270:	fc cf       	rjmp	.-8      	; 0x126a <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    1272:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f7070>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:130
  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
  (*p++) = JTAG2::MESSAGE_START;

  /* 最初の7byte */
  for (int8_t i = 0; i < 7; i++) *p++ = get();
    1276:	81 93       	st	Z+, r24
    1278:	27 e6       	ldi	r18, 0x67	; 103
    127a:	38 e3       	ldi	r19, 0x38	; 56
    127c:	2e 17       	cp	r18, r30
    127e:	3f 07       	cpc	r19, r31
    1280:	a1 f7       	brne	.-24     	; 0x126a <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:133

  /* STX 確認 */
  if (packet.stx != JTAG2::TOKEN) return false;
    1282:	80 91 66 38 	lds	r24, 0x3866	; 0x803866 <JTAG2::packet+0x7>
    1286:	8e 30       	cpi	r24, 0x0E	; 14
    1288:	21 f7       	brne	.-56     	; 0x1252 <main+0x1a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:136

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;
    128a:	80 91 62 38 	lds	r24, 0x3862	; 0x803862 <JTAG2::packet+0x3>
    128e:	90 91 63 38 	lds	r25, 0x3863	; 0x803863 <JTAG2::packet+0x4>
    1292:	a0 91 64 38 	lds	r26, 0x3864	; 0x803864 <JTAG2::packet+0x5>
    1296:	b0 91 65 38 	lds	r27, 0x3865	; 0x803865 <JTAG2::packet+0x6>
    129a:	8a 30       	cpi	r24, 0x0A	; 10
    129c:	92 40       	sbci	r25, 0x02	; 2
    129e:	a1 05       	cpc	r26, r1
    12a0:	b1 05       	cpc	r27, r1
    12a2:	b8 f6       	brcc	.-82     	; 0x1252 <main+0x1a0>
    12a4:	c7 e6       	ldi	r28, 0x67	; 103
    12a6:	d8 e3       	ldi	r29, 0x38	; 56
    12a8:	7e 01       	movw	r14, r28
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    12aa:	8e ef       	ldi	r24, 0xFE	; 254
    12ac:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
    12ae:	20 91 62 38 	lds	r18, 0x3862	; 0x803862 <JTAG2::packet+0x3>
    12b2:	30 91 63 38 	lds	r19, 0x3863	; 0x803863 <JTAG2::packet+0x4>
    12b6:	82 17       	cp	r24, r18
    12b8:	93 07       	cpc	r25, r19
    12ba:	6c f4       	brge	.+26     	; 0x12d6 <main+0x224>
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    12bc:	20 91 24 08 	lds	r18, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f7074>
    12c0:	27 ff       	sbrs	r18, 7
    12c2:	fc cf       	rjmp	.-8      	; 0x12bc <main+0x20a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    12c4:	20 91 20 08 	lds	r18, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f7070>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    12c8:	d7 01       	movw	r26, r14
    12ca:	2d 93       	st	X+, r18
    12cc:	7d 01       	movw	r14, r26
    12ce:	01 96       	adiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:109

  if ( digitalRead(RTS_SENSE_PIN) ) {
    LED_HeartBeat();
  }
  else {
    LED_Flash();
    12d0:	ee cf       	rjmp	.-36     	; 0x12ae <main+0x1fc>
setup():
    12d2:	4a d8       	rcall	.-3948   	; 0x368 <TIM::LED_Flash()>
    12d4:	83 cf       	rjmp	.-250    	; 0x11dc <main+0x12a>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139
    12d6:	0f e5       	ldi	r16, 0x5F	; 95
    12d8:	18 e3       	ldi	r17, 0x38	; 56
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:121
  return _crc_ccitt_update(_crc, _data);
}

/* JTAG Receive */
bool JTAG2::packet_receive (void) {
  uint16_t _crc = ~0;
    12da:	8f ef       	ldi	r24, 0xFF	; 255
    12dc:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:142

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();

  /* 受信バッファが満たされたら CRC 確認 */
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
    12de:	0e 15       	cp	r16, r14
    12e0:	1f 05       	cpc	r17, r15
    12e2:	29 f0       	breq	.+10     	; 0x12ee <main+0x23c>
    12e4:	f8 01       	movw	r30, r16
    12e6:	61 91       	ld	r22, Z+
    12e8:	8f 01       	movw	r16, r30
crc16_update():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
    12ea:	a1 d8       	rcall	.-3774   	; 0x42e <_crc_ccitt_update(unsigned int, unsigned char)>
    12ec:	f8 cf       	rjmp	.-16     	; 0x12de <main+0x22c>
wakeup_jtag():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:378
  JTAG2::answer_transfer();
}

void JTAG2::wakeup_jtag (void) {
  for (;;) {
    if (JTAG2::packet_receive()) JTAG2::process_command();
    12ee:	89 2b       	or	r24, r25
    12f0:	09 f0       	breq	.+2      	; 0x12f4 <main+0x242>
    12f2:	af cf       	rjmp	.-162    	; 0x1252 <main+0x1a0>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:274
  packet.body[0] = JTAG2::RSP_PARAMETER;
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
    12f4:	a8 95       	wdr
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
  switch ( packet.body[0] ) {
    12f6:	80 91 67 38 	lds	r24, 0x3867	; 0x803867 <JTAG2::packet+0x8>
    12fa:	88 30       	cpi	r24, 0x08	; 8
    12fc:	09 f4       	brne	.+2      	; 0x1300 <main+0x24e>
    12fe:	c3 c1       	rjmp	.+902    	; 0x1686 <main+0x5d4>
    1300:	d8 f5       	brcc	.+118    	; 0x1378 <main+0x2c6>
    1302:	82 30       	cpi	r24, 0x02	; 2
    1304:	09 f4       	brne	.+2      	; 0x1308 <main+0x256>
    1306:	a0 c0       	rjmp	.+320    	; 0x1448 <main+0x396>
    1308:	48 f4       	brcc	.+18     	; 0x131c <main+0x26a>
    130a:	88 23       	and	r24, r24
    130c:	09 f4       	brne	.+2      	; 0x1310 <main+0x25e>
    130e:	c0 c1       	rjmp	.+896    	; 0x1690 <main+0x5de>
    1310:	81 30       	cpi	r24, 0x01	; 1
    1312:	09 f4       	brne	.+2      	; 0x1316 <main+0x264>
    1314:	48 c0       	rjmp	.+144    	; 0x13a6 <main+0x2f4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:370
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    1316:	80 ea       	ldi	r24, 0xA0	; 160
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	d7 c0       	rjmp	.+430    	; 0x14ca <main+0x418>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    131c:	84 30       	cpi	r24, 0x04	; 4
    131e:	09 f4       	brne	.+2      	; 0x1322 <main+0x270>
    1320:	92 c1       	rjmp	.+804    	; 0x1646 <main+0x594>
    1322:	08 f4       	brcc	.+2      	; 0x1326 <main+0x274>
    1324:	d5 c0       	rjmp	.+426    	; 0x14d0 <main+0x41e>
    1326:	85 30       	cpi	r24, 0x05	; 5
    1328:	b1 f7       	brne	.-20     	; 0x1316 <main+0x264>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:233
/*
 * Dummy SIGNATURE
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
    132a:	80 91 68 38 	lds	r24, 0x3868	; 0x803868 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:237
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    132e:	e1 99       	sbic	0x1c, 1	; 28
    1330:	67 c1       	rjmp	.+718    	; 0x1600 <main+0x54e>
    1332:	84 3b       	cpi	r24, 0xB4	; 180
    1334:	09 f0       	breq	.+2      	; 0x1338 <main+0x286>
    1336:	64 c1       	rjmp	.+712    	; 0x1600 <main+0x54e>
    1338:	80 91 69 38 	lds	r24, 0x3869	; 0x803869 <JTAG2::packet+0xa>
    133c:	81 30       	cpi	r24, 0x01	; 1
    133e:	09 f0       	breq	.+2      	; 0x1342 <main+0x290>
    1340:	5f c1       	rjmp	.+702    	; 0x1600 <main+0x54e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:235
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
    1342:	80 91 6d 38 	lds	r24, 0x386D	; 0x80386d <JTAG2::packet+0xe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:238
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    1346:	92 e8       	ldi	r25, 0x82	; 130
    1348:	90 93 67 38 	sts	0x3867, r25	; 0x803867 <JTAG2::packet+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:239
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    134c:	e0 99       	sbic	0x1c, 0	; 28
    134e:	3c c1       	rjmp	.+632    	; 0x15c8 <main+0x516>
    1350:	9f b3       	in	r25, 0x1f	; 31
    1352:	81 e0       	ldi	r24, 0x01	; 1
    1354:	91 11       	cpse	r25, r1
    1356:	80 e0       	ldi	r24, 0x00	; 0
    1358:	81 95       	neg	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:246
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? '2' : '0';
    else return false;
    JTAG2::packet.size = 2;
    135a:	22 e0       	ldi	r18, 0x02	; 2
    135c:	30 e0       	ldi	r19, 0x00	; 0
    135e:	40 e0       	ldi	r20, 0x00	; 0
    1360:	50 e0       	ldi	r21, 0x00	; 0
    1362:	20 93 62 38 	sts	0x3862, r18	; 0x803862 <JTAG2::packet+0x3>
    1366:	30 93 63 38 	sts	0x3863, r19	; 0x803863 <JTAG2::packet+0x4>
    136a:	40 93 64 38 	sts	0x3864, r20	; 0x803864 <JTAG2::packet+0x5>
    136e:	50 93 65 38 	sts	0x3865, r21	; 0x803865 <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:247
    JTAG2::packet.body[1] = c;
    1372:	80 93 68 38 	sts	0x3868, r24	; 0x803868 <JTAG2::packet+0x9>
    1376:	66 c0       	rjmp	.+204    	; 0x1444 <main+0x392>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
    1378:	84 31       	cpi	r24, 0x14	; 20
    137a:	09 f4       	brne	.+2      	; 0x137e <main+0x2cc>
    137c:	0b c1       	rjmp	.+534    	; 0x1594 <main+0x4e2>
    137e:	48 f4       	brcc	.+18     	; 0x1392 <main+0x2e0>
    1380:	8b 30       	cpi	r24, 0x0B	; 11
    1382:	48 f2       	brcs	.-110    	; 0x1316 <main+0x264>
    1384:	8d 30       	cpi	r24, 0x0D	; 13
    1386:	10 f0       	brcs	.+4      	; 0x138c <main+0x2da>
    1388:	8f 30       	cpi	r24, 0x0F	; 15
    138a:	29 f6       	brne	.-118    	; 0x1316 <main+0x264>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:335
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
      JTAG2::set_response(JTAG2::RSP_OK);
    138c:	80 e8       	ldi	r24, 0x80	; 128
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	9c c0       	rjmp	.+312    	; 0x14ca <main+0x418>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    1392:	84 33       	cpi	r24, 0x34	; 52
    1394:	09 f4       	brne	.+2      	; 0x1398 <main+0x2e6>
    1396:	5e c1       	rjmp	.+700    	; 0x1654 <main+0x5a2>
    1398:	86 33       	cpi	r24, 0x36	; 54
    139a:	09 f4       	brne	.+2      	; 0x139e <main+0x2ec>
    139c:	87 c1       	rjmp	.+782    	; 0x16ac <main+0x5fa>
    139e:	85 31       	cpi	r24, 0x15	; 21
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <main+0x2f2>
    13a2:	b9 cf       	rjmp	.-142    	; 0x1316 <main+0x264>
    13a4:	f3 cf       	rjmp	.-26     	; 0x138c <main+0x2da>
RTS_Disable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:107
void SYS::RTS_Enable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
}

void SYS::RTS_Disable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_DISABLE;
    13a6:	88 e0       	ldi	r24, 0x08	; 8
    13a8:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <UPDI::nvmprog_key+0x7f6c62>
WDT_ON():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:139
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }
    13ac:	8b e0       	ldi	r24, 0x0B	; 11
    13ae:	0e 94 d6 01 	call	0x3ac	; 0x3ac <SYS::WDT_SET(unsigned char)>
LED_Stop():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:182
}

/* 停止（UPDI許認可前）*/
/* TCA0はチャージポンプ駆動速度に変更 */
void TIM::LED_Stop (void) {
  if (TIM::mode != 0) {
    13b2:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    13b6:	88 23       	and	r24, r24
    13b8:	41 f0       	breq	.+16     	; 0x13ca <main+0x318>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:183
    TIM::mode = 0;
    13ba:	10 92 50 38 	sts	0x3850, r1	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:184
    TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    13be:	81 e8       	ldi	r24, 0x81	; 129
    13c0:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <UPDI::nvmprog_key+0x7f7250>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:185
    LEDG_EVOUT = EVSYS_USER_OFF_gc;
    13c4:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <UPDI::nvmprog_key+0x7f69f9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:186
    digitalWrite(LEDG_PIN, LOW);
    13c8:	0f 98       	cbi	0x01, 7	; 1
PG_Enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:95
/*
 * 各種ON/OFF
 */

void SYS::PG_Enable (void) {
  digitalWrite(PGEN_PIN, HIGH);
    13ca:	48 9a       	sbi	0x09, 0	; 9
transfer_enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:90
  JTAG_USART.CTRLB = JTAG_USART_OFF;
}

void JTAG2::transfer_enable (void) {
  SYS::PG_Enable();
  pinMode(JTAG_TXD_PIN, OUTPUT);
    13cc:	42 9a       	sbi	0x08, 2	; 8
    13ce:	10 92 52 04 	sts	0x0452, r1	; 0x800452 <UPDI::nvmprog_key+0x7f6ca2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:91
  JTAG_USART.CTRLB = JTAG_USART_ON;
    13d2:	88 ec       	ldi	r24, 0xC8	; 200
    13d4:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f7076>
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    13d8:	40 92 62 38 	sts	0x3862, r4	; 0x803862 <JTAG2::packet+0x3>
    13dc:	50 92 63 38 	sts	0x3863, r5	; 0x803863 <JTAG2::packet+0x4>
    13e0:	60 92 64 38 	sts	0x3864, r6	; 0x803864 <JTAG2::packet+0x5>
    13e4:	70 92 65 38 	sts	0x3865, r7	; 0x803865 <JTAG2::packet+0x6>
    13e8:	e8 e7       	ldi	r30, 0x78	; 120
    13ea:	f0 e0       	ldi	r31, 0x00	; 0
    13ec:	84 e8       	ldi	r24, 0x84	; 132
    13ee:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:177
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
    13f0:	24 91       	lpm	r18, Z
    13f2:	29 93       	st	Y+, r18
    13f4:	31 96       	adiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:176
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    13f6:	8c 17       	cp	r24, r28
    13f8:	9d 07       	cpc	r25, r29
    13fa:	d1 f7       	brne	.-12     	; 0x13f0 <main+0x33e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:182
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
  /* SERNUMから Version情報を生成する */
  uint8_t* p = (uint8_t*) &SIGROW_SERNUM0;
  uint8_t* q = (uint8_t*) &SIGROW_SERNUM4;
  uint8_t* r = (uint8_t*) &packet.body[10];
    *r++ = *q++ ^ *p++ ^ *p++;
    13fc:	80 91 07 11 	lds	r24, 0x1107	; 0x801107 <UPDI::nvmprog_key+0x7f7957>
    1400:	90 91 03 11 	lds	r25, 0x1103	; 0x801103 <UPDI::nvmprog_key+0x7f7953>
    1404:	89 27       	eor	r24, r25
    1406:	90 91 04 11 	lds	r25, 0x1104	; 0x801104 <UPDI::nvmprog_key+0x7f7954>
    140a:	89 27       	eor	r24, r25
    140c:	80 93 71 38 	sts	0x3871, r24	; 0x803871 <JTAG2::packet+0x12>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:183
    *r++ = *q++ ^ *p++ ^ *p++;
    1410:	80 91 08 11 	lds	r24, 0x1108	; 0x801108 <UPDI::nvmprog_key+0x7f7958>
    1414:	90 91 05 11 	lds	r25, 0x1105	; 0x801105 <UPDI::nvmprog_key+0x7f7955>
    1418:	89 27       	eor	r24, r25
    141a:	90 91 06 11 	lds	r25, 0x1106	; 0x801106 <UPDI::nvmprog_key+0x7f7956>
    141e:	89 27       	eor	r24, r25
    1420:	80 93 72 38 	sts	0x3872, r24	; 0x803872 <JTAG2::packet+0x13>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:184
    *r++ = *q++;
    1424:	80 91 09 11 	lds	r24, 0x1109	; 0x801109 <UPDI::nvmprog_key+0x7f7959>
    1428:	80 93 73 38 	sts	0x3873, r24	; 0x803873 <JTAG2::packet+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:185
    *r++ = *q++;
    142c:	80 91 0a 11 	lds	r24, 0x110A	; 0x80110a <UPDI::nvmprog_key+0x7f795a>
    1430:	80 93 74 38 	sts	0x3874, r24	; 0x803874 <JTAG2::packet+0x15>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:186
    *r++ = *q++;
    1434:	80 91 0b 11 	lds	r24, 0x110B	; 0x80110b <UPDI::nvmprog_key+0x7f795b>
    1438:	80 93 75 38 	sts	0x3875, r24	; 0x803875 <JTAG2::packet+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:187
    *r++ = *q++;
    143c:	80 91 0c 11 	lds	r24, 0x110C	; 0x80110c <UPDI::nvmprog_key+0x7f795c>
    1440:	80 93 76 38 	sts	0x3876, r24	; 0x803876 <JTAG2::packet+0x17>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:373
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    }
  }
  JTAG2::answer_transfer();
    1444:	06 d8       	rcall	.-4084   	; 0x452 <JTAG2::answer_transfer()>
    1446:	05 cf       	rjmp	.-502    	; 0x1252 <main+0x1a0>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:193
  JTAG2::answer_transfer();
}

/* CMND_SET_PARAMETER */
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
    1448:	f0 90 69 38 	lds	r15, 0x3869	; 0x803869 <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:194
  switch (packet.body[1]) {
    144c:	80 91 68 38 	lds	r24, 0x3868	; 0x803868 <JTAG2::packet+0x9>
    1450:	83 30       	cpi	r24, 0x03	; 3
    1452:	b1 f1       	breq	.+108    	; 0x14c0 <main+0x40e>
    1454:	85 30       	cpi	r24, 0x05	; 5
    1456:	09 f0       	breq	.+2      	; 0x145a <main+0x3a8>
    1458:	99 cf       	rjmp	.-206    	; 0x138c <main+0x2da>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:203
      break;
    }
    /* JTAGインタフェース速度 */
    case JTAG2::PARAM_BAUD_RATE : {
      /* 対応範囲確認 */
      if ((param_val >= JTAG2::BAUD_LOWER) && (param_val <= JTAG2::BAUD_UPPER)) {
    145a:	8e ef       	ldi	r24, 0xFE	; 254
    145c:	8f 0d       	add	r24, r15
    145e:	88 31       	cpi	r24, 0x18	; 24
    1460:	90 f5       	brcc	.+100    	; 0x14c6 <main+0x414>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:204
        uint16_t baud = pgm_read_word( &BAUD_TABLE[param_val] );
    1462:	8f 2d       	mov	r24, r15
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	fc 01       	movw	r30, r24
    1468:	ee 0f       	add	r30, r30
    146a:	ff 1f       	adc	r31, r31
    146c:	eb 56       	subi	r30, 0x6B	; 107
    146e:	ff 4f       	sbci	r31, 0xFF	; 255
    1470:	c5 91       	lpm	r28, Z+
    1472:	d4 91       	lpm	r29, Z
    1474:	8e 01       	movw	r16, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:205
        if (baud) {
    1476:	20 97       	sbiw	r28, 0x00	; 0
    1478:	31 f1       	breq	.+76     	; 0x14c6 <main+0x414>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:207
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
    147a:	80 93 33 38 	sts	0x3833, r24	; 0x803833 <JTAG2::PARAM_BAUD_RATE_VAL>
    147e:	90 93 34 38 	sts	0x3834, r25	; 0x803834 <JTAG2::PARAM_BAUD_RATE_VAL+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:208
          JTAG2::set_response(JTAG2::RSP_OK);
    1482:	80 e8       	ldi	r24, 0x80	; 128
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:209
          JTAG2::answer_transfer();
    148a:	0e 94 29 02 	call	0x452	; 0x452 <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    148e:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f7074>
    1492:	86 ff       	sbrs	r24, 6
    1494:	fc cf       	rjmp	.-8      	; 0x148e <main+0x3dc>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:211
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
          JTAG2::set_response(JTAG2::RSP_OK);
          JTAG2::answer_transfer();
          JTAG2::flush();
          if (baud < 64) {
    1496:	c0 34       	cpi	r28, 0x40	; 64
    1498:	d1 05       	cpc	r29, r1
    149a:	30 f4       	brcc	.+12     	; 0x14a8 <main+0x3f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:212
            JTAG_USART.CTRLB = JTAG_USART_DBLON;
    149c:	8a ec       	ldi	r24, 0xCA	; 202
    149e:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f7076>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:213
            baud <<= 1;
    14a2:	8e 01       	movw	r16, r28
    14a4:	00 0f       	add	r16, r16
    14a6:	11 1f       	adc	r17, r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:215
          }
          JTAG_USART.BAUD = baud;
    14a8:	00 93 28 08 	sts	0x0828, r16	; 0x800828 <UPDI::nvmprog_key+0x7f7078>
    14ac:	10 93 29 08 	sts	0x0829, r17	; 0x800829 <UPDI::nvmprog_key+0x7f7079>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:217
          /* terminal mode を許可する速度 */
          if (param_val == JTAG2::BAUD_38400 || param_val == JTAG2::BAUD_666666)
    14b0:	f5 e0       	ldi	r31, 0x05	; 5
    14b2:	ff 16       	cp	r15, r31
    14b4:	19 f0       	breq	.+6      	; 0x14bc <main+0x40a>
    14b6:	28 e1       	ldi	r18, 0x18	; 24
    14b8:	f2 12       	cpse	r15, r18
    14ba:	cb ce       	rjmp	.-618    	; 0x1252 <main+0x1a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:218
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
    14bc:	e6 9a       	sbi	0x1c, 6	; 28
    14be:	c9 ce       	rjmp	.-622    	; 0x1252 <main+0x1a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:197
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
  switch (packet.body[1]) {
    /* エミュレーションモード */
    case JTAG2::PARAM_EMU_MODE : {
      PARAM_EMU_MODE_VAL = param_val;
    14c0:	f0 92 4f 38 	sts	0x384F, r15	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
    14c4:	63 cf       	rjmp	.-314    	; 0x138c <main+0x2da>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:223
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
          return false;
        }
      }
      /* 範囲違反は失敗応答 */
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_VALUE);
    14c6:	86 ea       	ldi	r24, 0xA6	; 166
    14c8:	90 e0       	ldi	r25, 0x00	; 0
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:370
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    14ca:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <JTAG2::set_response(JTAG2::jtag_response_e)>
    14ce:	ba cf       	rjmp	.-140    	; 0x1444 <main+0x392>
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    14d0:	80 91 68 38 	lds	r24, 0x3868	; 0x803868 <JTAG2::packet+0x9>
    14d4:	83 30       	cpi	r24, 0x03	; 3
    14d6:	09 f4       	brne	.+2      	; 0x14da <main+0x428>
    14d8:	51 c0       	rjmp	.+162    	; 0x157c <main+0x4ca>
    14da:	38 f4       	brcc	.+14     	; 0x14ea <main+0x438>
    14dc:	81 30       	cpi	r24, 0x01	; 1
    14de:	81 f1       	breq	.+96     	; 0x1540 <main+0x48e>
    14e0:	82 30       	cpi	r24, 0x02	; 2
    14e2:	b9 f1       	breq	.+110    	; 0x1552 <main+0x4a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:265
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
    14e4:	81 ea       	ldi	r24, 0xA1	; 161
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	f0 cf       	rjmp	.-32     	; 0x14ca <main+0x418>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    14ea:	85 30       	cpi	r24, 0x05	; 5
    14ec:	09 f4       	brne	.+2      	; 0x14f0 <main+0x43e>
    14ee:	4f c0       	rjmp	.+158    	; 0x158e <main+0x4dc>
    14f0:	86 30       	cpi	r24, 0x06	; 6
    14f2:	c1 f7       	brne	.-16     	; 0x14e4 <main+0x432>
get_vcc():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:69
/*
 * 自己VCC測定
 */

uint16_t SYS::get_vcc (void) {
  ADC0_CTRLA = ADC_ENABLE_bm;
    14f4:	81 e0       	ldi	r24, 0x01	; 1
    14f6:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <UPDI::nvmprog_key+0x7f6e50>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:70
  ADC0_CTRLB = ADC_PRESC_DIV2_gc;
    14fa:	10 92 01 06 	sts	0x0601, r1	; 0x800601 <UPDI::nvmprog_key+0x7f6e51>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:71
  ADC0_CTRLC = ADC_REFSEL_1024MV_gc | ((F_CPU / 1000000UL) << ADC_TIMEBASE_gp);
    14fe:	84 e5       	ldi	r24, 0x54	; 84
    1500:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <UPDI::nvmprog_key+0x7f6e52>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:72
  ADC0_CTRLE = 17; /* (SAMPDUR + 0.5) * fCLK_ADC = 10.5 µs sample duration */
    1504:	81 e1       	ldi	r24, 0x11	; 17
    1506:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <UPDI::nvmprog_key+0x7f6e58>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:73
  ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD/10 */
    150a:	91 e3       	ldi	r25, 0x31	; 49
    150c:	90 93 0c 06 	sts	0x060C, r25	; 0x80060c <UPDI::nvmprog_key+0x7f6e5c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:74
  ADC0_COMMAND = ADC_MODE_SINGLE_12BIT_gc | ADC_START_IMMEDIATE_gc;
    1510:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <UPDI::nvmprog_key+0x7f6e5a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:75
  loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
    1514:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <UPDI::nvmprog_key+0x7f6e55>
    1518:	81 ff       	sbrs	r24, 1
    151a:	fc cf       	rjmp	.-8      	; 0x1514 <main+0x462>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:76
  uint16_t adc_reading = ADC0_SAMPLE;
    151c:	80 91 14 06 	lds	r24, 0x0614	; 0x800614 <UPDI::nvmprog_key+0x7f6e64>
    1520:	90 91 15 06 	lds	r25, 0x0615	; 0x800615 <UPDI::nvmprog_key+0x7f6e65>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:77
  adc_reading += adc_reading + (adc_reading >> 1);  /* x2.5 */
    1524:	9c 01       	movw	r18, r24
    1526:	36 95       	lsr	r19
    1528:	27 95       	ror	r18
    152a:	88 0f       	add	r24, r24
    152c:	99 1f       	adc	r25, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:78
  ADC0_CTRLA = 0;
    152e:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <UPDI::nvmprog_key+0x7f6e50>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:77
  ADC0_CTRLE = 17; /* (SAMPDUR + 0.5) * fCLK_ADC = 10.5 µs sample duration */
  ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD/10 */
  ADC0_COMMAND = ADC_MODE_SINGLE_12BIT_gc | ADC_START_IMMEDIATE_gc;
  loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
  uint16_t adc_reading = ADC0_SAMPLE;
  adc_reading += adc_reading + (adc_reading >> 1);  /* x2.5 */
    1532:	82 0f       	add	r24, r18
    1534:	93 1f       	adc	r25, r19
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:260
      packet.body[1] = PARAM_BAUD_RATE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
    1536:	80 93 68 38 	sts	0x3868, r24	; 0x803868 <JTAG2::packet+0x9>
    153a:	90 93 69 38 	sts	0x3869, r25	; 0x803869 <JTAG2::packet+0xa>
    153e:	04 c0       	rjmp	.+8      	; 0x1548 <main+0x496>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:236
/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    case JTAG2::PARAM_HW_VER : {
      packet.body[1] = sign_on_resp[5];
    1540:	80 93 68 38 	sts	0x3868, r24	; 0x803868 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:237
      packet.body[2] = sign_on_resp[9];
    1544:	80 93 69 38 	sts	0x3869, r24	; 0x803869 <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    1548:	c0 92 62 38 	sts	0x3862, r12	; 0x803862 <JTAG2::packet+0x3>
    154c:	d0 92 63 38 	sts	0x3863, r13	; 0x803863 <JTAG2::packet+0x4>
    1550:	11 c0       	rjmp	.+34     	; 0x1574 <main+0x4c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:242
      packet.body[2] = sign_on_resp[9];
      packet.size_word[0] = 3;
      break;
    }
    case JTAG2::PARAM_FW_VER : {
      packet.body[1] = sign_on_resp[3];
    1552:	91 e0       	ldi	r25, 0x01	; 1
    1554:	90 93 68 38 	sts	0x3868, r25	; 0x803868 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:243
      packet.body[2] = sign_on_resp[4];
    1558:	80 93 69 38 	sts	0x3869, r24	; 0x803869 <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:244
      packet.body[3] = sign_on_resp[7];
    155c:	85 e3       	ldi	r24, 0x35	; 53
    155e:	80 93 6a 38 	sts	0x386A, r24	; 0x80386a <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:245
      packet.body[4] = sign_on_resp[8];
    1562:	87 e0       	ldi	r24, 0x07	; 7
    1564:	80 93 6b 38 	sts	0x386B, r24	; 0x80386b <JTAG2::packet+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:246
      packet.size_word[0] = 5;
    1568:	45 e0       	ldi	r20, 0x05	; 5
    156a:	50 e0       	ldi	r21, 0x00	; 0
    156c:	40 93 62 38 	sts	0x3862, r20	; 0x803862 <JTAG2::packet+0x3>
    1570:	50 93 63 38 	sts	0x3863, r21	; 0x803863 <JTAG2::packet+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:269
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
      return;
    }
  }
  packet.body[0] = JTAG2::RSP_PARAMETER;
    1574:	81 e8       	ldi	r24, 0x81	; 129
    1576:	80 93 67 38 	sts	0x3867, r24	; 0x803867 <JTAG2::packet+0x8>
    157a:	64 cf       	rjmp	.-312    	; 0x1444 <main+0x392>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:250
      packet.body[4] = sign_on_resp[8];
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
    157c:	80 91 4f 38 	lds	r24, 0x384F	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    1580:	80 93 68 38 	sts	0x3868, r24	; 0x803868 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:256
      packet.size_word[0] = 2;
    1584:	20 92 62 38 	sts	0x3862, r2	; 0x803862 <JTAG2::packet+0x3>
    1588:	30 92 63 38 	sts	0x3863, r3	; 0x803863 <JTAG2::packet+0x4>
    158c:	f3 cf       	rjmp	.-26     	; 0x1574 <main+0x4c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    158e:	80 91 33 38 	lds	r24, 0x3833	; 0x803833 <JTAG2::PARAM_BAUD_RATE_VAL>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:293
    case JTAG2::CMND_GET_PARAMETER : {
      JTAG2::get_parameter();
      break;
    }
    case JTAG2::CMND_ENTER_PROGMODE : {
      uint8_t c = UPDI_CONTROL;
    1592:	f6 cf       	rjmp	.-20     	; 0x1580 <main+0x4ce>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:294
      UPDI::updi_activate();
    1594:	cc b3       	in	r28, 0x1c	; 28
    1596:	28 d8       	rcall	.-4016   	; 0x5e8 <UPDI::updi_activate()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:295
      JTAG2::set_response(JTAG2::RSP_OK);
    1598:	80 e8       	ldi	r24, 0x80	; 128
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:296
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    15a0:	c0 fd       	sbrc	r28, 0
    15a2:	0a c0       	rjmp	.+20     	; 0x15b8 <main+0x506>
    15a4:	e0 9b       	sbis	0x1c, 0	; 28
    15a6:	08 c0       	rjmp	.+16     	; 0x15b8 <main+0x506>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:297
        packet.size = 19;
    15a8:	80 92 62 38 	sts	0x3862, r8	; 0x803862 <JTAG2::packet+0x3>
    15ac:	90 92 63 38 	sts	0x3863, r9	; 0x803863 <JTAG2::packet+0x4>
    15b0:	a0 92 64 38 	sts	0x3864, r10	; 0x803864 <JTAG2::packet+0x5>
    15b4:	b0 92 65 38 	sts	0x3865, r11	; 0x803865 <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:298
      TIM::LED_Blink();
    15b8:	0e 94 9c 01 	call	0x338	; 0x338 <TIM::LED_Blink()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:300
      /* terminal mode 許可時は WDTを無効にする */
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) SYS::WDT_OFF();
    15bc:	e6 9b       	sbis	0x1c, 6	; 28
    15be:	42 cf       	rjmp	.-380    	; 0x1444 <main+0x392>
WDT_OFF():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:137
void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }
    15c0:	80 e0       	ldi	r24, 0x00	; 0
    15c2:	0e 94 d6 01 	call	0x3ac	; 0x3ac <SYS::WDT_SET(unsigned char)>
    15c6:	3e cf       	rjmp	.-388    	; 0x1444 <main+0x392>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:240
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    15c8:	88 23       	and	r24, r24
    15ca:	81 f0       	breq	.+32     	; 0x15ec <main+0x53a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:241
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    15cc:	81 30       	cpi	r24, 0x01	; 1
    15ce:	31 f4       	brne	.+12     	; 0x15dc <main+0x52a>
    15d0:	e9 99       	sbic	0x1d, 1	; 29
    15d2:	0e c0       	rjmp	.+28     	; 0x15f0 <main+0x53e>
    15d4:	e8 99       	sbic	0x1d, 0	; 29
    15d6:	0e c0       	rjmp	.+28     	; 0x15f4 <main+0x542>
main():
    15d8:	84 e7       	ldi	r24, 0x74	; 116
    15da:	bf ce       	rjmp	.-642    	; 0x135a <main+0x2a8>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:243
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    15dc:	82 30       	cpi	r24, 0x02	; 2
    15de:	81 f4       	brne	.+32     	; 0x1600 <main+0x54e>
    15e0:	ea 99       	sbic	0x1d, 2	; 29
    15e2:	0a c0       	rjmp	.+20     	; 0x15f8 <main+0x546>
    15e4:	e9 99       	sbic	0x1d, 1	; 29
    15e6:	0a c0       	rjmp	.+20     	; 0x15fc <main+0x54a>
main():
    15e8:	80 e3       	ldi	r24, 0x30	; 48
    15ea:	b7 ce       	rjmp	.-658    	; 0x135a <main+0x2a8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:240
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    15ec:	8e e1       	ldi	r24, 0x1E	; 30
    15ee:	b5 ce       	rjmp	.-662    	; 0x135a <main+0x2a8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:241
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    15f0:	81 e4       	ldi	r24, 0x41	; 65
    15f2:	b3 ce       	rjmp	.-666    	; 0x135a <main+0x2a8>
    15f4:	8d e6       	ldi	r24, 0x6D	; 109
    15f6:	b1 ce       	rjmp	.-670    	; 0x135a <main+0x2a8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:243
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    15f8:	83 e3       	ldi	r24, 0x33	; 51
    15fa:	af ce       	rjmp	.-674    	; 0x135a <main+0x2a8>
    15fc:	82 e3       	ldi	r24, 0x32	; 50
    15fe:	ad ce       	rjmp	.-678    	; 0x135a <main+0x2a8>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:307
    }
    case JTAG2::CMND_READ_MEMORY : {
      /* 非PROG でも SIG要求にはダミー応答する */
      if (UPDI::check_sig()) break;
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();
    1600:	e6 99       	sbic	0x1c, 6	; 28
    1602:	17 c0       	rjmp	.+46     	; 0x1632 <main+0x580>
LED_TCB1():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:155
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
    1604:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    1608:	84 30       	cpi	r24, 0x04	; 4
    160a:	99 f0       	breq	.+38     	; 0x1632 <main+0x580>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:156
    TIM::mode = mode;
    160c:	84 e0       	ldi	r24, 0x04	; 4
    160e:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:157
    TCB1_CCMP = ccmp;
    1612:	45 e1       	ldi	r20, 0x15	; 21
    1614:	51 e0       	ldi	r21, 0x01	; 1
    1616:	40 93 9c 0a 	sts	0x0A9C, r20	; 0x800a9c <UPDI::nvmprog_key+0x7f72ec>
    161a:	50 93 9d 0a 	sts	0x0A9D, r21	; 0x800a9d <UPDI::nvmprog_key+0x7f72ed>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:158
    TCB1_CNT = 0;
    161e:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f72ea>
    1622:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f72eb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:159
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    1626:	8f e4       	ldi	r24, 0x4F	; 79
    1628:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f72e0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
    162c:	81 e0       	ldi	r24, 0x01	; 1
    162e:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f69f9>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:309
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    1632:	e1 99       	sbic	0x1c, 1	; 28
    1634:	03 c0       	rjmp	.+6      	; 0x163c <main+0x58a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:310
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
    1636:	85 ea       	ldi	r24, 0xA5	; 165
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	47 cf       	rjmp	.-370    	; 0x14ca <main+0x418>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:309
      /* 非PROG でも SIG要求にはダミー応答する */
      if (UPDI::check_sig()) break;
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    163c:	81 e0       	ldi	r24, 0x01	; 1
    163e:	53 d9       	rcall	.-3418   	; 0x8e6 <UPDI::runtime(unsigned char)>
    1640:	81 11       	cpse	r24, r1
    1642:	00 cf       	rjmp	.-512    	; 0x1444 <main+0x392>
    1644:	f8 cf       	rjmp	.-16     	; 0x1636 <main+0x584>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:316
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_WRITE_MEMORY)
    1646:	82 e0       	ldi	r24, 0x02	; 2
    1648:	4e d9       	rcall	.-3428   	; 0x8e6 <UPDI::runtime(unsigned char)>
    164a:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:315
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
    164c:	9f ce       	rjmp	.-706    	; 0x138c <main+0x2da>
main():
    164e:	82 ea       	ldi	r24, 0xA2	; 162
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	3b cf       	rjmp	.-394    	; 0x14ca <main+0x418>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:323
        : JTAG2::RSP_ILLEGAL_MEMORY_TYPE
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
    1654:	cc b3       	in	r28, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:325
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
    1656:	83 e0       	ldi	r24, 0x03	; 3
    1658:	46 d9       	rcall	.-3444   	; 0x8e6 <UPDI::runtime(unsigned char)>
    165a:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:324
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    165c:	11 c0       	rjmp	.+34     	; 0x1680 <main+0x5ce>
main():
    165e:	85 ea       	ldi	r24, 0xA5	; 165
    1660:	90 e0       	ldi	r25, 0x00	; 0
process_command():
    1662:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <JTAG2::set_response(JTAG2::jtag_response_e)>
    1666:	c0 fd       	sbrc	r28, 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:329
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
        ? JTAG2::RSP_OK
        : JTAG2::RSP_ILLEGAL_MCU_STATE
      );
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    1668:	ed ce       	rjmp	.-550    	; 0x1444 <main+0x392>
    166a:	e0 9b       	sbis	0x1c, 0	; 28
    166c:	eb ce       	rjmp	.-554    	; 0x1444 <main+0x392>
    166e:	80 92 62 38 	sts	0x3862, r8	; 0x803862 <JTAG2::packet+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:330
        packet.size = 19;
    1672:	90 92 63 38 	sts	0x3863, r9	; 0x803863 <JTAG2::packet+0x4>
    1676:	a0 92 64 38 	sts	0x3864, r10	; 0x803864 <JTAG2::packet+0x5>
    167a:	b0 92 65 38 	sts	0x3865, r11	; 0x803865 <JTAG2::packet+0x6>
    167e:	e2 ce       	rjmp	.-572    	; 0x1444 <main+0x392>
main():
    1680:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:324
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	ee cf       	rjmp	.-36     	; 0x1662 <main+0x5b0>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:334
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
    1686:	e1 9b       	sbis	0x1c, 1	; 28
    1688:	81 ce       	rjmp	.-766    	; 0x138c <main+0x2da>
    168a:	84 e0       	ldi	r24, 0x04	; 4
    168c:	2c d9       	rcall	.-3496   	; 0x8e6 <UPDI::runtime(unsigned char)>
    168e:	7e ce       	rjmp	.-772    	; 0x138c <main+0x2da>
    1690:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:339
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    case JTAG2::CMND_SIGN_OFF : {
      JTAG2::set_response(JTAG2::RSP_OK);
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <JTAG2::set_response(JTAG2::jtag_response_e)>
    1698:	0e 94 29 02 	call	0x452	; 0x452 <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:340
      JTAG2::answer_transfer();
    169c:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f7074>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    16a0:	86 ff       	sbrs	r24, 6
    16a2:	fc cf       	rjmp	.-8      	; 0x169c <main+0x5ea>
WDT_REBOOT():
    16a4:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:142

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }

void SYS::WDT_REBOOT (void) {
  WDT_SET(WDT_PERIOD_8CLK_gc);
    16a6:	0e 94 d6 01 	call	0x3ac	; 0x3ac <SYS::WDT_SET(unsigned char)>
    16aa:	ff cf       	rjmp	.-2      	; 0x16aa <main+0x5f8>
process_command():
    16ac:	80 91 73 38 	lds	r24, 0x3873	; 0x803873 <JTAG2::packet+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:349
      SYS::WDT_REBOOT();
      /* Session Complete */
    }
    // Ex) struct xmega_device_desc
    case JTAG2::CMND_SET_XMEGA_PARAMS : {
      NVM::nvm_eeprom_offset   = _CAPS32(packet.body[12])->dword;
    16b0:	90 91 74 38 	lds	r25, 0x3874	; 0x803874 <JTAG2::packet+0x15>
    16b4:	a0 91 75 38 	lds	r26, 0x3875	; 0x803875 <JTAG2::packet+0x16>
    16b8:	b0 91 76 38 	lds	r27, 0x3876	; 0x803876 <JTAG2::packet+0x17>
    16bc:	80 93 5b 38 	sts	0x385B, r24	; 0x80385b <NVM::nvm_eeprom_offset>
    16c0:	90 93 5c 38 	sts	0x385C, r25	; 0x80385c <NVM::nvm_eeprom_offset+0x1>
    16c4:	a0 93 5d 38 	sts	0x385D, r26	; 0x80385d <NVM::nvm_eeprom_offset+0x2>
    16c8:	b0 93 5e 38 	sts	0x385E, r27	; 0x80385e <NVM::nvm_eeprom_offset+0x3>
    16cc:	80 91 7f 38 	lds	r24, 0x387F	; 0x80387f <JTAG2::packet+0x20>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:351
    //NVM::nvm_fuse_offset     = _CAPS32(packet.body[16])->dword;
      NVM::nvm_user_sig_offset = _CAPS32(packet.body[24])->dword;
    16d0:	90 91 80 38 	lds	r25, 0x3880	; 0x803880 <JTAG2::packet+0x21>
    16d4:	a0 91 81 38 	lds	r26, 0x3881	; 0x803881 <JTAG2::packet+0x22>
    16d8:	b0 91 82 38 	lds	r27, 0x3882	; 0x803882 <JTAG2::packet+0x23>
    16dc:	80 93 57 38 	sts	0x3857, r24	; 0x803857 <NVM::nvm_user_sig_offset>
    16e0:	90 93 58 38 	sts	0x3858, r25	; 0x803858 <NVM::nvm_user_sig_offset+0x1>
    16e4:	a0 93 59 38 	sts	0x3859, r26	; 0x803859 <NVM::nvm_user_sig_offset+0x2>
    16e8:	b0 93 5a 38 	sts	0x385A, r27	; 0x80385a <NVM::nvm_user_sig_offset+0x3>
    16ec:	80 91 91 38 	lds	r24, 0x3891	; 0x803891 <JTAG2::packet+0x32>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:353
    //NVM::nvm_data_offset     = _CAPS32(packet.body[32])->dword;
      NVM::flash_page_size     = _CAPS16(packet.body[42])->word;
    16f0:	90 91 92 38 	lds	r25, 0x3892	; 0x803892 <JTAG2::packet+0x33>
    16f4:	80 93 55 38 	sts	0x3855, r24	; 0x803855 <NVM::flash_page_size>
    16f8:	90 93 56 38 	sts	0x3856, r25	; 0x803856 <NVM::flash_page_size+0x1>
    16fc:	80 91 57 38 	lds	r24, 0x3857	; 0x803857 <NVM::nvm_user_sig_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:356
    //NVM::eeprom_page_size    = packet.body[46];
      // AVR_DA/DB/DD/EA
      if (_CAPS32(NVM::nvm_user_sig_offset)->bytes[0] == 0x80) {
    1700:	80 38       	cpi	r24, 0x80	; 128
    1702:	09 f0       	breq	.+2      	; 0x1706 <main+0x654>
    1704:	43 ce       	rjmp	.-890    	; 0x138c <main+0x2da>
    1706:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:357
        NVM::nvm_flash_offset  = 0x800000;
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	a0 e8       	ldi	r26, 0x80	; 128
    170c:	b0 e0       	ldi	r27, 0x00	; 0
    170e:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
    1712:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
    1716:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
    171a:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
    171e:	e9 9a       	sbi	0x1d, 1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:358
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
    1720:	35 ce       	rjmp	.-918    	; 0x138c <main+0x2da>

00001722 <setjmp>:
setjmp():
    1722:	dc 01       	movw	r26, r24
    1724:	2d 92       	st	X+, r2
    1726:	3d 92       	st	X+, r3
    1728:	4d 92       	st	X+, r4
    172a:	5d 92       	st	X+, r5
    172c:	6d 92       	st	X+, r6
    172e:	7d 92       	st	X+, r7
    1730:	8d 92       	st	X+, r8
    1732:	9d 92       	st	X+, r9
    1734:	ad 92       	st	X+, r10
    1736:	bd 92       	st	X+, r11
    1738:	cd 92       	st	X+, r12
    173a:	dd 92       	st	X+, r13
    173c:	ed 92       	st	X+, r14
    173e:	fd 92       	st	X+, r15
    1740:	0d 93       	st	X+, r16
    1742:	1d 93       	st	X+, r17
    1744:	cd 93       	st	X+, r28
    1746:	dd 93       	st	X+, r29
    1748:	ff 91       	pop	r31
    174a:	ef 91       	pop	r30
    174c:	8d b7       	in	r24, 0x3d	; 61
    174e:	8d 93       	st	X+, r24
    1750:	8e b7       	in	r24, 0x3e	; 62
    1752:	8d 93       	st	X+, r24
    1754:	8f b7       	in	r24, 0x3f	; 63
    1756:	8d 93       	st	X+, r24
    1758:	ed 93       	st	X+, r30
    175a:	fd 93       	st	X+, r31
    175c:	88 27       	eor	r24, r24
    175e:	99 27       	eor	r25, r25
    1760:	09 94       	ijmp

00001762 <longjmp>:
longjmp():
    1762:	dc 01       	movw	r26, r24
    1764:	cb 01       	movw	r24, r22
    1766:	81 30       	cpi	r24, 0x01	; 1
    1768:	91 05       	cpc	r25, r1
    176a:	81 1d       	adc	r24, r1
    176c:	2d 90       	ld	r2, X+
    176e:	3d 90       	ld	r3, X+
    1770:	4d 90       	ld	r4, X+
    1772:	5d 90       	ld	r5, X+
    1774:	6d 90       	ld	r6, X+
    1776:	7d 90       	ld	r7, X+
    1778:	8d 90       	ld	r8, X+
    177a:	9d 90       	ld	r9, X+
    177c:	ad 90       	ld	r10, X+
    177e:	bd 90       	ld	r11, X+
    1780:	cd 90       	ld	r12, X+
    1782:	dd 90       	ld	r13, X+
    1784:	ed 90       	ld	r14, X+
    1786:	fd 90       	ld	r15, X+
    1788:	0d 91       	ld	r16, X+
    178a:	1d 91       	ld	r17, X+
    178c:	cd 91       	ld	r28, X+
    178e:	dd 91       	ld	r29, X+
    1790:	ed 91       	ld	r30, X+
    1792:	fd 91       	ld	r31, X+
    1794:	0d 90       	ld	r0, X+
    1796:	0f be       	out	0x3f, r0	; 63
    1798:	ed bf       	out	0x3d, r30	; 61
    179a:	fe bf       	out	0x3e, r31	; 62
    179c:	ed 91       	ld	r30, X+
    179e:	fd 91       	ld	r31, X+
    17a0:	09 94       	ijmp

000017a2 <_exit>:
exit():
    17a2:	f8 94       	cli

000017a4 <__stop_program>:
__stop_program():
    17a4:	ff cf       	rjmp	.-2      	; 0x17a4 <__stop_program>

Disassembly of section .nvmem:

000017f2 <.nvmem>:
	...
