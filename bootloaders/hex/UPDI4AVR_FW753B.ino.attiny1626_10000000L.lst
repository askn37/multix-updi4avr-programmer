
/var/folders/4m/5plmh1yn7tjd65bkjnn6yc5c0000gn/T/arduino_build_751250/UPDI4AVR_FW753B.ino.elf:     file format elf32-avr


Disassembly of section .data:

00803800 <__data_start>:
__data_start():
  803800:	55 c8       	rjmp	.-3926   	; 0x8028ac <UPDI::nvmprog_key+0x7f8f88>
  803802:	00 c3       	rjmp	.+1536   	; 0x803e04 <__bss_end+0x38c>
  803804:	04 55       	subi	r16, 0x54	; 84

00803805 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat>:
  803805:	55 a0 00 55 04                                      U..U.

0080380a <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr>:
  80380a:	55 6a 00 00 00 00                                   Uj....

00803810 <UPDI::st8(unsigned long, unsigned char)::set_ptr>:
  803810:	55 48 00 00 00 00                                   UH....

00803816 <UPDI::ld8(unsigned long)::set_ptr>:
  803816:	55 08 00 00 00 00                                   U.....

0080381c <UPDI::is_cs_stat(unsigned char, unsigned char)::set_ptr>:
  80381c:	55 00                                               U.

0080381e <NVM::set_repeat_rsd>:
  80381e:	55 c2 0e 55 a0 00 55 65                             U..U..Ue

00803826 <NVM::set_repeat>:
  803826:	55 a0 00 55 64                                      U..Ud

0080382b <NVM::set_ptr>:
  80382b:	55 6a 00 00 00 00                                   Uj....

00803831 <UPDI::enter_updi(bool)::set_ptr>:
  803831:	55 e5                                               U.

00803833 <JTAG2::PARAM_BAUD_RATE_VAL>:
  803833:	04 00                                               ..

00803835 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr>:
  803835:	55 00 00                                            U..

Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	67 c0       	rjmp	.+206    	; 0xd0 <__ctors_end>
       2:	00 00       	nop
../../../../crt1/gcrt1.S:67
       4:	82 c0       	rjmp	.+260    	; 0x10a <__bad_interrupt>
       6:	00 00       	nop
../../../../crt1/gcrt1.S:68
       8:	80 c0       	rjmp	.+256    	; 0x10a <__bad_interrupt>
       a:	00 00       	nop
../../../../crt1/gcrt1.S:69
       c:	7e c0       	rjmp	.+252    	; 0x10a <__bad_interrupt>
       e:	00 00       	nop
../../../../crt1/gcrt1.S:70
      10:	7c c0       	rjmp	.+248    	; 0x10a <__bad_interrupt>
      12:	00 00       	nop
../../../../crt1/gcrt1.S:71
      14:	7a c0       	rjmp	.+244    	; 0x10a <__bad_interrupt>
      16:	00 00       	nop
../../../../crt1/gcrt1.S:72
      18:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__vector_6>
../../../../crt1/gcrt1.S:73
      1c:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <__vector_7>
../../../../crt1/gcrt1.S:74
      20:	74 c0       	rjmp	.+232    	; 0x10a <__bad_interrupt>
      22:	00 00       	nop
../../../../crt1/gcrt1.S:75
      24:	72 c0       	rjmp	.+228    	; 0x10a <__bad_interrupt>
      26:	00 00       	nop
../../../../crt1/gcrt1.S:76
      28:	70 c0       	rjmp	.+224    	; 0x10a <__bad_interrupt>
      2a:	00 00       	nop
../../../../crt1/gcrt1.S:77
      2c:	6e c0       	rjmp	.+220    	; 0x10a <__bad_interrupt>
      2e:	00 00       	nop
../../../../crt1/gcrt1.S:78
      30:	6c c0       	rjmp	.+216    	; 0x10a <__bad_interrupt>
      32:	00 00       	nop
../../../../crt1/gcrt1.S:79
      34:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__vector_13>
../../../../crt1/gcrt1.S:80
      38:	68 c0       	rjmp	.+208    	; 0x10a <__bad_interrupt>
      3a:	00 00       	nop
../../../../crt1/gcrt1.S:81
      3c:	66 c0       	rjmp	.+204    	; 0x10a <__bad_interrupt>
      3e:	00 00       	nop
../../../../crt1/gcrt1.S:82
      40:	64 c0       	rjmp	.+200    	; 0x10a <__bad_interrupt>
      42:	00 00       	nop
../../../../crt1/gcrt1.S:83
      44:	62 c0       	rjmp	.+196    	; 0x10a <__bad_interrupt>
      46:	00 00       	nop
../../../../crt1/gcrt1.S:84
      48:	60 c0       	rjmp	.+192    	; 0x10a <__bad_interrupt>
      4a:	00 00       	nop
../../../../crt1/gcrt1.S:85
      4c:	5e c0       	rjmp	.+188    	; 0x10a <__bad_interrupt>
      4e:	00 00       	nop
../../../../crt1/gcrt1.S:86
      50:	5c c0       	rjmp	.+184    	; 0x10a <__bad_interrupt>
      52:	00 00       	nop
../../../../crt1/gcrt1.S:87
      54:	5a c0       	rjmp	.+180    	; 0x10a <__bad_interrupt>
      56:	00 00       	nop
../../../../crt1/gcrt1.S:88
      58:	58 c0       	rjmp	.+176    	; 0x10a <__bad_interrupt>
      5a:	00 00       	nop
../../../../crt1/gcrt1.S:89
      5c:	56 c0       	rjmp	.+172    	; 0x10a <__bad_interrupt>
      5e:	00 00       	nop
../../../../crt1/gcrt1.S:90
      60:	54 c0       	rjmp	.+168    	; 0x10a <__bad_interrupt>
      62:	00 00       	nop
../../../../crt1/gcrt1.S:91
      64:	52 c0       	rjmp	.+164    	; 0x10a <__bad_interrupt>
      66:	00 00       	nop
../../../../crt1/gcrt1.S:92
      68:	50 c0       	rjmp	.+160    	; 0x10a <__bad_interrupt>
      6a:	00 00       	nop
../../../../crt1/gcrt1.S:93
      6c:	4e c0       	rjmp	.+156    	; 0x10a <__bad_interrupt>
      6e:	00 00       	nop
../../../../crt1/gcrt1.S:94
      70:	4c c0       	rjmp	.+152    	; 0x10a <__bad_interrupt>
      72:	00 00       	nop
../../../../crt1/gcrt1.S:95
      74:	4a c0       	rjmp	.+148    	; 0x10a <__bad_interrupt>
	...

00000078 <__trampolines_end>:
__trampolines_start():
      78:	86 01       	movw	r16, r12
      7a:	01 01       	movw	r0, r2
      7c:	02 01       	movw	r0, r4
      7e:	01 35       	cpi	r16, 0x51	; 81
      80:	07 01       	movw	r0, r14
      82:	00 00       	nop
      84:	00 00       	nop
      86:	00 00       	nop
      88:	4a 54       	subi	r20, 0x4A	; 74
      8a:	41 47       	sbci	r20, 0x71	; 113
      8c:	49 43       	sbci	r20, 0x39	; 57
      8e:	45 20       	and	r4, r5
      90:	6d 6b       	ori	r22, 0xBD	; 189
      92:	49 49       	sbci	r20, 0x99	; 153
	...

00000095 <JTAG2::BAUD_TABLE>:
      95:	00 00 1b 41 8d 20 47 10 23 08 12 04 b6 02 5b 01     ...A. G.#.....[.
      a5:	da 0a 04 01 ae 00 57 00 2b 00 39 01 9c 00 00 00     ......W.+.9.....
      b5:	00 00 0b 01 c8 00 a0 00 85 00 64 00 50 00 43 00     ..........d.P.C.
      c5:	3c 00 28 00 1b 00 14 00 0d 00 00                    <.(........

000000d0 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
      d0:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
      d2:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
      d4:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
      d6:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
      d8:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
      da:	de bf       	out	0x3e, r29	; 62

000000dc <__do_copy_data>:
__do_copy_data():
      dc:	18 e3       	ldi	r17, 0x38	; 56
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b8 e3       	ldi	r27, 0x38	; 56
      e2:	ee e2       	ldi	r30, 0x2E	; 46
      e4:	f9 e1       	ldi	r31, 0x19	; 25
      e6:	02 c0       	rjmp	.+4      	; 0xec <__do_copy_data+0x10>
      e8:	05 90       	lpm	r0, Z+
      ea:	0d 92       	st	X+, r0
      ec:	a8 33       	cpi	r26, 0x38	; 56
      ee:	b1 07       	cpc	r27, r17
      f0:	d9 f7       	brne	.-10     	; 0xe8 <__do_copy_data+0xc>

000000f2 <__do_clear_bss>:
__do_clear_bss():
      f2:	2a e3       	ldi	r18, 0x3A	; 58
      f4:	a8 e3       	ldi	r26, 0x38	; 56
      f6:	b8 e3       	ldi	r27, 0x38	; 56
      f8:	01 c0       	rjmp	.+2      	; 0xfc <.do_clear_bss_start>

000000fa <.do_clear_bss_loop>:
      fa:	1d 92       	st	X+, r1

000000fc <.do_clear_bss_start>:
      fc:	a8 37       	cpi	r26, 0x78	; 120
      fe:	b2 07       	cpc	r27, r18
     100:	e1 f7       	brne	.-8      	; 0xfa <.do_clear_bss_loop>
.do_clear_bss_start():
../../../../crt1/gcrt1.S:314
     102:	0e 94 ed 08 	call	0x11da	; 0x11da <main>
../../../../crt1/gcrt1.S:315
     106:	0c 94 86 0c 	jmp	0x190c	; 0x190c <_exit>

0000010a <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:209
     10a:	7a cf       	rjmp	.-268    	; 0x0 <__vectors>

0000010c <UPDI::RECV()>:
_ZN4UPDI4RECVEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:43
/*
 * UPDI受信
 */

uint8_t UPDI::RECV (void) {
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_RXCIF_bp);
     10c:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6ee0>
     110:	87 ff       	sbrs	r24, 7
     112:	fc cf       	rjmp	.-8      	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:44
  UPDI_LASTH = UPDI_USART.RXDATAH ^ 0x80;
     114:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <UPDI::nvmprog_key+0x7f6edd>
     118:	80 58       	subi	r24, 0x80	; 128
     11a:	8f bb       	out	0x1f, r24	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:45
  return UPDI_LASTL = UPDI_USART.RXDATAL;
     11c:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <UPDI::nvmprog_key+0x7f6edc>
     120:	8e bb       	out	0x1e, r24	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:46
}
     122:	08 95       	ret

00000124 <UPDI::SEND(unsigned char)>:
_ZN4UPDI4SENDEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:54
 * UPDI送信
 *
 * ループバック受信で送信値を照合
 */

bool UPDI::SEND (uint8_t _data) {
     124:	cf 93       	push	r28
     126:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:56
  bool _r;
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_DREIF_bp);
     128:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6ee0>
     12c:	85 ff       	sbrs	r24, 5
     12e:	fc cf       	rjmp	.-8      	; 0x128 <UPDI::SEND(unsigned char)+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:57
  UPDI_USART.STATUS = USART_TXCIF_bm;
     130:	80 e4       	ldi	r24, 0x40	; 64
     132:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <UPDI::nvmprog_key+0x7f6ee0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:58
  UPDI_USART.TXDATAL = _data;
     136:	c0 93 02 08 	sts	0x0802, r28	; 0x800802 <UPDI::nvmprog_key+0x7f6ede>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:59
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_TXCIF_bp);
     13a:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6ee0>
     13e:	86 ff       	sbrs	r24, 6
     140:	fc cf       	rjmp	.-8      	; 0x13a <UPDI::SEND(unsigned char)+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:60
  _r = _data == UPDI::RECV();
     142:	e4 df       	rcall	.-56     	; 0x10c <UPDI::RECV()>
     144:	98 2f       	mov	r25, r24
     146:	81 e0       	ldi	r24, 0x01	; 1
     148:	9c 13       	cpse	r25, r28
     14a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:61
  if (!_r) UPDI_LASTH |= 0x20;
     14c:	9c 13       	cpse	r25, r28
     14e:	fd 9a       	sbi	0x1f, 5	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:63
  return _r;
}
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <UPDI::send_bytes(unsigned char const*, unsigned int)>:
_ZN4UPDI10send_bytesEPKhj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:110

/*
 * バイト塊送信
 */

bool UPDI::send_bytes (const uint8_t *data, size_t len) {
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	eb 01       	movw	r28, r22
     15e:	8c 01       	movw	r16, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:113
  uint8_t *p = (uint8_t*)(void*)data;
  do {
    if (!UPDI::SEND(*p++)) break;
     160:	f8 01       	movw	r30, r16
     162:	81 91       	ld	r24, Z+
     164:	8f 01       	movw	r16, r30
     166:	de df       	rcall	.-68     	; 0x124 <UPDI::SEND(unsigned char)>
     168:	88 23       	and	r24, r24
     16a:	11 f0       	breq	.+4      	; 0x170 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x1c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:114
  } while (--len);
     16c:	21 97       	sbiw	r28, 0x01	; 1
     16e:	c1 f7       	brne	.-16     	; 0x160 <UPDI::send_bytes(unsigned char const*, unsigned int)+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:115
  return len == 0;
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	cd 2b       	or	r28, r29
     174:	09 f0       	breq	.+2      	; 0x178 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x24>
     176:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:116
}
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	1f 91       	pop	r17
     17e:	0f 91       	pop	r16
     180:	08 95       	ret

00000182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>:
_ZN4UPDI11set_cs_ctraEh.constprop.1():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     182:	e5 e3       	ldi	r30, 0x35	; 53
     184:	f8 e3       	ldi	r31, 0x38	; 56
     186:	82 ec       	ldi	r24, 0xC2	; 194
     188:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     18a:	86 e0       	ldi	r24, 0x06	; 6
     18c:	82 83       	std	Z+2, r24	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     18e:	63 e0       	ldi	r22, 0x03	; 3
     190:	70 e0       	ldi	r23, 0x00	; 0
     192:	cf 01       	movw	r24, r30
     194:	df cf       	rjmp	.-66     	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00000196 <UPDI::enter_updi(bool) [clone .part.4]>:
_ZN4UPDI10enter_updiEb.part.4():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:328

/*
 * UPDI制御開始
 */

bool UPDI::enter_updi (bool skip) {
     196:	0f 93       	push	r16
     198:	1f 93       	push	r17
     19a:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:351
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
     19c:	62 e0       	ldi	r22, 0x02	; 2
     19e:	70 e0       	ldi	r23, 0x00	; 0
     1a0:	81 e3       	ldi	r24, 0x31	; 49
     1a2:	98 e3       	ldi	r25, 0x38	; 56
     1a4:	d7 df       	rcall	.-82     	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     1a6:	c8 2f       	mov	r28, r24
     1a8:	88 23       	and	r24, r24
     1aa:	61 f1       	breq	.+88     	; 0x204 <UPDI::enter_updi(bool) [clone .part.4]+0x6e>
     1ac:	0e e6       	ldi	r16, 0x6E	; 110
     1ae:	18 e3       	ldi	r17, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:352
    while (_len--) *_p++ = UPDI::RECV();
     1b0:	88 e3       	ldi	r24, 0x38	; 56
     1b2:	0e 37       	cpi	r16, 0x7E	; 126
     1b4:	18 07       	cpc	r17, r24
     1b6:	29 f0       	breq	.+10     	; 0x1c2 <UPDI::enter_updi(bool) [clone .part.4]+0x2c>
     1b8:	a9 df       	rcall	.-174    	; 0x10c <UPDI::RECV()>
     1ba:	f8 01       	movw	r30, r16
     1bc:	81 93       	st	Z+, r24
     1be:	8f 01       	movw	r16, r30
     1c0:	f7 cf       	rjmp	.-18     	; 0x1b0 <UPDI::enter_updi(bool) [clone .part.4]+0x1a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:353
    switch (JTAG2::packet.body[3]) {
     1c2:	80 91 6e 38 	lds	r24, 0x386E	; 0x80386e <JTAG2::packet+0xb>
     1c6:	8d 36       	cpi	r24, 0x6D	; 109
     1c8:	79 f0       	breq	.+30     	; 0x1e8 <UPDI::enter_updi(bool) [clone .part.4]+0x52>
     1ca:	84 37       	cpi	r24, 0x74	; 116
     1cc:	01 f1       	breq	.+64     	; 0x20e <UPDI::enter_updi(bool) [clone .part.4]+0x78>
     1ce:	81 34       	cpi	r24, 0x41	; 65
     1d0:	19 f5       	brne	.+70     	; 0x218 <UPDI::enter_updi(bool) [clone .part.4]+0x82>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:368
        break;
      }
      case 'A' : {              // 'AVR_Dx' series
        /* AVR Dx SIB = 'AVR     P:2D:1-3' */
        /* AVR Ex SIB = 'AVR     P:3D:1-3' */
        if (JTAG2::packet.body[13] == '3') {
     1d2:	80 91 78 38 	lds	r24, 0x3878	; 0x803878 <JTAG2::packet+0x15>
     1d6:	83 33       	cpi	r24, 0x33	; 51
     1d8:	09 f4       	brne	.+2      	; 0x1dc <UPDI::enter_updi(bool) [clone .part.4]+0x46>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:370
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
     1da:	ea 9a       	sbi	0x1d, 2	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:372
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
     1dc:	e9 9a       	sbi	0x1d, 1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:373
        NVM::nvm_flash_offset = 0x800000;
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	a0 e8       	ldi	r26, 0x80	; 128
     1e4:	b0 e0       	ldi	r27, 0x00	; 0
     1e6:	05 c0       	rjmp	.+10     	; 0x1f2 <UPDI::enter_updi(bool) [clone .part.4]+0x5c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:356
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
    while (_len--) *_p++ = UPDI::RECV();
    switch (JTAG2::packet.body[3]) {
      case 'm' : {              // 'megaAVR' series
        /* megaAVR SIB = 'megaAVR P:0D:1-3' */
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_LOWF_bp);
     1e8:	e8 9a       	sbi	0x1d, 0	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:357
        NVM::nvm_flash_offset = 0x4000;
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e4       	ldi	r25, 0x40	; 64
     1ee:	a0 e0       	ldi	r26, 0x00	; 0
     1f0:	b0 e0       	ldi	r27, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:373
        if (JTAG2::packet.body[13] == '3') {
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
     1f2:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
     1f6:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
     1fa:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
     1fe:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:378
        break;
      }
      default : return false;
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     202:	e0 9a       	sbi	0x1c, 0	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:381
  }
  return true;
}
     204:	8c 2f       	mov	r24, r28
     206:	cf 91       	pop	r28
     208:	1f 91       	pop	r17
     20a:	0f 91       	pop	r16
     20c:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:362
        NVM::nvm_flash_offset = 0x4000;
        break;
      }
      case 't' : {              // 'tinyAVR' series
        /* tinyAVR SIB = 'tinyAVR P:0D:1-3' */
        NVM::nvm_flash_offset = 0x8000;
     20e:	80 e0       	ldi	r24, 0x00	; 0
     210:	90 e8       	ldi	r25, 0x80	; 128
     212:	a0 e0       	ldi	r26, 0x00	; 0
     214:	b0 e0       	ldi	r27, 0x00	; 0
     216:	ed cf       	rjmp	.-38     	; 0x1f2 <UPDI::enter_updi(bool) [clone .part.4]+0x5c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:376
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
        break;
      }
      default : return false;
     218:	c0 e0       	ldi	r28, 0x00	; 0
     21a:	f4 cf       	rjmp	.-24     	; 0x204 <UPDI::enter_updi(bool) [clone .part.4]+0x6e>

0000021c <UPDI::updi_reset(bool)>:
_ZN4UPDI10updi_resetEb():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:223
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
}
inline bool UPDI::updi_reset (bool logic) {
  return UPDI::set_cs_stat(
     21c:	81 11       	cpse	r24, r1
     21e:	89 e5       	ldi	r24, 0x59	; 89
set_cs_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     220:	98 ec       	ldi	r25, 0xC8	; 200
     222:	90 93 36 38 	sts	0x3836, r25	; 0x803836 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     226:	80 93 37 38 	sts	0x3837, r24	; 0x803837 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     22a:	63 e0       	ldi	r22, 0x03	; 3
     22c:	70 e0       	ldi	r23, 0x00	; 0
     22e:	85 e3       	ldi	r24, 0x35	; 53
     230:	98 e3       	ldi	r25, 0x38	; 56
     232:	90 cf       	rjmp	.-224    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00000234 <UPDI::st8(unsigned long, unsigned char)>:
_ZN4UPDI3st8Emh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:147

/*
 * 単バイト送信
 */

bool UPDI::st8 (uint32_t addr, uint8_t data) {
     234:	cf 93       	push	r28
     236:	c4 2f       	mov	r28, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:153
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
     238:	60 93 12 38 	sts	0x3812, r22	; 0x803812 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x2>
     23c:	70 93 13 38 	sts	0x3813, r23	; 0x803813 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x3>
     240:	80 93 14 38 	sts	0x3814, r24	; 0x803814 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x4>
     244:	90 93 15 38 	sts	0x3815, r25	; 0x803815 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:154
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     248:	65 e0       	ldi	r22, 0x05	; 5
     24a:	70 e0       	ldi	r23, 0x00	; 0
     24c:	80 e1       	ldi	r24, 0x10	; 16
     24e:	98 e3       	ldi	r25, 0x38	; 56
     250:	81 df       	rcall	.-254    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     252:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:157
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  if (!UPDI::SEND(data)) return false;
  return UPDI::UPDI_ACK == UPDI::RECV();
     254:	02 c0       	rjmp	.+4      	; 0x25a <UPDI::st8(unsigned long, unsigned char)+0x26>
     256:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:155
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     258:	0b c0       	rjmp	.+22     	; 0x270 <UPDI::st8(unsigned long, unsigned char)+0x3c>
     25a:	58 df       	rcall	.-336    	; 0x10c <UPDI::RECV()>
     25c:	80 34       	cpi	r24, 0x40	; 64
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:156
  if (!UPDI::SEND(data)) return false;
     25e:	d9 f7       	brne	.-10     	; 0x256 <UPDI::st8(unsigned long, unsigned char)+0x22>
     260:	8c 2f       	mov	r24, r28
     262:	60 df       	rcall	.-320    	; 0x124 <UPDI::SEND(unsigned char)>
     264:	88 23       	and	r24, r24
     266:	b9 f3       	breq	.-18     	; 0x256 <UPDI::st8(unsigned long, unsigned char)+0x22>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:157
  return UPDI::UPDI_ACK == UPDI::RECV();
     268:	51 df       	rcall	.-350    	; 0x10c <UPDI::RECV()>
     26a:	91 e0       	ldi	r25, 0x01	; 1
     26c:	80 34       	cpi	r24, 0x40	; 64
     26e:	99 f7       	brne	.-26     	; 0x256 <UPDI::st8(unsigned long, unsigned char)+0x22>
     270:	89 2f       	mov	r24, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:158
}
     272:	cf 91       	pop	r28
     274:	08 95       	ret

00000276 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>:
_ZN4UPDI18send_repeat_headerEhmj():
     276:	40 93 0c 38 	sts	0x380C, r20	; 0x80380c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:135
    , UPDI::UPDI_REPEAT | UPDI::UPDI_DATA1
    , 0                   // repeat count
    , UPDI::UPDI_SYNCH
    , UPDI::UPDI_PTR_INC  // +cmd
  };
  _CAPS32(set_ptr[2])->dword = addr;
     27a:	50 93 0d 38 	sts	0x380D, r21	; 0x80380d <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x3>
     27e:	60 93 0e 38 	sts	0x380E, r22	; 0x80380e <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x4>
     282:	70 93 0f 38 	sts	0x380F, r23	; 0x80380f <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x5>
     286:	21 50       	subi	r18, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:136
  set_repeat[2] = len - 1;
     288:	20 93 07 38 	sts	0x3807, r18	; 0x803807 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:137
  set_repeat[4] = UPDI::UPDI_PTR_INC | cmd;
     28c:	84 60       	ori	r24, 0x04	; 4
     28e:	80 93 09 38 	sts	0x3809, r24	; 0x803809 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:138
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     292:	65 e0       	ldi	r22, 0x05	; 5
     294:	70 e0       	ldi	r23, 0x00	; 0
     296:	8a e0       	ldi	r24, 0x0A	; 10
     298:	98 e3       	ldi	r25, 0x38	; 56
     29a:	5c df       	rcall	.-328    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     29c:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:139
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     29e:	41 f0       	breq	.+16     	; 0x2b0 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
     2a0:	35 df       	rcall	.-406    	; 0x10c <UPDI::RECV()>
     2a2:	80 34       	cpi	r24, 0x40	; 64
     2a4:	29 f4       	brne	.+10     	; 0x2b0 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:140
  return UPDI::send_bytes(set_repeat, sizeof(set_repeat));
     2a6:	65 e0       	ldi	r22, 0x05	; 5
     2a8:	70 e0       	ldi	r23, 0x00	; 0
     2aa:	85 e0       	ldi	r24, 0x05	; 5
     2ac:	98 e3       	ldi	r25, 0x38	; 56
     2ae:	52 cf       	rjmp	.-348    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:141
}
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	08 95       	ret

000002b4 <UPDI::BREAK()>:
_ZN4UPDI5BREAKEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:81
 * BREAKキャラクタ
 *
 * 送信速度を遅くすることで生成する
 */

void UPDI::BREAK (void) {
     2b4:	cf 93       	push	r28
     2b6:	df 93       	push	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:82
  UPDI_USART.BAUD = UPDI_BAUD_BREAK;
     2b8:	c0 e0       	ldi	r28, 0x00	; 0
     2ba:	d8 e0       	ldi	r29, 0x08	; 8
     2bc:	80 ec       	ldi	r24, 0xC0	; 192
     2be:	94 e4       	ldi	r25, 0x44	; 68
     2c0:	88 87       	std	Y+8, r24	; 0x08
     2c2:	99 87       	std	Y+9, r25	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:83
  UPDI::SEND(UPDI::UPDI_NOP);
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	2e df       	rcall	.-420    	; 0x124 <UPDI::SEND(unsigned char)>
     2c8:	80 eb       	ldi	r24, 0xB0	; 176
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:84
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	88 87       	std	Y+8, r24	; 0x08
     2ce:	99 87       	std	Y+9, r25	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:85
}
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:193

/*
 * コントロールステータス受信
 */

bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
     2d4:	08 95       	ret

000002d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>:
_ZN4UPDI10is_cs_statEhh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:195
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0 };
  set_ptr[1] = UPDI::UPDI_LDCS | code;
     2d6:	cf 93       	push	r28
     2d8:	c6 2f       	mov	r28, r22
     2da:	80 68       	ori	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:196
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
     2dc:	80 93 1d 38 	sts	0x381D, r24	; 0x80381d <UPDI::is_cs_stat(unsigned char, unsigned char)::set_ptr+0x1>
     2e0:	62 e0       	ldi	r22, 0x02	; 2
     2e2:	70 e0       	ldi	r23, 0x00	; 0
     2e4:	8c e1       	ldi	r24, 0x1C	; 28
     2e6:	98 e3       	ldi	r25, 0x38	; 56
     2e8:	35 df       	rcall	.-406    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     2ea:	81 11       	cpse	r24, r1
     2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <UPDI::is_cs_stat(unsigned char, unsigned char)+0x1c>
     2ee:	e2 df       	rcall	.-60     	; 0x2b4 <UPDI::BREAK()>
     2f0:	f7 cf       	rjmp	.-18     	; 0x2e0 <UPDI::is_cs_stat(unsigned char, unsigned char)+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:197
  return check == (UPDI::RECV() & check);
     2f2:	0c df       	rcall	.-488    	; 0x10c <UPDI::RECV()>
     2f4:	98 2f       	mov	r25, r24
     2f6:	9c 23       	and	r25, r28
     2f8:	81 e0       	ldi	r24, 0x01	; 1
     2fa:	9c 13       	cpse	r25, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:198
}
     2fc:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:184
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_LDS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS16(set_ptr[2])->word = (uint16_t)addr;
     2fe:	cf 91       	pop	r28
     300:	08 95       	ret

00000302 <UPDI::ld8(unsigned long)>:
_ZN4UPDI3ld8Em():
     302:	60 93 18 38 	sts	0x3818, r22	; 0x803818 <UPDI::ld8(unsigned long)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:185
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) UPDI::BREAK();
     306:	70 93 19 38 	sts	0x3819, r23	; 0x803819 <UPDI::ld8(unsigned long)::set_ptr+0x3>
     30a:	65 e0       	ldi	r22, 0x05	; 5
     30c:	70 e0       	ldi	r23, 0x00	; 0
     30e:	86 e1       	ldi	r24, 0x16	; 22
     310:	98 e3       	ldi	r25, 0x38	; 56
     312:	20 df       	rcall	.-448    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     314:	81 11       	cpse	r24, r1
     316:	02 c0       	rjmp	.+4      	; 0x31c <UPDI::ld8(unsigned long)+0x1a>
     318:	cd df       	rcall	.-102    	; 0x2b4 <UPDI::BREAK()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:186
  return UPDI::RECV();
     31a:	f7 cf       	rjmp	.-18     	; 0x30a <UPDI::ld8(unsigned long)+0x8>
     31c:	f7 ce       	rjmp	.-530    	; 0x10c <UPDI::RECV()>

0000031e <UPDI::Target_Reset(bool)>:
_ZN4UPDI12Target_ResetEb():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:93
 * 対象リセット
 *
 * BREAKを前置するタイプ
 */

bool UPDI::Target_Reset (bool _enable) {
     31e:	cf 93       	push	r28
     320:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:101
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_ASI_RESET_REQ
    , 0
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
     322:	c8 df       	rcall	.-112    	; 0x2b4 <UPDI::BREAK()>
     324:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:102
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
     326:	c1 11       	cpse	r28, r1
     328:	89 e5       	ldi	r24, 0x59	; 89
     32a:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     32e:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:103
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     330:	70 e0       	ldi	r23, 0x00	; 0
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	98 e3       	ldi	r25, 0x38	; 56
     336:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:104
}
     338:	0d cf       	rjmp	.-486    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

0000033a <TIM::LED_Blink()>:
_ZN3TIM9LED_BlinkEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:103
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     33a:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     33e:	83 30       	cpi	r24, 0x03	; 3
     340:	99 f0       	breq	.+38     	; 0x368 <TIM::LED_Blink()+0x2e>
     342:	83 e0       	ldi	r24, 0x03	; 3
     344:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
     348:	89 ea       	ldi	r24, 0xA9	; 169
     34a:	95 e5       	ldi	r25, 0x55	; 85
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
     34c:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f7178>
     350:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f7179>
     354:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7176>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
     358:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7177>
     35c:	8f e4       	ldi	r24, 0x4F	; 79
     35e:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f716c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     362:	81 e0       	ldi	r24, 0x01	; 1
     364:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6885>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     368:	08 95       	ret

0000036a <TIM::LED_Flash()>:
_ZN3TIM9LED_FlashEv():
     36a:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     36e:	82 30       	cpi	r24, 0x02	; 2
     370:	99 f0       	breq	.+38     	; 0x398 <TIM::LED_Flash()+0x2e>
     372:	82 e0       	ldi	r24, 0x02	; 2
     374:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
     378:	89 ea       	ldi	r24, 0xA9	; 169
     37a:	98 e0       	ldi	r25, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
     37c:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f7178>
     380:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f7179>
     384:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7176>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
     388:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7177>
     38c:	8f e4       	ldi	r24, 0x4F	; 79
     38e:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f716c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     392:	81 e0       	ldi	r24, 0x01	; 1
     394:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6885>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     398:	08 95       	ret

0000039a <TIM::Timeout_Stop()>:
_ZN3TIM12Timeout_StopEv():
     39a:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:172
}

/* フラッシュ（RTSアサート/UPDI許認可後）*/
void TIM::LED_Flash (void) {
  LED_TCB1(2, TCB1_FLASH);
}
     39c:	f8 94       	cli
_ZN3TIM12Timeout_StopEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:137
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
  }
}

void TIM::Timeout_Stop (void) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     39e:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f715c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:138
    TCB0_CTRLA = 0;
     3a2:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:139
    TCB0_INTFLAGS = TCB_CAPT_bm;
     3a4:	90 93 86 0a 	sts	0x0A86, r25	; 0x800a86 <UPDI::nvmprog_key+0x7f7162>
__iRestore():
     3a8:	8f bf       	out	0x3f, r24	; 63
_ZN3TIM12Timeout_StopEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     3aa:	18 95       	reti
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:141
  }
  reti();
     3ac:	08 95       	ret

000003ae <SYS::WDT_SET(unsigned char)>:
_ZN3SYS7WDT_SETEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:133
/*
 * WDT操作
 */

void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
     3ae:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <UPDI::nvmprog_key+0x7f67dd>
     3b2:	90 fd       	sbrc	r25, 0
     3b4:	fc cf       	rjmp	.-8      	; 0x3ae <SYS::WDT_SET(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:134
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
     3b6:	98 ed       	ldi	r25, 0xD8	; 216
     3b8:	94 bf       	out	0x34, r25	; 52
     3ba:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <UPDI::nvmprog_key+0x7f67dc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:317
 * NVMCTRL制御
 */

/* NVMCTRL v0 */
bool NVM::nvm_ctrl (uint8_t nvmcmd) {
  return UPDI::st8(NVM::NVMCTRL_REG_CTRLA, nvmcmd);
     3be:	08 95       	ret

000003c0 <NVM::nvm_ctrl(unsigned char)>:
_ZN3NVM8nvm_ctrlEh():
     3c0:	48 2f       	mov	r20, r24
     3c2:	60 e0       	ldi	r22, 0x00	; 0
     3c4:	70 e1       	ldi	r23, 0x10	; 16
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:320
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
     3ca:	34 cf       	rjmp	.-408    	; 0x234 <UPDI::st8(unsigned long, unsigned char)>

000003cc <nvm_ctrl_change(unsigned char)>:
_Z15nvm_ctrl_changeh():
     3cc:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:321
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
     3ce:	c8 2f       	mov	r28, r24
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	70 e1       	ldi	r23, 0x10	; 16
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	94 df       	rcall	.-216    	; 0x302 <UPDI::ld8(unsigned long)>
     3da:	8c 13       	cpse	r24, r28
     3dc:	03 c0       	rjmp	.+6      	; 0x3e4 <nvm_ctrl_change(unsigned char)+0x18>
     3de:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:325
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}
     3e0:	cf 91       	pop	r28
     3e2:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:322
  return UPDI::st8(NVM::NVMCTRL_REG_CTRLA, nvmcmd);
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	ec df       	rcall	.-40     	; 0x3c0 <NVM::nvm_ctrl(unsigned char)>
     3e8:	88 23       	and	r24, r24
     3ea:	d1 f3       	breq	.-12     	; 0x3e0 <nvm_ctrl_change(unsigned char)+0x14>
     3ec:	cc 23       	and	r28, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:323
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     3ee:	b9 f3       	breq	.-18     	; 0x3de <nvm_ctrl_change(unsigned char)+0x12>
     3f0:	8c 2f       	mov	r24, r28
     3f2:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:325
  return true;
}
     3f4:	e5 cf       	rjmp	.-54     	; 0x3c0 <NVM::nvm_ctrl(unsigned char)>

000003f6 <JTAG2::set_response(JTAG2::jtag_response_e)>:
_ZN5JTAG212set_responseENS_15jtag_response_eE():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:323
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     3f6:	44 e0       	ldi	r20, 0x04	; 4
     3f8:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:162
  }
}

/* JTAG Response */
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
     3fa:	60 e0       	ldi	r22, 0x00	; 0
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	40 93 66 38 	sts	0x3866, r20	; 0x803866 <JTAG2::packet+0x3>
     402:	50 93 67 38 	sts	0x3867, r21	; 0x803867 <JTAG2::packet+0x4>
     406:	60 93 68 38 	sts	0x3868, r22	; 0x803868 <JTAG2::packet+0x5>
     40a:	70 93 69 38 	sts	0x3869, r23	; 0x803869 <JTAG2::packet+0x6>
     40e:	80 93 6b 38 	sts	0x386B, r24	; 0x80386b <JTAG2::packet+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:164
  /* 応答番号 */
  packet.body[0] = response_code;
     412:	e1 99       	sbic	0x1c, 1	; 28
     414:	0b c0       	rjmp	.+22     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     416:	8c b3       	in	r24, 0x1c	; 28
     418:	81 70       	andi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:167
                 : bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp) ? 1 : 0;
     41a:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
  /* 応答番号 */
  packet.body[0] = response_code;
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     41e:	8c b3       	in	r24, 0x1c	; 28
     420:	80 93 6d 38 	sts	0x386D, r24	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:169
                 : bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp) ? 1 : 0;
  /* 内部状態フラグ */
  packet.body[2] = UPDI_CONTROL;
     424:	8d b3       	in	r24, 0x1d	; 29
     426:	80 93 6e 38 	sts	0x386E, r24	; 0x80386e <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:170
  packet.body[3] = UPDI_NVMCTRL;
     42a:	08 95       	ret
     42c:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:171
}
     42e:	f5 cf       	rjmp	.-22     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>

00000430 <_crc_ccitt_update(unsigned int, unsigned char)>:
_ZL17_crc_ccitt_updatejh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
  /* 応答番号 */
  packet.body[0] = response_code;
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     430:	86 27       	eor	r24, r22
     432:	08 2e       	mov	r0, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:285
        "eor    %A0,__tmp_reg__"

        : "=d" (__ret)
        : "r" (__data), "0" (__crc)
        : "r0"
    );
     434:	82 95       	swap	r24
     436:	80 7f       	andi	r24, 0xF0	; 240
     438:	80 25       	eor	r24, r0
     43a:	09 2e       	mov	r0, r25
     43c:	98 2f       	mov	r25, r24
     43e:	82 95       	swap	r24
     440:	8f 70       	andi	r24, 0x0F	; 15
     442:	08 26       	eor	r0, r24
     444:	86 95       	lsr	r24
     446:	98 27       	eor	r25, r24
     448:	89 27       	eor	r24, r25
     44a:	88 0f       	add	r24, r24
     44c:	88 0f       	add	r24, r24
     44e:	88 0f       	add	r24, r24
     450:	80 25       	eor	r24, r0
     452:	08 95       	ret

00000454 <JTAG2::answer_transfer()>:
_ZN5JTAG215answer_transferEv():
     454:	af 92       	push	r10
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:287
    return __ret;
}
     456:	bf 92       	push	r11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:147
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
  return _crc == 0;
}

/* JTAG Answer */
void JTAG2::answer_transfer (void) {
     458:	cf 92       	push	r12
     45a:	df 92       	push	r13
     45c:	ef 92       	push	r14
     45e:	ff 92       	push	r15
     460:	0f 93       	push	r16
     462:	1f 93       	push	r17
     464:	cf 93       	push	r28
     466:	df 93       	push	r29
     468:	00 d0       	rcall	.+0      	; 0x46a <JTAG2::answer_transfer()+0x16>
     46a:	cd b7       	in	r28, 0x3d	; 61
     46c:	de b7       	in	r29, 0x3e	; 62
     46e:	8f ef       	ldi	r24, 0xFF	; 255
     470:	9f ef       	ldi	r25, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:148
  uint16_t _crc = ~0;
     472:	89 83       	std	Y+1, r24	; 0x01
     474:	9a 83       	std	Y+2, r25	; 0x02
     476:	e0 90 66 38 	lds	r14, 0x3866	; 0x803866 <JTAG2::packet+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:149
  int16_t _len = packet.size_word[0] + 8;
     47a:	f0 90 67 38 	lds	r15, 0x3867	; 0x803867 <JTAG2::packet+0x4>
     47e:	87 01       	movw	r16, r14
     480:	08 5f       	subi	r16, 0xF8	; 248
     482:	1f 4f       	sbci	r17, 0xFF	; 255
     484:	83 e6       	ldi	r24, 0x63	; 99
     486:	c8 2e       	mov	r12, r24
     488:	88 e3       	ldi	r24, 0x38	; 56
     48a:	d8 2e       	mov	r13, r24
     48c:	56 01       	movw	r10, r12
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	e8 1a       	sub	r14, r24
     492:	f1 08       	sbc	r15, r1
     494:	a7 ef       	ldi	r26, 0xF7	; 247
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     496:	ea 16       	cp	r14, r26
     498:	af ef       	ldi	r26, 0xFF	; 255
     49a:	fa 06       	cpc	r15, r26
     49c:	49 f0       	breq	.+18     	; 0x4b0 <JTAG2::answer_transfer()+0x5c>
     49e:	f5 01       	movw	r30, r10
     4a0:	61 91       	ld	r22, Z+
     4a2:	5f 01       	movw	r10, r30
crc16_update():
     4a4:	89 81       	ldd	r24, Y+1	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
     4a6:	9a 81       	ldd	r25, Y+2	; 0x02
     4a8:	c3 df       	rcall	.-122    	; 0x430 <_crc_ccitt_update(unsigned int, unsigned char)>
_ZN5JTAG215answer_transferEv():
     4aa:	89 83       	std	Y+1, r24	; 0x01
     4ac:	9a 83       	std	Y+2, r25	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
void JTAG2::answer_transfer (void) {
  uint16_t _crc = ~0;
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     4ae:	ef cf       	rjmp	.-34     	; 0x48e <JTAG2::answer_transfer()+0x3a>
     4b0:	f8 01       	movw	r30, r16
     4b2:	ed 59       	subi	r30, 0x9D	; 157
     4b4:	f7 4c       	sbci	r31, 0xC7	; 199
     4b6:	89 81       	ldd	r24, Y+1	; 0x01
     4b8:	80 83       	st	Z, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:153
  (*_q++) = _CAPS16(_crc)->bytes[0];
     4ba:	8a 81       	ldd	r24, Y+2	; 0x02
     4bc:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  (*_q++) = _CAPS16(_crc)->bytes[1];
     4be:	2f b7       	in	r18, 0x3f	; 63
__iCliRetVal():
     4c0:	f8 94       	cli
_ZN5JTAG215answer_transferEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:155
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     4c2:	32 96       	adiw	r30, 0x02	; 2
put():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     4c4:	90 e4       	ldi	r25, 0x40	; 64
_ZN5JTAG215answer_transferEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
     4c6:	ce 16       	cp	r12, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:107
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
  JTAG_USART.STATUS = USART_TXCIF_bm;
     4c8:	df 06       	cpc	r13, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     4ca:	71 f4       	brne	.+28     	; 0x4e8 <JTAG2::answer_transfer()+0x94>
__iRestore():
     4cc:	2f bf       	out	0x3f, r18	; 63
_ZN5JTAG215answer_transferEv():
     4ce:	0f 90       	pop	r0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     4d0:	0f 90       	pop	r0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:158
  }
}
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	df 90       	pop	r13
     4e0:	cf 90       	pop	r12
     4e2:	bf 90       	pop	r11
     4e4:	af 90       	pop	r10
     4e6:	08 95       	ret
     4e8:	d6 01       	movw	r26, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     4ea:	8d 91       	ld	r24, X+
     4ec:	6d 01       	movw	r12, r26
put():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:106
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
     4ee:	30 91 24 08 	lds	r19, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6f00>
     4f2:	35 ff       	sbrs	r19, 5
     4f4:	fc cf       	rjmp	.-8      	; 0x4ee <JTAG2::answer_transfer()+0x9a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:107
  JTAG_USART.STATUS = USART_TXCIF_bm;
     4f6:	90 93 24 08 	sts	0x0824, r25	; 0x800824 <UPDI::nvmprog_key+0x7f6f00>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:108
  return JTAG_USART.TXDATAL = _data;
     4fa:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <UPDI::nvmprog_key+0x7f6efe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:388
/*
 * プログラミング制御開始
 *
 */

bool UPDI::enter_prog (void) {
     4fe:	e3 cf       	rjmp	.-58     	; 0x4c6 <JTAG2::answer_transfer()+0x72>

00000500 <UPDI::enter_prog()>:
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:389
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
     500:	cf 93       	push	r28
     502:	e1 99       	sbic	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     504:	36 c0       	rjmp	.+108    	; 0x572 <UPDI::enter_prog()+0x72>
is_sys_stat():
     506:	60 e2       	ldi	r22, 0x20	; 32
     508:	8b e0       	ldi	r24, 0x0B	; 11
     50a:	e5 de       	rcall	.-566    	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:390
 *
 */

bool UPDI::enter_prog (void) {
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
     50c:	c8 2f       	mov	r28, r24
_ZN4UPDI10enter_progEv():
     50e:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:391
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
     510:	fa cf       	rjmp	.-12     	; 0x506 <UPDI::enter_prog()+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:392
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
     512:	f3 99       	sbic	0x1e, 3	; 30
     514:	2c c0       	rjmp	.+88     	; 0x56e <UPDI::enter_prog()+0x6e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:203
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
}
inline bool UPDI::is_key_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, check);
     516:	f0 99       	sbic	0x1e, 0	; 30
     518:	2d c0       	rjmp	.+90     	; 0x574 <UPDI::enter_prog()+0x74>
is_key_stat():
     51a:	60 e1       	ldi	r22, 0x10	; 16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:393
bool UPDI::enter_prog (void) {
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
     51c:	87 e0       	ldi	r24, 0x07	; 7
     51e:	db de       	rcall	.-586    	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:394
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     520:	81 11       	cpse	r24, r1
     522:	12 c0       	rjmp	.+36     	; 0x548 <UPDI::enter_prog()+0x48>
     524:	6a e0       	ldi	r22, 0x0A	; 10
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	84 e2       	ldi	r24, 0x24	; 36
     52a:	99 e9       	ldi	r25, 0x99	; 153
     52c:	13 de       	rcall	.-986    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     52e:	88 23       	and	r24, r24
     530:	09 f1       	breq	.+66     	; 0x574 <UPDI::enter_prog()+0x74>
delay_micros():
     532:	89 ef       	ldi	r24, 0xF9	; 249
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	01 97       	sbiw	r24, 0x01	; 1
     538:	f1 f7       	brne	.-4      	; 0x536 <UPDI::enter_prog()+0x36>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:203
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
}
inline bool UPDI::is_key_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, check);
     53a:	00 c0       	rjmp	.+0      	; 0x53c <UPDI::enter_prog()+0x3c>
     53c:	00 00       	nop
is_key_stat():
     53e:	60 e1       	ldi	r22, 0x10	; 16
     540:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:395
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
        do{ delay_micros(100); } while (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG));
     542:	c9 de       	rcall	.-622    	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
     544:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:397
      }
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     546:	a9 f3       	breq	.-22     	; 0x532 <UPDI::enter_prog()+0x32>
     548:	81 e0       	ldi	r24, 0x01	; 1
     54a:	68 de       	rcall	.-816    	; 0x21c <UPDI::updi_reset(bool)>
     54c:	88 23       	and	r24, r24
     54e:	91 f0       	breq	.+36     	; 0x574 <UPDI::enter_prog()+0x74>
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	64 de       	rcall	.-824    	; 0x21c <UPDI::updi_reset(bool)>
     554:	88 23       	and	r24, r24
     556:	71 f0       	breq	.+28     	; 0x574 <UPDI::enter_prog()+0x74>
delay_micros():
     558:	89 ef       	ldi	r24, 0xF9	; 249
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	01 97       	sbiw	r24, 0x01	; 1
     55e:	f1 f7       	brne	.-4      	; 0x55c <UPDI::enter_prog()+0x5c>
     560:	00 c0       	rjmp	.+0      	; 0x562 <UPDI::enter_prog()+0x62>
     562:	00 00       	nop
is_sys_stat():
     564:	68 e0       	ldi	r22, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     566:	8b e0       	ldi	r24, 0x0B	; 11
     568:	b6 de       	rcall	.-660    	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
     56a:	88 23       	and	r24, r24
     56c:	a9 f3       	breq	.-22     	; 0x558 <UPDI::enter_prog()+0x58>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:398
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
        do{ delay_micros(100); } while (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG));
      }
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
      do{ delay_micros(100); } while (!UPDI::is_sys_stat(UPDI::UPDI_SYS_NVMPROG));
     56e:	e0 9a       	sbi	0x1c, 0	; 28
     570:	e1 9a       	sbi	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:400
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     572:	c1 e0       	ldi	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:401
    UPDI_CONTROL |= _BV(UPDI::UPDI_PROG_bp);
     574:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:403
  }
  return true;
     576:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:404
}
     578:	08 95       	ret

0000057a <HV_Pulse()>:
_Z8HV_Pulsev():
     57a:	80 e3       	ldi	r24, 0x30	; 48
     57c:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <UPDI::nvmprog_key+0x7f70dd>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:200
/*
 * HVチャージポンプ駆動制御
 */

void TIM::HV_Pulse_ON (void) {
  TCA0_SPLIT_CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm;
     580:	21 9a       	sbi	0x04, 1	; 4
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:270
/*
 * HVパルス印加
 */
void HV_Pulse (void) {
  TIM::HV_Pulse_ON();
  openDrainWrite(TRST_PIN, LOW);
     582:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     584:	93 e1       	ldi	r25, 0x13	; 19
     586:	01 97       	sbiw	r24, 0x01	; 1
     588:	f1 f7       	brne	.-4      	; 0x586 <HV_Pulse()+0xc>
     58a:	00 c0       	rjmp	.+0      	; 0x58c <HV_Pulse()+0x12>
     58c:	00 00       	nop
_Z8HV_Pulsev():
     58e:	21 98       	cbi	0x04, 1	; 4
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:272
  delay_micros(2000);
  openDrainWrite(TRST_PIN, HIGH);
     590:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     592:	93 e1       	ldi	r25, 0x13	; 19
     594:	01 97       	sbiw	r24, 0x01	; 1
     596:	f1 f7       	brne	.-4      	; 0x594 <HV_Pulse()+0x1a>
     598:	00 c0       	rjmp	.+0      	; 0x59a <HV_Pulse()+0x20>
     59a:	00 00       	nop
_Z8HV_Pulsev():
     59c:	e9 9b       	sbis	0x1d, 1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:274
  delay_micros(2000);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     59e:	1a c0       	rjmp	.+52     	; 0x5d4 <HV_Pulse()+0x5a>
     5a0:	2d 9a       	sbi	0x05, 5	; 5
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:275
    digitalWrite(HV8_PIN, HIGH);
     5a2:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     5a4:	97 e0       	ldi	r25, 0x07	; 7
     5a6:	01 97       	sbiw	r24, 0x01	; 1
     5a8:	f1 f7       	brne	.-4      	; 0x5a6 <HV_Pulse()+0x2c>
     5aa:	00 c0       	rjmp	.+0      	; 0x5ac <HV_Pulse()+0x32>
     5ac:	00 00       	nop
_Z8HV_Pulsev():
     5ae:	2d 98       	cbi	0x05, 5	; 5
HV_Pulse_OFF():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:277
    delay_micros(800);
    digitalWrite(HV8_PIN, LOW);
     5b0:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <UPDI::nvmprog_key+0x7f70dd>
_Z8HV_Pulsev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:204
}

void TIM::HV_Pulse_OFF (void) {
  TCA0_SPLIT_CTRLB = 0;
     5b4:	88 ee       	ldi	r24, 0xE8	; 232
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:285
    digitalWrite(HV12_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
  }
  TIM::HV_Pulse_OFF();
  UPDI_USART.BAUD = UPDI_BAUD_SHORT_BREAK;
     5b6:	93 e0       	ldi	r25, 0x03	; 3
     5b8:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6ee4>
     5bc:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6ee5>
     5c0:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:286
  UPDI::SEND(UPDI::UPDI_NOP);
     5c2:	b0 dd       	rcall	.-1184   	; 0x124 <UPDI::SEND(unsigned char)>
     5c4:	80 eb       	ldi	r24, 0xB0	; 176
     5c6:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:287
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     5c8:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6ee4>
     5cc:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6ee5>
     5d0:	e3 9a       	sbi	0x1c, 3	; 28
     5d2:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:288
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERHV_bp);
     5d4:	0e 9a       	sbi	0x01, 6	; 1
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:289
}
     5d6:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:280
    digitalWrite(HV8_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV8_PIN, LOW);
  }
  else {
    digitalWrite(HV12_PIN, HIGH);
     5d8:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     5da:	01 97       	sbiw	r24, 0x01	; 1
     5dc:	f1 f7       	brne	.-4      	; 0x5da <HV_Pulse()+0x60>
     5de:	00 c0       	rjmp	.+0      	; 0x5e0 <HV_Pulse()+0x66>
     5e0:	00 00       	nop
_Z8HV_Pulsev():
     5e2:	0e 98       	cbi	0x01, 6	; 1
     5e4:	e5 cf       	rjmp	.-54     	; 0x5b0 <HV_Pulse()+0x36>

000005e6 <UPDI::updi_activate()>:
_ZN4UPDI13updi_activateEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:282
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:410

/*
 * UPDI許認可
 */

bool UPDI::updi_activate (void) {
     5ea:	1f 92       	push	r1
     5ec:	cd b7       	in	r28, 0x3d	; 61
     5ee:	de b7       	in	r29, 0x3e	; 62
     5f0:	83 e0       	ldi	r24, 0x03	; 3
     5f2:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:411
  volatile uint8_t count = 3;
     5f4:	89 81       	ldd	r24, Y+1	; 0x01
     5f6:	81 50       	subi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:412
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
     5f8:	89 83       	std	Y+1, r24	; 0x01
     5fa:	88 23       	and	r24, r24
     5fc:	09 f4       	brne	.+2      	; 0x600 <UPDI::updi_activate()+0x1a>
     5fe:	52 c0       	rjmp	.+164    	; 0x6a4 <UPDI::updi_activate()+0xbe>
     600:	e1 99       	sbic	0x1c, 1	; 28
     602:	50 c0       	rjmp	.+160    	; 0x6a4 <UPDI::updi_activate()+0xbe>
delay_millis():
     604:	2f e3       	ldi	r18, 0x3F	; 63
     606:	3d e0       	ldi	r19, 0x0D	; 13
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
     608:	83 e0       	ldi	r24, 0x03	; 3
     60a:	21 50       	subi	r18, 0x01	; 1
     60c:	30 40       	sbci	r19, 0x00	; 0
     60e:	80 40       	sbci	r24, 0x00	; 0
     610:	e1 f7       	brne	.-8      	; 0x60a <UPDI::updi_activate()+0x24>
     612:	00 c0       	rjmp	.+0      	; 0x614 <UPDI::updi_activate()+0x2e>
     614:	00 00       	nop
_ZN4UPDI13updi_activateEv():
     616:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:414
    delay_millis(100);
    if (setjmp(TIM::CONTEXT) == 0) {
     618:	98 e3       	ldi	r25, 0x38	; 56
     61a:	0e 94 46 0c 	call	0x188c	; 0x188c <setjmp>
     61e:	89 2b       	or	r24, r25
     620:	09 f0       	breq	.+2      	; 0x624 <UPDI::updi_activate()+0x3e>
     622:	3b c0       	rjmp	.+118    	; 0x69a <UPDI::updi_activate()+0xb4>
Timeout_Start():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     624:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:128
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    TCB0_CNT = 0;
     626:	f8 94       	cli
Timeout_Start():
     628:	ea e8       	ldi	r30, 0x8A	; 138
     62a:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:129
    TCB0_CCMP = _ms >> 2;
     62c:	10 82       	st	Z, r1
     62e:	11 82       	std	Z+1, r1	; 0x01
     630:	25 e2       	ldi	r18, 0x25	; 37
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	ec e8       	ldi	r30, 0x8C	; 140
     636:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:130
    TCB0_INTCTRL = TCB_CAPT_bm;
     638:	20 83       	st	Z, r18
     63a:	31 83       	std	Z+1, r19	; 0x01
     63c:	21 e0       	ldi	r18, 0x01	; 1
     63e:	e5 e8       	ldi	r30, 0x85	; 133
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:131
    TCB0_INTFLAGS = TCB_CAPT_bm;
     640:	fa e0       	ldi	r31, 0x0A	; 10
     642:	20 83       	st	Z, r18
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:132
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     644:	e6 e8       	ldi	r30, 0x86	; 134
     646:	fa e0       	ldi	r31, 0x0A	; 10
     648:	20 83       	st	Z, r18
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:334
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, UPDI::UPDI_SIB_128 };
  uint8_t* _p = &JTAG2::packet.body[3];
  size_t _len = 16;
  if (!skip) {
    /* HV制御強制許可 */
    if (bit_is_set(UPDI_CONTROL, UPDI_FCHV_bp)) {
     64a:	2f e0       	ldi	r18, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:335
      HV_Pulse();
     64c:	e0 e8       	ldi	r30, 0x80	; 128
     64e:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:338

      /* send nvmprog_key */
      if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     650:	20 83       	st	Z, r18
__iRestore():
     652:	8f bf       	out	0x3f, r24	; 63
enter_updi():
     654:	e4 9b       	sbis	0x1c, 4	; 28
     656:	2d c0       	rjmp	.+90     	; 0x6b2 <UPDI::updi_activate()+0xcc>
     658:	90 df       	rcall	.-224    	; 0x57a <HV_Pulse()>
     65a:	6a e0       	ldi	r22, 0x0A	; 10
     65c:	70 e0       	ldi	r23, 0x00	; 0
     65e:	84 e2       	ldi	r24, 0x24	; 36
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:341

      /* restart target : change mode */
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     660:	99 e9       	ldi	r25, 0x99	; 153
     662:	78 dd       	rcall	.-1296   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     664:	88 23       	and	r24, r24
     666:	c9 f0       	breq	.+50     	; 0x69a <UPDI::updi_activate()+0xb4>
     668:	81 e0       	ldi	r24, 0x01	; 1
     66a:	d8 dd       	rcall	.-1104   	; 0x21c <UPDI::updi_reset(bool)>
     66c:	88 23       	and	r24, r24
     66e:	a9 f0       	breq	.+42     	; 0x69a <UPDI::updi_activate()+0xb4>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	d4 dd       	rcall	.-1112   	; 0x21c <UPDI::updi_reset(bool)>
     674:	88 23       	and	r24, r24
     676:	89 f0       	breq	.+34     	; 0x69a <UPDI::updi_activate()+0xb4>
delay_millis():
     678:	3f e9       	ldi	r19, 0x9F	; 159
     67a:	86 e8       	ldi	r24, 0x86	; 134
     67c:	91 e0       	ldi	r25, 0x01	; 1
     67e:	31 50       	subi	r19, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:349
      delay_millis(50);
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
     680:	80 40       	sbci	r24, 0x00	; 0
     682:	90 40       	sbci	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:350
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     684:	e1 f7       	brne	.-8      	; 0x67e <UPDI::updi_activate()+0x98>
     686:	00 c0       	rjmp	.+0      	; 0x688 <UPDI::updi_activate()+0xa2>
     688:	00 00       	nop
enter_updi():
     68a:	e0 99       	sbic	0x1c, 0	; 28
     68c:	05 c0       	rjmp	.+10     	; 0x698 <UPDI::updi_activate()+0xb2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:416
  volatile uint8_t count = 3;
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
    delay_millis(100);
    if (setjmp(TIM::CONTEXT) == 0) {
      TIM::Timeout_Start(150);
      UPDI::enter_updi(false) && UPDI::enter_prog();
     68e:	79 dd       	rcall	.-1294   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
     690:	88 23       	and	r24, r24
     692:	19 f0       	breq	.+6      	; 0x69a <UPDI::updi_activate()+0xb4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:418
    }
    TIM::Timeout_Stop();
     694:	80 dd       	rcall	.-1280   	; 0x196 <UPDI::enter_updi(bool) [clone .part.4]>
_ZN4UPDI13updi_activateEv():
     696:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:421

    /* 2周目以降は JPショートならHV制御強制を許可 */
    if (!digitalRead(JP_SENSE_PIN)) UPDI_CONTROL |= _BV(UPDI::UPDI_FCHV_bp);
     698:	33 df       	rcall	.-410    	; 0x500 <UPDI::enter_prog()>
     69a:	7f de       	rcall	.-770    	; 0x39a <TIM::Timeout_Stop()>
     69c:	53 99       	sbic	0x0a, 3	; 10
     69e:	aa cf       	rjmp	.-172    	; 0x5f4 <UPDI::updi_activate()+0xe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:423
  }
  return bit_is_set(UPDI_CONTROL, UPDI_PROG_bp);
     6a0:	e4 9a       	sbi	0x1c, 4	; 28
     6a2:	a8 cf       	rjmp	.-176    	; 0x5f4 <UPDI::updi_activate()+0xe>
     6a4:	8c b3       	in	r24, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:424
}
     6a6:	86 95       	lsr	r24
     6a8:	81 70       	andi	r24, 0x01	; 1
     6aa:	0f 90       	pop	r0
     6ac:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:347

      /* wait enable : chip erase mode success */
      delay_millis(50);
    }
    else
      UPDI::BREAK();
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret
enter_updi():
     6b2:	00 de       	rcall	.-1024   	; 0x2b4 <UPDI::BREAK()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:307
  return UPDI_LASTL;
}

/* NVMCTRL v3 */
uint8_t NVM::nvm_wait_v3 (void) {
  while (UPDI::ld8(NVM::NVMCTRL_V3_REG_STATUS) & 3) delay_micros(50);
     6b4:	ea cf       	rjmp	.-44     	; 0x68a <UPDI::updi_activate()+0xa4>

000006b6 <NVM::nvm_wait_v3()>:
_ZN3NVM11nvm_wait_v3Ev():
     6b6:	66 e0       	ldi	r22, 0x06	; 6
     6b8:	70 e1       	ldi	r23, 0x10	; 16
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	21 de       	rcall	.-958    	; 0x302 <UPDI::ld8(unsigned long)>
     6c0:	83 70       	andi	r24, 0x03	; 3
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     6c2:	29 f0       	breq	.+10     	; 0x6ce <NVM::nvm_wait_v3()+0x18>
delay_micros():
     6c4:	86 ea       	ldi	r24, 0xA6	; 166
     6c6:	8a 95       	dec	r24
     6c8:	f1 f7       	brne	.-4      	; 0x6c6 <NVM::nvm_wait_v3()+0x10>
     6ca:	00 c0       	rjmp	.+0      	; 0x6cc <NVM::nvm_wait_v3()+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:308
  return UPDI_LASTL;
     6cc:	f4 cf       	rjmp	.-24     	; 0x6b6 <NVM::nvm_wait_v3()>
_ZN3NVM11nvm_wait_v3Ev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:309
}
     6ce:	8e b3       	in	r24, 0x1e	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:334
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
}

/* NVMCTRL v3 */
bool NVM::nvm_ctrl_v3 (uint8_t nvmcmd) {
     6d0:	08 95       	ret

000006d2 <NVM::nvm_ctrl_v3(unsigned char)>:
_ZN3NVM11nvm_ctrl_v3Eh():
     6d2:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:335
  NVM::nvm_wait_v3();
     6d4:	c8 2f       	mov	r28, r24
     6d6:	ef df       	rcall	.-34     	; 0x6b6 <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:336
  return nvm_ctrl_change(nvmcmd);
     6d8:	8c 2f       	mov	r24, r28
     6da:	cf 91       	pop	r28
     6dc:	77 ce       	rjmp	.-786    	; 0x3cc <nvm_ctrl_change(unsigned char)>

000006de <NVM::write_flash_v3(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v3Emj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:525

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_flash_v3 (uint32_t start_addr, size_t byte_count) {
     6de:	cf 92       	push	r12
     6e0:	df 92       	push	r13
     6e2:	ef 92       	push	r14
     6e4:	ff 92       	push	r15
     6e6:	0f 93       	push	r16
     6e8:	1f 93       	push	r17
     6ea:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:526
  byte_count >>= 1;
     6ec:	df 93       	push	r29
     6ee:	ea 01       	movw	r28, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:527
  if (byte_count == 0 || byte_count > 256) return false;
     6f0:	d6 95       	lsr	r29
     6f2:	c7 95       	ror	r28
     6f4:	9e 01       	movw	r18, r28
     6f6:	21 50       	subi	r18, 0x01	; 1
     6f8:	31 09       	sbc	r19, r1
     6fa:	2f 3f       	cpi	r18, 0xFF	; 255
     6fc:	31 05       	cpc	r19, r1
     6fe:	11 f0       	breq	.+4      	; 0x704 <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:532

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     700:	08 f0       	brcs	.+2      	; 0x704 <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
     702:	57 c0       	rjmp	.+174    	; 0x7b2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:537
    NVM::nvm_wait_v3();
    if (!UPDI::st8(start_addr, 0xFF)) return false;
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
  }
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPBCLR)) return false;
     704:	6b 01       	movw	r12, r22
     706:	7c 01       	movw	r14, r24
     708:	e2 9b       	sbis	0x1c, 2	; 28
     70a:	3e c0       	rjmp	.+124    	; 0x788 <NVM::write_flash_v3(unsigned long, unsigned int)+0xaa>
     70c:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:540

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     70e:	e1 df       	rcall	.-62     	; 0x6d2 <NVM::nvm_ctrl_v3(unsigned char)>
     710:	88 23       	and	r24, r24
     712:	09 f4       	brne	.+2      	; 0x716 <NVM::write_flash_v3(unsigned long, unsigned int)+0x38>
     714:	4e c0       	rjmp	.+156    	; 0x7b2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     716:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     71a:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:541
  set_repeat_rsd[5] = byte_count - 1;
     71e:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
     722:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:542
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     726:	8c 2f       	mov	r24, r28
     728:	81 50       	subi	r24, 0x01	; 1
     72a:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
     72e:	65 e0       	ldi	r22, 0x05	; 5
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:543
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     734:	98 e3       	ldi	r25, 0x38	; 56
     736:	0e dd       	rcall	.-1508   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     738:	88 23       	and	r24, r24
     73a:	09 f4       	brne	.+2      	; 0x73e <NVM::write_flash_v3(unsigned long, unsigned int)+0x60>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:544
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     73c:	3a c0       	rjmp	.+116    	; 0x7b2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     73e:	e6 dc       	rcall	.-1588   	; 0x10c <UPDI::RECV()>
     740:	80 34       	cpi	r24, 0x40	; 64
     742:	09 f0       	breq	.+2      	; 0x746 <NVM::write_flash_v3(unsigned long, unsigned int)+0x68>
     744:	36 c0       	rjmp	.+108    	; 0x7b2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     746:	68 e0       	ldi	r22, 0x08	; 8
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	8e e1       	ldi	r24, 0x1E	; 30
     74c:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:549

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     74e:	02 dd       	rcall	.-1532   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     750:	88 23       	and	r24, r24
     752:	79 f1       	breq	.+94     	; 0x7b2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     754:	03 e6       	ldi	r16, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:550
    UPDI::SEND(*p++);
     756:	18 e3       	ldi	r17, 0x38	; 56
     758:	f8 01       	movw	r30, r16
     75a:	82 89       	ldd	r24, Z+18	; 0x12
     75c:	e3 dc       	rcall	.-1594   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:551
  } while (--byte_count);
     75e:	f8 01       	movw	r30, r16
     760:	83 89       	ldd	r24, Z+19	; 0x13
     762:	e0 dc       	rcall	.-1600   	; 0x124 <UPDI::SEND(unsigned char)>
     764:	21 97       	sbiw	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:555
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     766:	0e 5f       	subi	r16, 0xFE	; 254
     768:	1f 4f       	sbci	r17, 0xFF	; 255
     76a:	20 97       	sbiw	r28, 0x00	; 0
     76c:	a9 f7       	brne	.-22     	; 0x758 <NVM::write_flash_v3(unsigned long, unsigned int)+0x7a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:557

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
     76e:	09 dd       	rcall	.-1518   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:558
}
     770:	88 23       	and	r24, r24
     772:	f9 f0       	breq	.+62     	; 0x7b2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     774:	84 e0       	ldi	r24, 0x04	; 4
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	1f 91       	pop	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:557
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
     77c:	0f 91       	pop	r16
     77e:	ff 90       	pop	r15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:532
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     780:	ef 90       	pop	r14
     782:	df 90       	pop	r13
     784:	cf 90       	pop	r12
     786:	a5 cf       	rjmp	.-182    	; 0x6d2 <NVM::nvm_ctrl_v3(unsigned char)>
     788:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     78c:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     790:	01 97       	sbiw	r24, 0x01	; 1
     792:	86 23       	and	r24, r22
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:533
    NVM::nvm_wait_v3();
     794:	9d 21       	and	r25, r13
     796:	89 2b       	or	r24, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:534
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     798:	09 f0       	breq	.+2      	; 0x79c <NVM::write_flash_v3(unsigned long, unsigned int)+0xbe>
     79a:	b8 cf       	rjmp	.-144    	; 0x70c <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     79c:	8c df       	rcall	.-232    	; 0x6b6 <NVM::nvm_wait_v3()>
     79e:	4f ef       	ldi	r20, 0xFF	; 255
     7a0:	c7 01       	movw	r24, r14
     7a2:	b6 01       	movw	r22, r12
     7a4:	47 dd       	rcall	.-1394   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:535
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
     7a6:	88 23       	and	r24, r24
     7a8:	21 f0       	breq	.+8      	; 0x7b2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     7aa:	88 e0       	ldi	r24, 0x08	; 8
     7ac:	92 df       	rcall	.-220    	; 0x6d2 <NVM::nvm_ctrl_v3(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:558

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
}
     7ae:	81 11       	cpse	r24, r1
     7b0:	ad cf       	rjmp	.-166    	; 0x70c <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	df 91       	pop	r29
     7b6:	cf 91       	pop	r28
     7b8:	1f 91       	pop	r17
     7ba:	0f 91       	pop	r16
     7bc:	ff 90       	pop	r15
     7be:	ef 90       	pop	r14
     7c0:	df 90       	pop	r13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:301
 */

/* NVMCTRL v0 */
/* NVMCTRL v2 */
uint8_t NVM::nvm_wait (void) {
  while (UPDI::ld8(NVM::NVMCTRL_REG_STATUS) & 3) delay_micros(50);
     7c2:	cf 90       	pop	r12
     7c4:	08 95       	ret

000007c6 <NVM::nvm_wait()>:
_ZN3NVM8nvm_waitEv():
     7c6:	62 e0       	ldi	r22, 0x02	; 2
     7c8:	70 e1       	ldi	r23, 0x10	; 16
     7ca:	80 e0       	ldi	r24, 0x00	; 0
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	99 dd       	rcall	.-1230   	; 0x302 <UPDI::ld8(unsigned long)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     7d0:	83 70       	andi	r24, 0x03	; 3
     7d2:	29 f0       	breq	.+10     	; 0x7de <NVM::nvm_wait()+0x18>
delay_micros():
     7d4:	86 ea       	ldi	r24, 0xA6	; 166
     7d6:	8a 95       	dec	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:302
  return UPDI_LASTL;
     7d8:	f1 f7       	brne	.-4      	; 0x7d6 <NVM::nvm_wait()+0x10>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:303
}
     7da:	00 c0       	rjmp	.+0      	; 0x7dc <NVM::nvm_wait()+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:328
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
     7dc:	f4 cf       	rjmp	.-24     	; 0x7c6 <NVM::nvm_wait()>
_ZN3NVM8nvm_waitEv():
     7de:	8e b3       	in	r24, 0x1e	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:329
  NVM::nvm_wait();
     7e0:	08 95       	ret

000007e2 <NVM::nvm_ctrl_v2(unsigned char)>:
_ZN3NVM11nvm_ctrl_v2Eh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:330
  return nvm_ctrl_change(nvmcmd);
     7e2:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:331
}
     7e4:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:330
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
     7e6:	ef df       	rcall	.-34     	; 0x7c6 <NVM::nvm_wait()>
     7e8:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:490
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_flash_v2 (uint32_t start_addr, size_t byte_count) {
     7ea:	cf 91       	pop	r28
     7ec:	ef cd       	rjmp	.-1058   	; 0x3cc <nvm_ctrl_change(unsigned char)>

000007ee <NVM::write_flash_v2(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v2Emj():
     7ee:	cf 92       	push	r12
     7f0:	df 92       	push	r13
     7f2:	ef 92       	push	r14
     7f4:	ff 92       	push	r15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:491
  byte_count >>= 1;
     7f6:	0f 93       	push	r16
     7f8:	1f 93       	push	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:492
  if (byte_count == 0 || byte_count > 256) return false;
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	ea 01       	movw	r28, r20
     800:	d6 95       	lsr	r29
     802:	c7 95       	ror	r28
     804:	9e 01       	movw	r18, r28
     806:	21 50       	subi	r18, 0x01	; 1
     808:	31 09       	sbc	r19, r1
     80a:	2f 3f       	cpi	r18, 0xFF	; 255
     80c:	31 05       	cpc	r19, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:497

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     80e:	11 f0       	breq	.+4      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:501
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
    if (!UPDI::st8(start_addr, 0xFF)) return false;
  }
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLWR)) return false;
     810:	08 f0       	brcs	.+2      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     812:	55 c0       	rjmp	.+170    	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     814:	6b 01       	movw	r12, r22
     816:	7c 01       	movw	r14, r24
     818:	e2 9b       	sbis	0x1c, 2	; 28
     81a:	3d c0       	rjmp	.+122    	; 0x896 <__DATA_REGION_LENGTH__+0x96>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:504

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     81c:	82 e0       	ldi	r24, 0x02	; 2
     81e:	e1 df       	rcall	.-62     	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     820:	88 23       	and	r24, r24
     822:	09 f4       	brne	.+2      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     824:	4c c0       	rjmp	.+152    	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     826:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:505
  set_repeat_rsd[5] = byte_count - 1;
     82a:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     82e:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:506
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     832:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     836:	8c 2f       	mov	r24, r28
     838:	81 50       	subi	r24, 0x01	; 1
     83a:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
     83e:	65 e0       	ldi	r22, 0x05	; 5
     840:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:507
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     842:	8b e2       	ldi	r24, 0x2B	; 43
     844:	98 e3       	ldi	r25, 0x38	; 56
     846:	86 dc       	rcall	.-1780   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     848:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:508
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     84a:	09 f4       	brne	.+2      	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     84c:	38 c0       	rjmp	.+112    	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     84e:	5e dc       	rcall	.-1860   	; 0x10c <UPDI::RECV()>
     850:	80 34       	cpi	r24, 0x40	; 64
     852:	a9 f5       	brne	.+106    	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     854:	68 e0       	ldi	r22, 0x08	; 8
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	8e e1       	ldi	r24, 0x1E	; 30
     85a:	98 e3       	ldi	r25, 0x38	; 56
     85c:	7b dc       	rcall	.-1802   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:513

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     85e:	88 23       	and	r24, r24
     860:	71 f1       	breq	.+92     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     862:	03 e6       	ldi	r16, 0x63	; 99
     864:	18 e3       	ldi	r17, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:514
    UPDI::SEND(*p++);
     866:	f8 01       	movw	r30, r16
     868:	82 89       	ldd	r24, Z+18	; 0x12
     86a:	5c dc       	rcall	.-1864   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:515
  } while (--byte_count);
     86c:	f8 01       	movw	r30, r16
     86e:	83 89       	ldd	r24, Z+19	; 0x13
     870:	59 dc       	rcall	.-1870   	; 0x124 <UPDI::SEND(unsigned char)>
     872:	21 97       	sbiw	r28, 0x01	; 1
     874:	0e 5f       	subi	r16, 0xFE	; 254
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:519
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     876:	1f 4f       	sbci	r17, 0xFF	; 255
     878:	20 97       	sbiw	r28, 0x00	; 0
     87a:	a9 f7       	brne	.-22     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     87c:	82 dc       	rcall	.-1788   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:521

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     87e:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:522
}
     880:	f1 f0       	breq	.+60     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     882:	80 e0       	ldi	r24, 0x00	; 0
     884:	df 91       	pop	r29
     886:	cf 91       	pop	r28
     888:	1f 91       	pop	r17
     88a:	0f 91       	pop	r16
     88c:	ff 90       	pop	r15
     88e:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:521
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     890:	df 90       	pop	r13
     892:	cf 90       	pop	r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:497
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     894:	a6 cf       	rjmp	.-180    	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     896:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     89a:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     89e:	01 97       	sbiw	r24, 0x01	; 1
     8a0:	86 23       	and	r24, r22
     8a2:	9d 21       	and	r25, r13
     8a4:	89 2b       	or	r24, r25
     8a6:	09 f0       	breq	.+2      	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:498
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     8a8:	b9 cf       	rjmp	.-142    	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     8aa:	88 e0       	ldi	r24, 0x08	; 8
     8ac:	9a df       	rcall	.-204    	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     8ae:	88 23       	and	r24, r24
     8b0:	31 f0       	breq	.+12     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:499
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     8b2:	4f ef       	ldi	r20, 0xFF	; 255
     8b4:	c7 01       	movw	r24, r14
     8b6:	b6 01       	movw	r22, r12
     8b8:	bd dc       	rcall	.-1670   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
     8ba:	81 11       	cpse	r24, r1
     8bc:	af cf       	rjmp	.-162    	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     8be:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:522

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}
     8c0:	df 91       	pop	r29
     8c2:	cf 91       	pop	r28
     8c4:	1f 91       	pop	r17
     8c6:	0f 91       	pop	r16
     8c8:	ff 90       	pop	r15
     8ca:	ef 90       	pop	r14
     8cc:	df 90       	pop	r13
     8ce:	cf 90       	pop	r12
     8d0:	08 95       	ret

000008d2 <UPDI::runtime(unsigned char)>:
_ZN4UPDI7runtimeEh():
     8d2:	bf 92       	push	r11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:430

/*
 * UPDI制御プロセス
 */

bool UPDI::runtime (uint8_t updi_cmd) {
     8d4:	cf 92       	push	r12
     8d6:	df 92       	push	r13
     8d8:	ef 92       	push	r14
     8da:	ff 92       	push	r15
     8dc:	0f 93       	push	r16
     8de:	1f 93       	push	r17
     8e0:	cf 93       	push	r28
     8e2:	df 93       	push	r29
     8e4:	cd b7       	in	r28, 0x3d	; 61
     8e6:	de b7       	in	r29, 0x3e	; 62
     8e8:	26 97       	sbiw	r28, 0x06	; 6
     8ea:	cd bf       	out	0x3d, r28	; 61
     8ec:	de bf       	out	0x3e, r29	; 62
     8ee:	8e 83       	std	Y+6, r24	; 0x06
     8f0:	1d 82       	std	Y+5, r1	; 0x05
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:431
  volatile bool _result = false;
     8f2:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:433
  uint16_t limit = 4000;
  if (setjmp(TIM::CONTEXT) == 0) {
     8f4:	98 e3       	ldi	r25, 0x38	; 56
     8f6:	ca d7       	rcall	.+3988   	; 0x188c <setjmp>
     8f8:	89 2b       	or	r24, r25
     8fa:	09 f0       	breq	.+2      	; 0x8fe <UPDI::runtime(unsigned char)+0x2c>
     8fc:	06 c1       	rjmp	.+524    	; 0xb0a <UPDI::runtime(unsigned char)+0x238>
Timeout_Start():
     8fe:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
     900:	f8 94       	cli
Timeout_Start():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:127
/*
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     902:	10 92 8a 0a 	sts	0x0A8A, r1	; 0x800a8a <UPDI::nvmprog_key+0x7f7166>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:128
    TCB0_CNT = 0;
     906:	10 92 8b 0a 	sts	0x0A8B, r1	; 0x800a8b <UPDI::nvmprog_key+0x7f7167>
     90a:	28 ee       	ldi	r18, 0xE8	; 232
     90c:	33 e0       	ldi	r19, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:129
    TCB0_CCMP = _ms >> 2;
     90e:	20 93 8c 0a 	sts	0x0A8C, r18	; 0x800a8c <UPDI::nvmprog_key+0x7f7168>
     912:	30 93 8d 0a 	sts	0x0A8D, r19	; 0x800a8d <UPDI::nvmprog_key+0x7f7169>
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	80 93 85 0a 	sts	0x0A85, r24	; 0x800a85 <UPDI::nvmprog_key+0x7f7161>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:130
    TCB0_INTCTRL = TCB_CAPT_bm;
     91c:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f7162>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:131
    TCB0_INTFLAGS = TCB_CAPT_bm;
     920:	8f e0       	ldi	r24, 0x0F	; 15
     922:	80 93 80 0a 	sts	0x0A80, r24	; 0x800a80 <UPDI::nvmprog_key+0x7f715c>
__iRestore():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:132
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     926:	9f bf       	out	0x3f, r25	; 63
_ZN4UPDI7runtimeEh():
     928:	8e 81       	ldd	r24, Y+6	; 0x06
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     92a:	83 30       	cpi	r24, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:435
    TIM::Timeout_Start(limit);
    switch (updi_cmd) {
     92c:	09 f4       	brne	.+2      	; 0x930 <UPDI::runtime(unsigned char)+0x5e>
     92e:	a6 c3       	rjmp	.+1868   	; 0x107c <UPDI::runtime(unsigned char)+0x7aa>
     930:	84 30       	cpi	r24, 0x04	; 4
     932:	09 f4       	brne	.+2      	; 0x936 <UPDI::runtime(unsigned char)+0x64>
     934:	f0 c3       	rjmp	.+2016   	; 0x1116 <UPDI::runtime(unsigned char)+0x844>
     936:	82 30       	cpi	r24, 0x02	; 2
     938:	09 f4       	brne	.+2      	; 0x93c <UPDI::runtime(unsigned char)+0x6a>
     93a:	ae c0       	rjmp	.+348    	; 0xa98 <UPDI::runtime(unsigned char)+0x1c6>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:50
/*
 * メモリ読込中核
 */

bool NVM::read_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     93c:	e3 e6       	ldi	r30, 0x63	; 99
     93e:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:51
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     940:	81 85       	ldd	r24, Z+9	; 0x09
     942:	02 85       	ldd	r16, Z+10	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:52
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     944:	13 85       	ldd	r17, Z+11	; 0x0b
     946:	46 85       	ldd	r20, Z+14	; 0x0e
     948:	57 85       	ldd	r21, Z+15	; 0x0f
     94a:	60 89       	ldd	r22, Z+16	; 0x10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:53
  JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
     94c:	71 89       	ldd	r23, Z+17	; 0x11
     94e:	92 e8       	ldi	r25, 0x82	; 130
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:54
  JTAG2::packet.size_word[0] = byte_count + 1;
     950:	90 87       	std	Z+8, r25	; 0x08
     952:	98 01       	movw	r18, r16
     954:	2f 5f       	subi	r18, 0xFF	; 255
     956:	3f 4f       	sbci	r19, 0xFF	; 255
     958:	23 83       	std	Z+3, r18	; 0x03
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:58
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     95a:	34 83       	std	Z+4, r19	; 0x04
     95c:	02 30       	cpi	r16, 0x02	; 2
     95e:	11 05       	cpc	r17, r1
     960:	08 f4       	brcc	.+2      	; 0x964 <UPDI::runtime(unsigned char)+0x92>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:59
    switch (mem_type) {
     962:	46 c0       	rjmp	.+140    	; 0x9f0 <UPDI::runtime(unsigned char)+0x11e>
     964:	80 3c       	cpi	r24, 0xC0	; 192
     966:	09 f4       	brne	.+2      	; 0x96a <UPDI::runtime(unsigned char)+0x98>
     968:	5c c0       	rjmp	.+184    	; 0xa22 <UPDI::runtime(unsigned char)+0x150>
     96a:	48 f4       	brcc	.+18     	; 0x97e <UPDI::runtime(unsigned char)+0xac>
     96c:	82 32       	cpi	r24, 0x22	; 34
     96e:	09 f4       	brne	.+2      	; 0x972 <UPDI::runtime(unsigned char)+0xa0>
     970:	65 c0       	rjmp	.+202    	; 0xa3c <UPDI::runtime(unsigned char)+0x16a>
     972:	18 f0       	brcs	.+6      	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
     974:	82 5b       	subi	r24, 0xB2	; 178
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:303
bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     976:	84 30       	cpi	r24, 0x04	; 4
     978:	d8 f1       	brcs	.+118    	; 0x9f0 <UPDI::runtime(unsigned char)+0x11e>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:59
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	33 c0       	rjmp	.+102    	; 0x9e4 <UPDI::runtime(unsigned char)+0x112>
read_memory():
     97e:	84 3c       	cpi	r24, 0xC4	; 196
     980:	09 f4       	brne	.+2      	; 0x984 <UPDI::runtime(unsigned char)+0xb2>
     982:	5c c0       	rjmp	.+184    	; 0xa3c <UPDI::runtime(unsigned char)+0x16a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:67
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
      }
      /* Flash 領域 */
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     984:	88 f5       	brcc	.+98     	; 0x9e8 <UPDI::runtime(unsigned char)+0x116>
     986:	81 3c       	cpi	r24, 0xC1	; 193
     988:	c1 f7       	brne	.-16     	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
     98a:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
     98e:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     992:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:252
/*
 * Flash領域ワード読込
 */

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
     996:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
read_flash():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:253
  if (byte_count == 0 || byte_count > 256) return false;
     99a:	16 95       	lsr	r17
     99c:	07 95       	ror	r16
     99e:	98 01       	movw	r18, r16
     9a0:	21 50       	subi	r18, 0x01	; 1
     9a2:	31 09       	sbc	r19, r1
     9a4:	2f 3f       	cpi	r18, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:67
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
      }
      /* Flash 領域 */
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     9a6:	31 05       	cpc	r19, r1
     9a8:	09 f0       	breq	.+2      	; 0x9ac <UPDI::runtime(unsigned char)+0xda>
     9aa:	38 f7       	brcc	.-50     	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
read_memory():
     9ac:	48 0f       	add	r20, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:255

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
  if (byte_count == 0 || byte_count > 256) return false;
  uint8_t* p = &JTAG2::packet.body[1];
  if (!UPDI::send_repeat_header(
     9ae:	59 1f       	adc	r21, r25
     9b0:	6a 1f       	adc	r22, r26
     9b2:	7b 1f       	adc	r23, r27
read_flash():
     9b4:	98 01       	movw	r18, r16
     9b6:	81 e2       	ldi	r24, 0x21	; 33
     9b8:	5e dc       	rcall	.-1860   	; 0x276 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     9ba:	88 23       	and	r24, r24
     9bc:	f1 f2       	breq	.-68     	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
     9be:	73 e6       	ldi	r23, 0x63	; 99
     9c0:	e7 2e       	mov	r14, r23
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:261
    (UPDI::UPDI_LD | UPDI::UPDI_DATA2),
    start_addr,
    byte_count
  )) return false;
  do {
    *p++ = UPDI::RECV();
     9c2:	78 e3       	ldi	r23, 0x38	; 56
     9c4:	f7 2e       	mov	r15, r23
     9c6:	a2 db       	rcall	.-2236   	; 0x10c <UPDI::RECV()>
     9c8:	f7 01       	movw	r30, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:262
    *p++ = UPDI::RECV();
     9ca:	81 87       	std	Z+9, r24	; 0x09
     9cc:	9f db       	rcall	.-2242   	; 0x10c <UPDI::RECV()>
     9ce:	f7 01       	movw	r30, r14
     9d0:	82 87       	std	Z+10, r24	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:263
  } while (--byte_count);
     9d2:	01 50       	subi	r16, 0x01	; 1
     9d4:	11 09       	sbc	r17, r1
     9d6:	f2 e0       	ldi	r31, 0x02	; 2
     9d8:	ef 0e       	add	r14, r31
     9da:	f1 1c       	adc	r15, r1
     9dc:	01 15       	cp	r16, r1
     9de:	11 05       	cpc	r17, r1
     9e0:	91 f7       	brne	.-28     	; 0x9c6 <UPDI::runtime(unsigned char)+0xf4>
read_userrow_dummy():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:290
bool NVM::read_userrow_dummy (size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
  uint8_t* p = &JTAG2::packet.body[1];
  uint8_t* q = &JTAG2::packet.body[266];
  do { *p++ = *q++; } while (--byte_count);
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_URWR_bp);
     9e2:	81 e0       	ldi	r24, 0x01	; 1
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:460
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
     9e4:	8d 83       	std	Y+5, r24	; 0x05
     9e6:	91 c0       	rjmp	.+290    	; 0xb0a <UPDI::runtime(unsigned char)+0x238>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:59
  JTAG2::packet.size_word[0] = byte_count + 1;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     9e8:	85 3c       	cpi	r24, 0xC5	; 197
     9ea:	a9 f1       	breq	.+106    	; 0xa56 <UPDI::runtime(unsigned char)+0x184>
     9ec:	86 3c       	cpi	r24, 0xC6	; 198
     9ee:	29 f6       	brne	.-118    	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
read_data():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:272
/*
 * データ領域バイト読込
 */

bool NVM::read_data (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     9f0:	c8 01       	movw	r24, r16
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	8f 3f       	cpi	r24, 0xFF	; 255
     9f6:	91 05       	cpc	r25, r1
     9f8:	11 f0       	breq	.+4      	; 0x9fe <UPDI::runtime(unsigned char)+0x12c>
     9fa:	08 f0       	brcs	.+2      	; 0x9fe <UPDI::runtime(unsigned char)+0x12c>
     9fc:	be cf       	rjmp	.-132    	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:274
  uint8_t* p = &JTAG2::packet.body[1];
  if (!UPDI::send_repeat_header(
     9fe:	98 01       	movw	r18, r16
     a00:	80 e2       	ldi	r24, 0x20	; 32
     a02:	39 dc       	rcall	.-1934   	; 0x276 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     a04:	88 23       	and	r24, r24
     a06:	09 f4       	brne	.+2      	; 0xa0a <UPDI::runtime(unsigned char)+0x138>
     a08:	b8 cf       	rjmp	.-144    	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
     a0a:	6c e6       	ldi	r22, 0x6C	; 108
     a0c:	e6 2e       	mov	r14, r22
     a0e:	68 e3       	ldi	r22, 0x38	; 56
     a10:	f6 2e       	mov	r15, r22
     a12:	7c db       	rcall	.-2312   	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:277
    (UPDI::UPDI_LD | UPDI::UPDI_DATA1),
    start_addr, byte_count)) return false;
  do { *p++ = UPDI::RECV(); } while (--byte_count);
     a14:	f7 01       	movw	r30, r14
     a16:	81 93       	st	Z+, r24
     a18:	7f 01       	movw	r14, r30
     a1a:	01 50       	subi	r16, 0x01	; 1
     a1c:	11 09       	sbc	r17, r1
     a1e:	c9 f7       	brne	.-14     	; 0xa12 <UPDI::runtime(unsigned char)+0x140>
     a20:	e0 cf       	rjmp	.-64     	; 0x9e2 <UPDI::runtime(unsigned char)+0x110>
read_memory():
     a22:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:63
  if (byte_count >= 2) {
    switch (mem_type) {
      /* Data 領域 */
      /* これは常に絶対アドレス */
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
     a26:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     a2a:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
     a2e:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
     a32:	48 1b       	sub	r20, r24
     a34:	59 0b       	sbc	r21, r25
     a36:	6a 0b       	sbc	r22, r26
     a38:	7b 0b       	sbc	r23, r27
     a3a:	a7 cf       	rjmp	.-178    	; 0x98a <UPDI::runtime(unsigned char)+0xb8>
     a3c:	80 91 5f 38 	lds	r24, 0x385F	; 0x80385f <NVM::nvm_eeprom_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:73
        return NVM::read_flash(start_addr, byte_count);
      }
      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :          // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA : {  // 0xC4
        start_addr += NVM::nvm_eeprom_offset;
     a40:	90 91 60 38 	lds	r25, 0x3860	; 0x803860 <NVM::nvm_eeprom_offset+0x1>
     a44:	a0 91 61 38 	lds	r26, 0x3861	; 0x803861 <NVM::nvm_eeprom_offset+0x2>
     a48:	b0 91 62 38 	lds	r27, 0x3862	; 0x803862 <NVM::nvm_eeprom_offset+0x3>
     a4c:	48 0f       	add	r20, r24
     a4e:	59 1f       	adc	r21, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:83

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
          return NVM::read_userrow_dummy(byte_count);

        start_addr += NVM::nvm_user_sig_offset;
     a50:	6a 1f       	adc	r22, r26
     a52:	7b 1f       	adc	r23, r27
     a54:	cd cf       	rjmp	.-102    	; 0x9f0 <UPDI::runtime(unsigned char)+0x11e>
     a56:	e5 9b       	sbis	0x1c, 5	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:80
      }
      /* USERROW/USERSIG */
      case JTAG2::MTYPE_USERSIG : {       // 0xC5

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
     a58:	16 c0       	rjmp	.+44     	; 0xa86 <UPDI::runtime(unsigned char)+0x1b4>
read_userrow_dummy():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:286
/*
 * 施錠デバイスの USERROW ダミー応答
 */

bool NVM::read_userrow_dummy (size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     a5a:	c8 01       	movw	r24, r16
     a5c:	01 97       	sbiw	r24, 0x01	; 1
     a5e:	8f 3f       	cpi	r24, 0xFF	; 255
     a60:	91 05       	cpc	r25, r1
     a62:	11 f0       	breq	.+4      	; 0xa68 <UPDI::runtime(unsigned char)+0x196>
     a64:	08 f0       	brcs	.+2      	; 0xa68 <UPDI::runtime(unsigned char)+0x196>
     a66:	89 cf       	rjmp	.-238    	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
     a68:	e3 e6       	ldi	r30, 0x63	; 99
     a6a:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:289
  uint8_t* p = &JTAG2::packet.body[1];
  uint8_t* q = &JTAG2::packet.body[266];
  do { *p++ = *q++; } while (--byte_count);
     a6c:	0d 59       	subi	r16, 0x9D	; 157
     a6e:	17 4c       	sbci	r17, 0xC7	; 199
     a70:	df 01       	movw	r26, r30
     a72:	ae 5e       	subi	r26, 0xEE	; 238
     a74:	be 4f       	sbci	r27, 0xFE	; 254
     a76:	8c 91       	ld	r24, X
     a78:	81 87       	std	Z+9, r24	; 0x09
     a7a:	31 96       	adiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:290
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_URWR_bp);
     a7c:	0e 17       	cp	r16, r30
     a7e:	1f 07       	cpc	r17, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:83

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
          return NVM::read_userrow_dummy(byte_count);

        start_addr += NVM::nvm_user_sig_offset;
     a80:	b9 f7       	brne	.-18     	; 0xa70 <UPDI::runtime(unsigned char)+0x19e>
     a82:	e5 98       	cbi	0x1c, 5	; 28
     a84:	ae cf       	rjmp	.-164    	; 0x9e2 <UPDI::runtime(unsigned char)+0x110>
read_memory():
     a86:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
     a8a:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
     a8e:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:441
      case UPDI::UPDI_CMD_READ_MEMORY : {
        _result = NVM::read_memory();
        break;
      }
      case UPDI::UPDI_CMD_WRITE_MEMORY : {
        if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
     a92:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:443
          /* USERROW だけは非PROG状態でも処理を通す */
          if (JTAG2::packet.body[1] != JTAG2::MTYPE_USERSIG) break;
     a96:	da cf       	rjmp	.-76     	; 0xa4c <UPDI::runtime(unsigned char)+0x17a>
_ZN4UPDI7runtimeEh():
     a98:	e1 99       	sbic	0x1c, 1	; 28
     a9a:	30 c0       	rjmp	.+96     	; 0xafc <UPDI::runtime(unsigned char)+0x22a>
     a9c:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:106
/*
 * メモリ書込中核
 */

bool NVM::write_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     aa0:	85 3c       	cpi	r24, 0xC5	; 197
     aa2:	99 f5       	brne	.+102    	; 0xb0a <UPDI::runtime(unsigned char)+0x238>
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:107
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     aa4:	e3 e6       	ldi	r30, 0x63	; 99
     aa6:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:108
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     aa8:	81 85       	ldd	r24, Z+9	; 0x09
     aaa:	02 85       	ldd	r16, Z+10	; 0x0a
     aac:	13 85       	ldd	r17, Z+11	; 0x0b
     aae:	c6 84       	ldd	r12, Z+14	; 0x0e
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:112
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     ab0:	d7 84       	ldd	r13, Z+15	; 0x0f
     ab2:	e0 88       	ldd	r14, Z+16	; 0x10
     ab4:	f1 88       	ldd	r15, Z+17	; 0x11
     ab6:	02 30       	cpi	r16, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:170
      default : return false;
    }
  }
  else {
    /* ここは 1byte単位書込で通る */
    uint8_t data = JTAG2::packet.body[10];
     ab8:	11 05       	cpc	r17, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:171
    switch (mem_type) {
     aba:	08 f0       	brcs	.+2      	; 0xabe <UPDI::runtime(unsigned char)+0x1ec>
     abc:	39 c0       	rjmp	.+114    	; 0xb30 <UPDI::runtime(unsigned char)+0x25e>
     abe:	b2 88       	ldd	r11, Z+18	; 0x12
     ac0:	82 3b       	cpi	r24, 0xB2	; 178
     ac2:	08 f4       	brcc	.+2      	; 0xac6 <UPDI::runtime(unsigned char)+0x1f4>
     ac4:	4c c0       	rjmp	.+152    	; 0xb5e <UPDI::runtime(unsigned char)+0x28c>
     ac6:	84 3b       	cpi	r24, 0xB4	; 180
     ac8:	08 f4       	brcc	.+2      	; 0xacc <UPDI::runtime(unsigned char)+0x1fa>
     aca:	af c1       	rjmp	.+862    	; 0xe2a <UPDI::runtime(unsigned char)+0x558>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:190
        /* ここは terminal mode の場合のみ通過するはず */
        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     acc:	85 3c       	cpi	r24, 0xC5	; 197
     ace:	09 f0       	breq	.+2      	; 0xad2 <UPDI::runtime(unsigned char)+0x200>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:192
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
     ad0:	46 c0       	rjmp	.+140    	; 0xb5e <UPDI::runtime(unsigned char)+0x28c>
     ad2:	ea 9b       	sbis	0x1d, 2	; 29
     ad4:	2c c2       	rjmp	.+1112   	; 0xf2e <UPDI::runtime(unsigned char)+0x65c>
     ad6:	8c 2d       	mov	r24, r12
     ad8:	9c 2d       	mov	r25, r12
     ada:	9f 73       	andi	r25, 0x3F	; 63
     adc:	09 f0       	breq	.+2      	; 0xae0 <UPDI::runtime(unsigned char)+0x20e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:193
            NVM::nvm_wait_v3();
     ade:	13 c2       	rjmp	.+1062   	; 0xf06 <UPDI::runtime(unsigned char)+0x634>
     ae0:	ff ef       	ldi	r31, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:194
            if (!UPDI::st8(start_addr, 0xFF)) return false;
     ae2:	bf 12       	cpse	r11, r31
     ae4:	10 c2       	rjmp	.+1056   	; 0xf06 <UPDI::runtime(unsigned char)+0x634>
     ae6:	e7 dd       	rcall	.-1074   	; 0x6b6 <NVM::nvm_wait_v3()>
     ae8:	4f ef       	ldi	r20, 0xFF	; 255
     aea:	c7 01       	movw	r24, r14
     aec:	b6 01       	movw	r22, r12
     aee:	a2 db       	rcall	.-2236   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
     af0:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:195
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
     af2:	09 f4       	brne	.+2      	; 0xaf6 <UPDI::runtime(unsigned char)+0x224>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:448
  do {
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW);
     af4:	76 c0       	rjmp	.+236    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     af6:	88 e0       	ldi	r24, 0x08	; 8
write_eeprom_v3():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     af8:	ec dd       	rcall	.-1064   	; 0x6d2 <NVM::nvm_ctrl_v3(unsigned char)>
     afa:	87 c0       	rjmp	.+270    	; 0xc0a <UPDI::runtime(unsigned char)+0x338>
is_sys_stat():
     afc:	61 e0       	ldi	r22, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:446
        if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
          /* USERROW だけは非PROG状態でも処理を通す */
          if (JTAG2::packet.body[1] != JTAG2::MTYPE_USERSIG) break;
        }
        else {
          if (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS)) break;
     afe:	8b e0       	ldi	r24, 0x0B	; 11
     b00:	ea db       	rcall	.-2092   	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:447
          if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
     b02:	81 11       	cpse	r24, r1
     b04:	02 c0       	rjmp	.+4      	; 0xb0a <UPDI::runtime(unsigned char)+0x238>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:465
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
        break;
      }
    }
  }
  TIM::Timeout_Stop();
     b06:	f3 99       	sbic	0x1e, 3	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:466
  UPDI_USART.CTRLB = UPDI_USART_ON;
     b08:	cd cf       	rjmp	.-102    	; 0xaa4 <UPDI::runtime(unsigned char)+0x1d2>
     b0a:	47 dc       	rcall	.-1906   	; 0x39a <TIM::Timeout_Stop()>
     b0c:	88 ec       	ldi	r24, 0xC8	; 200
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:467
  wdt_reset();
     b0e:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6ee2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:469
  return _result;
}
     b12:	a8 95       	wdr
     b14:	8d 81       	ldd	r24, Y+5	; 0x05
     b16:	26 96       	adiw	r28, 0x06	; 6
     b18:	cd bf       	out	0x3d, r28	; 61
     b1a:	de bf       	out	0x3e, r29	; 62
     b1c:	df 91       	pop	r29
     b1e:	cf 91       	pop	r28
     b20:	1f 91       	pop	r17
     b22:	0f 91       	pop	r16
     b24:	ff 90       	pop	r15
     b26:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:113
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     b28:	df 90       	pop	r13
     b2a:	cf 90       	pop	r12
     b2c:	bf 90       	pop	r11
     b2e:	08 95       	ret
write_memory():
     b30:	82 3c       	cpi	r24, 0xC2	; 194
     b32:	08 f0       	brcs	.+2      	; 0xb36 <UPDI::runtime(unsigned char)+0x264>
     b34:	50 c0       	rjmp	.+160    	; 0xbd6 <UPDI::runtime(unsigned char)+0x304>
     b36:	80 3c       	cpi	r24, 0xC0	; 192
     b38:	08 f0       	brcs	.+2      	; 0xb3c <UPDI::runtime(unsigned char)+0x26a>
     b3a:	55 c0       	rjmp	.+170    	; 0xbe6 <UPDI::runtime(unsigned char)+0x314>
     b3c:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:129
      }
      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :        // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA :  // 0xC4
      case JTAG2::MTYPE_LOCK_BITS : {   // 0xB3
        start_addr += NVM::nvm_eeprom_offset;
     b3e:	19 f0       	breq	.+6      	; 0xb46 <UPDI::runtime(unsigned char)+0x274>
     b40:	83 3b       	cpi	r24, 0xB3	; 179
     b42:	09 f0       	breq	.+2      	; 0xb46 <UPDI::runtime(unsigned char)+0x274>
     b44:	4e c0       	rjmp	.+156    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     b46:	80 91 5f 38 	lds	r24, 0x385F	; 0x80385f <NVM::nvm_eeprom_offset>
     b4a:	90 91 60 38 	lds	r25, 0x3860	; 0x803860 <NVM::nvm_eeprom_offset+0x1>
     b4e:	a0 91 61 38 	lds	r26, 0x3861	; 0x803861 <NVM::nvm_eeprom_offset+0x2>
     b52:	b0 91 62 38 	lds	r27, 0x3862	; 0x803862 <NVM::nvm_eeprom_offset+0x3>
     b56:	c8 0e       	add	r12, r24
     b58:	d9 1e       	adc	r13, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:240
        /* megaAVR/tinyAVR is EEPROM */
        /* この系統は EEPROM として実装されている */
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     b5a:	ea 1e       	adc	r14, r26
     b5c:	fb 1e       	adc	r15, r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:430
  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_eeprom_v3 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     b5e:	c8 01       	movw	r24, r16
     b60:	01 97       	sbiw	r24, 0x01	; 1
     b62:	ea 9b       	sbis	0x1d, 2	; 29
     b64:	0b c2       	rjmp	.+1046   	; 0xf7c <UPDI::runtime(unsigned char)+0x6aa>
write_eeprom_v3():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:432

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD)) return false;
     b66:	8f 3f       	cpi	r24, 0xFF	; 255
     b68:	91 05       	cpc	r25, r1
     b6a:	11 f0       	breq	.+4      	; 0xb70 <UPDI::runtime(unsigned char)+0x29e>
     b6c:	08 f0       	brcs	.+2      	; 0xb70 <UPDI::runtime(unsigned char)+0x29e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:435

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     b6e:	39 c0       	rjmp	.+114    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	af dd       	rcall	.-1186   	; 0x6d2 <NVM::nvm_ctrl_v3(unsigned char)>
     b74:	88 23       	and	r24, r24
     b76:	a9 f1       	breq	.+106    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     b78:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     b7c:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:436
  set_repeat[2] = (uint8_t)byte_count - 1;
     b80:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:437
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     b84:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     b88:	8f ef       	ldi	r24, 0xFF	; 255
     b8a:	80 0f       	add	r24, r16
     b8c:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:438
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     b90:	65 e0       	ldi	r22, 0x05	; 5
     b92:	70 e0       	ldi	r23, 0x00	; 0
     b94:	8b e2       	ldi	r24, 0x2B	; 43
     b96:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:439
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     b98:	dd da       	rcall	.-2630   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     b9a:	88 23       	and	r24, r24
     b9c:	11 f1       	breq	.+68     	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     b9e:	b6 da       	rcall	.-2708   	; 0x10c <UPDI::RECV()>
     ba0:	80 34       	cpi	r24, 0x40	; 64
     ba2:	f9 f4       	brne	.+62     	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     ba4:	65 e0       	ldi	r22, 0x05	; 5
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	86 e2       	ldi	r24, 0x26	; 38
     baa:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:444

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     bac:	d3 da       	rcall	.-2650   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     bae:	88 23       	and	r24, r24
     bb0:	c1 f0       	breq	.+48     	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     bb2:	25 e7       	ldi	r18, 0x75	; 117
     bb4:	e2 2e       	mov	r14, r18
     bb6:	28 e3       	ldi	r18, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:445
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     bb8:	f2 2e       	mov	r15, r18
     bba:	f7 01       	movw	r30, r14
     bbc:	81 91       	ld	r24, Z+
     bbe:	7f 01       	movw	r14, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:446
  } while (--byte_count);
     bc0:	b1 da       	rcall	.-2718   	; 0x124 <UPDI::SEND(unsigned char)>
     bc2:	88 23       	and	r24, r24
     bc4:	71 f0       	breq	.+28     	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:448

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW);
     bc6:	a2 da       	rcall	.-2748   	; 0x10c <UPDI::RECV()>
     bc8:	80 34       	cpi	r24, 0x40	; 64
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:113
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     bca:	59 f4       	brne	.+22     	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     bcc:	01 50       	subi	r16, 0x01	; 1
     bce:	11 09       	sbc	r17, r1
     bd0:	a1 f7       	brne	.-24     	; 0xbba <UPDI::runtime(unsigned char)+0x2e8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:165
        }
        /* megaAVR/tinyAVR is EEPROM */
        /* この系統は EEPROM として実装されている */
        break;
      }
      default : return false;
     bd2:	85 e1       	ldi	r24, 0x15	; 21
     bd4:	91 cf       	rjmp	.-222    	; 0xaf8 <UPDI::runtime(unsigned char)+0x226>
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:118
    switch (mem_type) {
      /* Flash 領域 */
      /* 奇数量指定は Data領域絶対アドレス指定になる */
      case JTAG2::MTYPE_XMEGA_FLASH :   // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {  // 0xC1
        start_addr += NVM::nvm_flash_offset;
     bd6:	84 3c       	cpi	r24, 0xC4	; 196
     bd8:	09 f4       	brne	.+2      	; 0xbdc <UPDI::runtime(unsigned char)+0x30a>
     bda:	b5 cf       	rjmp	.-150    	; 0xb46 <UPDI::runtime(unsigned char)+0x274>
     bdc:	85 3c       	cpi	r24, 0xC5	; 197
     bde:	09 f4       	brne	.+2      	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     be0:	68 c0       	rjmp	.+208    	; 0xcb2 <UPDI::runtime(unsigned char)+0x3e0>
_ZN4UPDI7runtimeEh():
     be2:	10 e0       	ldi	r17, 0x00	; 0
     be4:	f3 c0       	rjmp	.+486    	; 0xdcc <UPDI::runtime(unsigned char)+0x4fa>
write_memory():
     be6:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:119
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     bea:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:150
          /* 書く前にページ消去 */
            NVM::nvm_wait_v3();
          if (!UPDI::st8(start_addr, 0xFF)) return false;
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
     bee:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
     bf2:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:425
  do {
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     bf6:	c8 0e       	add	r12, r24
     bf8:	d9 1e       	adc	r13, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:121
      case JTAG2::MTYPE_XMEGA_FLASH :   // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {  // 0xC1
        start_addr += NVM::nvm_flash_offset;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_flash_v3(start_addr, byte_count);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     bfa:	ea 1e       	adc	r14, r26
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:159
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
          /* 書く前にページ消去 */
          if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
          if (!UPDI::st8(start_addr, 0xFF)) return false;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v2(start_addr, byte_count);
     bfc:	fb 1e       	adc	r15, r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:233
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v2(start_addr, byte_count);
     bfe:	ea 9b       	sbis	0x1d, 2	; 29
     c00:	06 c0       	rjmp	.+12     	; 0xc0e <UPDI::runtime(unsigned char)+0x33c>
     c02:	a8 01       	movw	r20, r16
     c04:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:457
 * Flash領域ワード書込
 */

/* NVMCTRL v0 */
bool NVM::write_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
     c06:	b6 01       	movw	r22, r12
     c08:	6a dd       	rcall	.-1324   	; 0x6de <NVM::write_flash_v3(unsigned long, unsigned int)>
write_eeprom_v2():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:458
  if (byte_count == 0 || byte_count > 256) return false;
     c0a:	18 2f       	mov	r17, r24
     c0c:	df c0       	rjmp	.+446    	; 0xdcc <UPDI::runtime(unsigned char)+0x4fa>
write_memory():
     c0e:	e9 9b       	sbis	0x1d, 1	; 29
     c10:	05 c0       	rjmp	.+10     	; 0xc1c <UPDI::runtime(unsigned char)+0x34a>
     c12:	a8 01       	movw	r20, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:462

  /* この系統ではページ消去を書込と同時に行える */
  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
     c14:	c7 01       	movw	r24, r14
     c16:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:463
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
     c18:	ea dd       	rcall	.-1068   	; 0x7ee <NVM::write_flash_v2(unsigned long, unsigned int)>
     c1a:	f7 cf       	rjmp	.-18     	; 0xc0a <UPDI::runtime(unsigned char)+0x338>
write_flash():
     c1c:	16 95       	lsr	r17
     c1e:	07 95       	ror	r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:464
  NVM::nvm_wait();
     c20:	c8 01       	movw	r24, r16
     c22:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:467

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     c24:	8f 3f       	cpi	r24, 0xFF	; 255
     c26:	91 05       	cpc	r25, r1
     c28:	09 f0       	breq	.+2      	; 0xc2c <UPDI::runtime(unsigned char)+0x35a>
     c2a:	d8 f6       	brcc	.-74     	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     c2c:	cc dd       	rcall	.-1128   	; 0x7c6 <NVM::nvm_wait()>
     c2e:	84 e0       	ldi	r24, 0x04	; 4
     c30:	c7 db       	rcall	.-2162   	; 0x3c0 <NVM::nvm_ctrl(unsigned char)>
     c32:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:468
  set_repeat_rsd[5] = byte_count - 1;
     c34:	b1 f2       	breq	.-84     	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     c36:	c7 dd       	rcall	.-1138   	; 0x7c6 <NVM::nvm_wait()>
     c38:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:469
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     c3c:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     c40:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
     c44:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     c48:	8f ef       	ldi	r24, 0xFF	; 255
     c4a:	80 0f       	add	r24, r16
     c4c:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:470
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     c50:	65 e0       	ldi	r22, 0x05	; 5
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:471
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     c56:	98 e3       	ldi	r25, 0x38	; 56
     c58:	7d da       	rcall	.-2822   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c5a:	88 23       	and	r24, r24
     c5c:	09 f4       	brne	.+2      	; 0xc60 <UPDI::runtime(unsigned char)+0x38e>
     c5e:	c1 cf       	rjmp	.-126    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     c60:	55 da       	rcall	.-2902   	; 0x10c <UPDI::RECV()>
     c62:	80 34       	cpi	r24, 0x40	; 64
     c64:	09 f0       	breq	.+2      	; 0xc68 <UPDI::runtime(unsigned char)+0x396>
     c66:	bd cf       	rjmp	.-134    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     c68:	68 e0       	ldi	r22, 0x08	; 8
     c6a:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:476

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     c6c:	8e e1       	ldi	r24, 0x1E	; 30
     c6e:	98 e3       	ldi	r25, 0x38	; 56
     c70:	71 da       	rcall	.-2846   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c72:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:477
    UPDI::SEND(*p++);
     c74:	09 f4       	brne	.+2      	; 0xc78 <UPDI::runtime(unsigned char)+0x3a6>
     c76:	b5 cf       	rjmp	.-150    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     c78:	43 e6       	ldi	r20, 0x63	; 99
     c7a:	e4 2e       	mov	r14, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:478
  } while (--byte_count);
     c7c:	48 e3       	ldi	r20, 0x38	; 56
     c7e:	f4 2e       	mov	r15, r20
     c80:	f7 01       	movw	r30, r14
     c82:	82 89       	ldd	r24, Z+18	; 0x12
     c84:	4f da       	rcall	.-2914   	; 0x124 <UPDI::SEND(unsigned char)>
     c86:	f7 01       	movw	r30, r14
     c88:	83 89       	ldd	r24, Z+19	; 0x13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:482
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     c8a:	4c da       	rcall	.-2920   	; 0x124 <UPDI::SEND(unsigned char)>
     c8c:	01 50       	subi	r16, 0x01	; 1
     c8e:	11 09       	sbc	r17, r1
     c90:	f2 e0       	ldi	r31, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:401
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  /* NVMCTRL write page and complete */
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
     c92:	ef 0e       	add	r14, r31
     c94:	f1 1c       	adc	r15, r1
     c96:	01 15       	cp	r16, r1
     c98:	11 05       	cpc	r17, r1
     c9a:	91 f7       	brne	.-28     	; 0xc80 <UPDI::runtime(unsigned char)+0x3ae>
     c9c:	72 da       	rcall	.-2844   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:402
  return NVM::nvm_wait() == 0;
     c9e:	88 23       	and	r24, r24
     ca0:	09 f4       	brne	.+2      	; 0xca4 <UPDI::runtime(unsigned char)+0x3d2>
     ca2:	9f cf       	rjmp	.-194    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
write_eeprom():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:136
      }
      /* USERROW/USERSIG 領域 */
      case JTAG2::MTYPE_USERSIG : {     // 0xC5

        /* デバイス施錠されている場合 */
        if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp))
     ca4:	83 e0       	ldi	r24, 0x03	; 3
     ca6:	8c db       	rcall	.-2280   	; 0x3c0 <NVM::nvm_ctrl(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:258
/*
 * USERROW/USERSIG 特殊書込準備
 */
bool UPDI::enter_userrow (void) {
  /* send urowwrite_key */
  if (!UPDI::send_bytes(UPDI::urowwrite_key, sizeof(UPDI::urowwrite_key))) return false;
     ca8:	88 23       	and	r24, r24
     caa:	09 f4       	brne	.+2      	; 0xcae <UPDI::runtime(unsigned char)+0x3dc>
     cac:	9a cf       	rjmp	.-204    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     cae:	8b dd       	rcall	.-1258   	; 0x7c6 <NVM::nvm_wait()>
     cb0:	25 c1       	rjmp	.+586    	; 0xefc <UPDI::runtime(unsigned char)+0x62a>
write_memory():
     cb2:	e1 99       	sbic	0x1c, 1	; 28
     cb4:	8d c0       	rjmp	.+282    	; 0xdd0 <UPDI::runtime(unsigned char)+0x4fe>
enter_userrow():
     cb6:	6a e0       	ldi	r22, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:260
  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	80 e1       	ldi	r24, 0x10	; 16
     cbc:	99 e9       	ldi	r25, 0x99	; 153
     cbe:	4a da       	rcall	.-2924   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     cc0:	88 23       	and	r24, r24
     cc2:	09 f4       	brne	.+2      	; 0xcc6 <UPDI::runtime(unsigned char)+0x3f4>
     cc4:	8e cf       	rjmp	.-228    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	a9 da       	rcall	.-2734   	; 0x21c <UPDI::updi_reset(bool)>
     cca:	88 23       	and	r24, r24
     ccc:	09 f4       	brne	.+2      	; 0xcd0 <UPDI::runtime(unsigned char)+0x3fe>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     cce:	89 cf       	rjmp	.-238    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     cd0:	80 e0       	ldi	r24, 0x00	; 0
     cd2:	a4 da       	rcall	.-2744   	; 0x21c <UPDI::updi_reset(bool)>
     cd4:	88 23       	and	r24, r24
     cd6:	09 f4       	brne	.+2      	; 0xcda <UPDI::runtime(unsigned char)+0x408>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     cd8:	84 cf       	rjmp	.-248    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
delay_micros():
     cda:	89 ef       	ldi	r24, 0xF9	; 249
     cdc:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:261
bool UPDI::enter_userrow (void) {
  /* send urowwrite_key */
  if (!UPDI::send_bytes(UPDI::urowwrite_key, sizeof(UPDI::urowwrite_key))) return false;
  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
  do{ delay_micros(100); } while (!UPDI::is_sys_stat(UPDI::UPDI_SYS_UROWPROG));
     cde:	01 97       	sbiw	r24, 0x01	; 1
     ce0:	f1 f7       	brne	.-4      	; 0xcde <UPDI::runtime(unsigned char)+0x40c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:572

bool NVM::write_userrow (size_t byte_count) {
  if (!UPDI::enter_userrow()) return false;

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = NVM::nvm_data_offset;
     ce2:	00 c0       	rjmp	.+0      	; 0xce4 <UPDI::runtime(unsigned char)+0x412>
     ce4:	00 00       	nop
is_sys_stat():
     ce6:	64 e0       	ldi	r22, 0x04	; 4
     ce8:	8b e0       	ldi	r24, 0x0B	; 11
     cea:	f5 da       	rcall	.-2582   	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
enter_userrow():
     cec:	88 23       	and	r24, r24
     cee:	a9 f3       	breq	.-22     	; 0xcda <UPDI::runtime(unsigned char)+0x408>
write_userrow():
     cf0:	80 91 57 38 	lds	r24, 0x3857	; 0x803857 <NVM::nvm_data_offset>
     cf4:	90 91 58 38 	lds	r25, 0x3858	; 0x803858 <NVM::nvm_data_offset+0x1>
     cf8:	a0 91 59 38 	lds	r26, 0x3859	; 0x803859 <NVM::nvm_data_offset+0x2>
     cfc:	b0 91 5a 38 	lds	r27, 0x385A	; 0x80385a <NVM::nvm_data_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:573
  set_repeat[2] = (uint8_t)byte_count - 1;
     d00:	80 93 2d 38 	sts	0x382D, r24	; 0x80382d <NVM::set_ptr+0x2>
     d04:	90 93 2e 38 	sts	0x382E, r25	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:574
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     d08:	a0 93 2f 38 	sts	0x382F, r26	; 0x80382f <NVM::set_ptr+0x4>
     d0c:	b0 93 30 38 	sts	0x3830, r27	; 0x803830 <NVM::set_ptr+0x5>
     d10:	8f ef       	ldi	r24, 0xFF	; 255
     d12:	80 0f       	add	r24, r16
     d14:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:575
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     d18:	65 e0       	ldi	r22, 0x05	; 5
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:576
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     d1e:	98 e3       	ldi	r25, 0x38	; 56
     d20:	19 da       	rcall	.-3022   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     d22:	88 23       	and	r24, r24
     d24:	09 f4       	brne	.+2      	; 0xd28 <UPDI::runtime(unsigned char)+0x456>
     d26:	5d cf       	rjmp	.-326    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     d28:	f1 d9       	rcall	.-3102   	; 0x10c <UPDI::RECV()>
     d2a:	80 34       	cpi	r24, 0x40	; 64
     d2c:	09 f0       	breq	.+2      	; 0xd30 <UPDI::runtime(unsigned char)+0x45e>
     d2e:	59 cf       	rjmp	.-334    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     d30:	65 e0       	ldi	r22, 0x05	; 5
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	86 e2       	ldi	r24, 0x26	; 38
     d36:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:582

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  uint8_t* q = &JTAG2::packet.body[266];
  do {
    *q++ = *p;
     d38:	0d da       	rcall	.-3046   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     d3a:	88 23       	and	r24, r24
     d3c:	09 f4       	brne	.+2      	; 0xd40 <UPDI::runtime(unsigned char)+0x46e>
     d3e:	51 cf       	rjmp	.-350    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     d40:	33 e6       	ldi	r19, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:583
    if (!UPDI::SEND(*p++)) return false;
     d42:	e3 2e       	mov	r14, r19
     d44:	38 e3       	ldi	r19, 0x38	; 56
     d46:	f3 2e       	mov	r15, r19
     d48:	0d 59       	subi	r16, 0x9D	; 157
     d4a:	17 4c       	sbci	r17, 0xC7	; 199
     d4c:	f7 01       	movw	r30, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:584
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     d4e:	82 89       	ldd	r24, Z+18	; 0x12
     d50:	ee 5e       	subi	r30, 0xEE	; 238
     d52:	fe 4f       	sbci	r31, 0xFE	; 254
     d54:	80 83       	st	Z, r24
     d56:	f7 01       	movw	r30, r14
     d58:	82 89       	ldd	r24, Z+18	; 0x12
     d5a:	e4 d9       	rcall	.-3128   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:585
  } while (--byte_count);
     d5c:	88 23       	and	r24, r24
     d5e:	09 f4       	brne	.+2      	; 0xd62 <UPDI::runtime(unsigned char)+0x490>
     d60:	40 cf       	rjmp	.-384    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     d62:	d4 d9       	rcall	.-3160   	; 0x10c <UPDI::RECV()>
     d64:	80 34       	cpi	r24, 0x40	; 64
     d66:	09 f0       	breq	.+2      	; 0xd6a <UPDI::runtime(unsigned char)+0x498>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     d68:	3c cf       	rjmp	.-392    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     d6a:	ff ef       	ldi	r31, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     d6c:	ef 1a       	sub	r14, r31
     d6e:	ff 0a       	sbc	r15, r31
     d70:	0e 15       	cp	r16, r14
     d72:	1f 05       	cpc	r17, r15
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     d74:	59 f7       	brne	.-42     	; 0xd4c <UPDI::runtime(unsigned char)+0x47a>
set_cs_stat():
     d76:	e5 e3       	ldi	r30, 0x35	; 53
     d78:	f8 e3       	ldi	r31, 0x38	; 56
     d7a:	8a ec       	ldi	r24, 0xCA	; 202
     d7c:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     d7e:	82 e0       	ldi	r24, 0x02	; 2
     d80:	82 83       	std	Z+2, r24	; 0x02
     d82:	63 e0       	ldi	r22, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:588

  UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_SYS_CTRLA, UPDI::UPDI_SET_UROWDONE);
  do{ delay_micros(100); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_UROWPROG));
     d84:	70 e0       	ldi	r23, 0x00	; 0
     d86:	cf 01       	movw	r24, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     d88:	e5 d9       	rcall	.-3126   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
delay_micros():
     d8a:	89 ef       	ldi	r24, 0xF9	; 249
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     d90:	f1 f7       	brne	.-4      	; 0xd8e <UPDI::runtime(unsigned char)+0x4bc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     d92:	00 c0       	rjmp	.+0      	; 0xd94 <UPDI::runtime(unsigned char)+0x4c2>
     d94:	00 00       	nop
is_sys_stat():
     d96:	64 e0       	ldi	r22, 0x04	; 4
     d98:	8b e0       	ldi	r24, 0x0B	; 11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:590
  UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, UPDI::UPDI_KEY_UROWWRITE);
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     d9a:	9d da       	rcall	.-2758   	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
write_userrow():
     d9c:	81 11       	cpse	r24, r1
     d9e:	f5 cf       	rjmp	.-22     	; 0xd8a <UPDI::runtime(unsigned char)+0x4b8>
set_cs_stat():
     da0:	e5 e3       	ldi	r30, 0x35	; 53
     da2:	f8 e3       	ldi	r31, 0x38	; 56
     da4:	87 ec       	ldi	r24, 0xC7	; 199
     da6:	81 83       	std	Z+1, r24	; 0x01
     da8:	80 e2       	ldi	r24, 0x20	; 32
     daa:	82 83       	std	Z+2, r24	; 0x02
     dac:	63 e0       	ldi	r22, 0x03	; 3
     dae:	70 e0       	ldi	r23, 0x00	; 0
     db0:	cf 01       	movw	r24, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:591
  UPDI_CONTROL |= _BV(UPDI::UPDI_URWR_bp);
     db2:	d0 d9       	rcall	.-3168   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
write_userrow():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:449
        }
        else {
          if (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS)) break;
          if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
        }
        _result = NVM::write_memory();
     db4:	81 e0       	ldi	r24, 0x01	; 1
     db6:	32 da       	rcall	.-2972   	; 0x21c <UPDI::updi_reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:139

        /* デバイス施錠されている場合 */
        if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp))
          return NVM::write_userrow(byte_count);

        start_addr += NVM::nvm_user_sig_offset;
     db8:	88 23       	and	r24, r24
     dba:	09 f4       	brne	.+2      	; 0xdbe <UPDI::runtime(unsigned char)+0x4ec>
     dbc:	12 cf       	rjmp	.-476    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	2d da       	rcall	.-2982   	; 0x21c <UPDI::updi_reset(bool)>
     dc2:	18 2f       	mov	r17, r24
     dc4:	88 23       	and	r24, r24
     dc6:	09 f4       	brne	.+2      	; 0xdca <UPDI::runtime(unsigned char)+0x4f8>
     dc8:	0c cf       	rjmp	.-488    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     dca:	e5 9a       	sbi	0x1c, 5	; 28
_ZN4UPDI7runtimeEh():
     dcc:	1d 83       	std	Y+5, r17	; 0x05
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:144
        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     dce:	9d ce       	rjmp	.-710    	; 0xb0a <UPDI::runtime(unsigned char)+0x238>
write_memory():
     dd0:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:146
          /* 書く前にページ消去 */
            NVM::nvm_wait_v3();
     dd4:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:147
          if (!UPDI::st8(start_addr, 0xFF)) return false;
     dd8:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
     ddc:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
     de0:	c8 0e       	add	r12, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:148
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
     de2:	d9 1e       	adc	r13, r25
     de4:	ea 1e       	adc	r14, r26
     de6:	fb 1e       	adc	r15, r27
     de8:	ea 9b       	sbis	0x1d, 2	; 29
     dea:	0f c0       	rjmp	.+30     	; 0xe0a <UPDI::runtime(unsigned char)+0x538>
     dec:	64 dc       	rcall	.-1848   	; 0x6b6 <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:149
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     dee:	4f ef       	ldi	r20, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:154
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     df0:	c7 01       	movw	r24, r14
     df2:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:156
          /* 書く前にページ消去 */
          if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     df4:	1f da       	rcall	.-3010   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
     df6:	88 23       	and	r24, r24
     df8:	09 f4       	brne	.+2      	; 0xdfc <UPDI::runtime(unsigned char)+0x52a>
     dfa:	f3 ce       	rjmp	.-538    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     dfc:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:157
          if (!UPDI::st8(start_addr, 0xFF)) return false;
     dfe:	69 dc       	rcall	.-1838   	; 0x6d2 <NVM::nvm_ctrl_v3(unsigned char)>
     e00:	88 23       	and	r24, r24
     e02:	09 f4       	brne	.+2      	; 0xe06 <UPDI::runtime(unsigned char)+0x534>
     e04:	ee ce       	rjmp	.-548    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     e06:	e2 9a       	sbi	0x1c, 2	; 28
     e08:	fc ce       	rjmp	.-520    	; 0xc02 <UPDI::runtime(unsigned char)+0x330>
     e0a:	e9 9b       	sbis	0x1d, 1	; 29
     e0c:	a8 ce       	rjmp	.-688    	; 0xb5e <UPDI::runtime(unsigned char)+0x28c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:158
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     e0e:	88 e0       	ldi	r24, 0x08	; 8
     e10:	e8 dc       	rcall	.-1584   	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:176
    switch (mem_type) {
      /* FUSES/LOCKBITS 領域 */
      /* 常に奇数量絶対アドレス指定の特殊書込 */
      case JTAG2::MTYPE_LOCK_BITS :     // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {   // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
     e12:	88 23       	and	r24, r24
     e14:	09 f4       	brne	.+2      	; 0xe18 <UPDI::runtime(unsigned char)+0x546>
     e16:	e5 ce       	rjmp	.-566    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     e18:	4f ef       	ldi	r20, 0xFF	; 255
     e1a:	c7 01       	movw	r24, r14
     e1c:	b6 01       	movw	r22, r12
     e1e:	0a da       	rcall	.-3052   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
     e20:	88 23       	and	r24, r24
     e22:	09 f4       	brne	.+2      	; 0xe26 <UPDI::runtime(unsigned char)+0x554>
     e24:	de ce       	rjmp	.-580    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:177
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     e26:	e2 9a       	sbi	0x1c, 2	; 28
     e28:	f4 ce       	rjmp	.-536    	; 0xc12 <UPDI::runtime(unsigned char)+0x340>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:366
  return _r;
}

/* NVMCTRL v3 */
bool NVM::write_fuse_v3 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     e2a:	c7 01       	movw	r24, r14
     e2c:	b6 01       	movw	r22, r12
     e2e:	69 da       	rcall	.-2862   	; 0x302 <UPDI::ld8(unsigned long)>
     e30:	b8 12       	cpse	r11, r24
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <UPDI::runtime(unsigned char)+0x56a>
     e34:	8f b3       	in	r24, 0x1f	; 31
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:367
  if (!UPDI::st8(addr, data)) return false;
     e36:	11 e0       	ldi	r17, 0x01	; 1
write_memory():
     e38:	88 23       	and	r24, r24
     e3a:	41 f2       	breq	.-112    	; 0xdcc <UPDI::runtime(unsigned char)+0x4fa>
     e3c:	ea 9b       	sbis	0x1d, 2	; 29
     e3e:	18 c0       	rjmp	.+48     	; 0xe70 <UPDI::runtime(unsigned char)+0x59e>
write_fuse_v3():
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	cf dc       	rcall	.-1634   	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     e44:	88 23       	and	r24, r24
     e46:	09 f4       	brne	.+2      	; 0xe4a <UPDI::runtime(unsigned char)+0x578>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:368
  bool _r = (NVM::nvm_wait_v3() & 0x70) == 0;
     e48:	cc ce       	rjmp	.-616    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     e4a:	c7 01       	movw	r24, r14
     e4c:	b6 01       	movw	r22, r12
     e4e:	88 27       	eor	r24, r24
     e50:	99 27       	eor	r25, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:369
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW)) return false;
     e52:	4b 2d       	mov	r20, r11
     e54:	ef d9       	rcall	.-3106   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
     e56:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:360
/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
  if (!UPDI::st8(addr, data)) return false;
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     e58:	09 f4       	brne	.+2      	; 0xe5c <UPDI::runtime(unsigned char)+0x58a>
     e5a:	c3 ce       	rjmp	.-634    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     e5c:	2c dc       	rcall	.-1960   	; 0x6b6 <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:179
      case JTAG2::MTYPE_LOCK_BITS :     // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {   // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     e5e:	80 77       	andi	r24, 0x70	; 112
     e60:	11 e0       	ldi	r17, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:357
  return ((NVM::nvm_wait() & 7) == 0);
}

/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
     e62:	09 f0       	breq	.+2      	; 0xe66 <UPDI::runtime(unsigned char)+0x594>
     e64:	10 e0       	ldi	r17, 0x00	; 0
     e66:	85 e1       	ldi	r24, 0x15	; 21
     e68:	34 dc       	rcall	.-1944   	; 0x6d2 <NVM::nvm_ctrl_v3(unsigned char)>
write_fuse_v2():
     e6a:	81 11       	cpse	r24, r1
     e6c:	af cf       	rjmp	.-162    	; 0xdcc <UPDI::runtime(unsigned char)+0x4fa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:358
  if (!UPDI::st8(addr, data)) return false;
     e6e:	b9 ce       	rjmp	.-654    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
write_memory():
     e70:	e9 9b       	sbis	0x1d, 1	; 29
     e72:	16 c0       	rjmp	.+44     	; 0xea0 <UPDI::runtime(unsigned char)+0x5ce>
write_fuse_v2():
     e74:	83 e1       	ldi	r24, 0x13	; 19
     e76:	b5 dc       	rcall	.-1686   	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     e78:	88 23       	and	r24, r24
     e7a:	09 f4       	brne	.+2      	; 0xe7e <UPDI::runtime(unsigned char)+0x5ac>
     e7c:	b2 ce       	rjmp	.-668    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     e7e:	c7 01       	movw	r24, r14
     e80:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:359
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
     e82:	88 27       	eor	r24, r24
     e84:	99 27       	eor	r25, r25
     e86:	4b 2d       	mov	r20, r11
     e88:	d5 d9       	rcall	.-3158   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
     e8a:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:360
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     e8c:	09 f4       	brne	.+2      	; 0xe90 <UPDI::runtime(unsigned char)+0x5be>
     e8e:	a9 ce       	rjmp	.-686    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     e90:	9a dc       	rcall	.-1740   	; 0x7c6 <NVM::nvm_wait()>
     e92:	80 77       	andi	r24, 0x70	; 112
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:346
 */

/* NVMCTRL v0 */
bool NVM::write_fuse (uint16_t addr, uint8_t data) {
  fuse_packet_t fuse_packet;
  fuse_packet.data = data;
     e94:	11 e0       	ldi	r17, 0x01	; 1
     e96:	09 f0       	breq	.+2      	; 0xe9a <UPDI::runtime(unsigned char)+0x5c8>
     e98:	10 e0       	ldi	r17, 0x00	; 0
     e9a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:181
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
          return NVM::write_fuse_v2(start_addr, data);
        return NVM::write_fuse(start_addr, data);
     e9c:	a2 dc       	rcall	.-1724   	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     e9e:	e5 cf       	rjmp	.-54     	; 0xe6a <UPDI::runtime(unsigned char)+0x598>
write_fuse():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:348
/* NVMCTRL v0 */
bool NVM::write_fuse (uint16_t addr, uint8_t data) {
  fuse_packet_t fuse_packet;
  fuse_packet.data = data;
  fuse_packet.addr = addr;
  NVM::nvm_wait();
     ea0:	4b 2d       	mov	r20, r11
     ea2:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:165
/*
 * 複バイト送信
 */

bool UPDI::sts8 (uint32_t addr, uint8_t *data, size_t len) {
  if (UPDI::send_repeat_header((UPDI::UPDI_ST | UPDI::UPDI_DATA1), addr, len)) {
     ea4:	49 83       	std	Y+1, r20	; 0x01
     ea6:	5a 83       	std	Y+2, r21	; 0x02
write_memory():
     ea8:	cb 82       	std	Y+3, r12	; 0x03
     eaa:	dc 82       	std	Y+4, r13	; 0x04
write_fuse():
     eac:	8c dc       	rcall	.-1768   	; 0x7c6 <NVM::nvm_wait()>
sts8():
     eae:	24 e0       	ldi	r18, 0x04	; 4
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	46 e0       	ldi	r20, 0x06	; 6
     eb4:	50 e1       	ldi	r21, 0x10	; 16
     eb6:	60 e0       	ldi	r22, 0x00	; 0
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	80 e6       	ldi	r24, 0x60	; 96
     ebc:	dc d9       	rcall	.-3144   	; 0x276 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     ebe:	88 23       	and	r24, r24
     ec0:	09 f4       	brne	.+2      	; 0xec4 <UPDI::runtime(unsigned char)+0x5f2>
     ec2:	8f ce       	rjmp	.-738    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:167
    do {
      if (!UPDI::SEND(*data++)) break;
     ec4:	8e 01       	movw	r16, r28
     ec6:	0f 5f       	subi	r16, 0xFF	; 255
     ec8:	1f 4f       	sbci	r17, 0xFF	; 255
     eca:	7e 01       	movw	r14, r28
     ecc:	95 e0       	ldi	r25, 0x05	; 5
     ece:	e9 0e       	add	r14, r25
     ed0:	f1 1c       	adc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:168
      if (UPDI::UPDI_ACK != RECV()) break;
     ed2:	f8 01       	movw	r30, r16
     ed4:	81 91       	ld	r24, Z+
     ed6:	8f 01       	movw	r16, r30
     ed8:	25 d9       	rcall	.-3510   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:169
    } while (--len);
     eda:	88 23       	and	r24, r24
     edc:	09 f4       	brne	.+2      	; 0xee0 <UPDI::runtime(unsigned char)+0x60e>
     ede:	81 ce       	rjmp	.-766    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:351
  if (!UPDI::sts8(NVM::NVMCTRL_REG_DATA,
    (uint8_t*)&fuse_packet, sizeof(fuse_packet))) return false;
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_WFU)) return false;
     ee0:	15 d9       	rcall	.-3542   	; 0x10c <UPDI::RECV()>
     ee2:	80 34       	cpi	r24, 0x40	; 64
     ee4:	09 f0       	breq	.+2      	; 0xee8 <UPDI::runtime(unsigned char)+0x616>
     ee6:	7d ce       	rjmp	.-774    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     ee8:	e0 16       	cp	r14, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:352
  return ((NVM::nvm_wait() & 7) == 0);
     eea:	f1 06       	cpc	r15, r17
     eec:	91 f7       	brne	.-28     	; 0xed2 <UPDI::runtime(unsigned char)+0x600>
write_fuse():
     eee:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:402
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  /* NVMCTRL write page and complete */
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
  return NVM::nvm_wait() == 0;
     ef0:	67 da       	rcall	.-2866   	; 0x3c0 <NVM::nvm_ctrl(unsigned char)>
     ef2:	88 23       	and	r24, r24
     ef4:	09 f4       	brne	.+2      	; 0xef8 <UPDI::runtime(unsigned char)+0x626>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:200
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
     ef6:	75 ce       	rjmp	.-790    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:201
            JTAG2::packet.body[11] = data;
     ef8:	66 dc       	rcall	.-1844   	; 0x7c6 <NVM::nvm_wait()>
     efa:	87 70       	andi	r24, 0x07	; 7
write_eeprom():
     efc:	11 e0       	ldi	r17, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:202
            JTAG2::packet.body[10] = 0xFF;
     efe:	88 23       	and	r24, r24
     f00:	09 f4       	brne	.+2      	; 0xf04 <UPDI::runtime(unsigned char)+0x632>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:203
            (uint8_t)start_addr--;
     f02:	64 cf       	rjmp	.-312    	; 0xdcc <UPDI::runtime(unsigned char)+0x4fa>
     f04:	6e ce       	rjmp	.-804    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
write_memory():
     f06:	80 ff       	sbrs	r24, 0
     f08:	0e c0       	rjmp	.+28     	; 0xf26 <UPDI::runtime(unsigned char)+0x654>
     f0a:	e3 e6       	ldi	r30, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:209
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     f0c:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:210
          return NVM::write_flash_v3(start_addr, byte_count);
     f0e:	b3 8a       	std	Z+19, r11	; 0x13
     f10:	8f ef       	ldi	r24, 0xFF	; 255
     f12:	82 8b       	std	Z+18, r24	; 0x12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:206
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
     f14:	81 e0       	ldi	r24, 0x01	; 1
     f16:	c8 1a       	sub	r12, r24
     f18:	d1 08       	sbc	r13, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:214
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     f1a:	e1 08       	sbc	r14, r1
     f1c:	f1 08       	sbc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:216
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
     f1e:	e2 9a       	sbi	0x1c, 2	; 28
     f20:	42 e0       	ldi	r20, 0x02	; 2
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	6f ce       	rjmp	.-802    	; 0xc04 <UPDI::runtime(unsigned char)+0x332>
     f26:	8f ef       	ldi	r24, 0xFF	; 255
     f28:	80 93 76 38 	sts	0x3876, r24	; 0x803876 <JTAG2::packet+0x13>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:217
            if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     f2c:	f8 cf       	rjmp	.-16     	; 0xf1e <UPDI::runtime(unsigned char)+0x64c>
     f2e:	e9 9b       	sbis	0x1d, 1	; 29
     f30:	16 ce       	rjmp	.-980    	; 0xb5e <UPDI::runtime(unsigned char)+0x28c>
     f32:	8c 2d       	mov	r24, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:218
            if (!UPDI::st8(start_addr, 0xFF)) return false;
     f34:	9c 2d       	mov	r25, r12
     f36:	9f 73       	andi	r25, 0x3F	; 63
     f38:	69 f4       	brne	.+26     	; 0xf54 <UPDI::runtime(unsigned char)+0x682>
     f3a:	9f ef       	ldi	r25, 0xFF	; 255
     f3c:	b9 12       	cpse	r11, r25
     f3e:	0a c0       	rjmp	.+20     	; 0xf54 <UPDI::runtime(unsigned char)+0x682>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:223
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
     f40:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:224
            JTAG2::packet.body[11] = data;
     f42:	4f dc       	rcall	.-1890   	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     f44:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:225
            JTAG2::packet.body[10] = 0xFF;
     f46:	09 f4       	brne	.+2      	; 0xf4a <UPDI::runtime(unsigned char)+0x678>
     f48:	4c ce       	rjmp	.-872    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:226
            (uint8_t)start_addr--;
     f4a:	4f ef       	ldi	r20, 0xFF	; 255
     f4c:	c7 01       	movw	r24, r14
     f4e:	b6 01       	movw	r22, r12
     f50:	71 d9       	rcall	.-3358   	; 0x234 <UPDI::st8(unsigned long, unsigned char)>
     f52:	5b ce       	rjmp	.-842    	; 0xc0a <UPDI::runtime(unsigned char)+0x338>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:232
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     f54:	80 ff       	sbrs	r24, 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:233
          return NVM::write_flash_v2(start_addr, byte_count);
     f56:	0e c0       	rjmp	.+28     	; 0xf74 <UPDI::runtime(unsigned char)+0x6a2>
     f58:	e3 e6       	ldi	r30, 0x63	; 99
     f5a:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:229
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
     f5c:	b3 8a       	std	Z+19, r11	; 0x13
     f5e:	8f ef       	ldi	r24, 0xFF	; 255
     f60:	82 8b       	std	Z+18, r24	; 0x12
     f62:	e1 e0       	ldi	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:242
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
    return NVM::write_eeprom_v3(start_addr, byte_count);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     f64:	ce 1a       	sub	r12, r30
     f66:	d1 08       	sbc	r13, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:407
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_eeprom_v2 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     f68:	e1 08       	sbc	r14, r1
     f6a:	f1 08       	sbc	r15, r1
     f6c:	e2 9a       	sbi	0x1c, 2	; 28
     f6e:	42 e0       	ldi	r20, 0x02	; 2
     f70:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:409

  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
     f72:	50 ce       	rjmp	.-864    	; 0xc14 <UPDI::runtime(unsigned char)+0x342>
     f74:	8f ef       	ldi	r24, 0xFF	; 255
     f76:	80 93 76 38 	sts	0x3876, r24	; 0x803876 <JTAG2::packet+0x13>
     f7a:	f8 cf       	rjmp	.-16     	; 0xf6c <UPDI::runtime(unsigned char)+0x69a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:412

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     f7c:	e9 9b       	sbis	0x1d, 1	; 29
     f7e:	3f c0       	rjmp	.+126    	; 0xffe <UPDI::runtime(unsigned char)+0x72c>
write_eeprom_v2():
     f80:	8f 3f       	cpi	r24, 0xFF	; 255
     f82:	91 05       	cpc	r25, r1
     f84:	11 f0       	breq	.+4      	; 0xf8a <UPDI::runtime(unsigned char)+0x6b8>
     f86:	08 f0       	brcs	.+2      	; 0xf8a <UPDI::runtime(unsigned char)+0x6b8>
     f88:	2c ce       	rjmp	.-936    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:413
  set_repeat[2] = (uint8_t)byte_count - 1;
     f8a:	83 e1       	ldi	r24, 0x13	; 19
     f8c:	2a dc       	rcall	.-1964   	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
     f8e:	88 23       	and	r24, r24
     f90:	09 f4       	brne	.+2      	; 0xf94 <UPDI::runtime(unsigned char)+0x6c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:414
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     f92:	27 ce       	rjmp	.-946    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     f94:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     f98:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     f9c:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:415
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     fa0:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     fa4:	8f ef       	ldi	r24, 0xFF	; 255
     fa6:	80 0f       	add	r24, r16
     fa8:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:416
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     fac:	65 e0       	ldi	r22, 0x05	; 5
     fae:	70 e0       	ldi	r23, 0x00	; 0
     fb0:	8b e2       	ldi	r24, 0x2B	; 43
     fb2:	98 e3       	ldi	r25, 0x38	; 56
     fb4:	cf d8       	rcall	.-3682   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     fb6:	88 23       	and	r24, r24
     fb8:	09 f4       	brne	.+2      	; 0xfbc <UPDI::runtime(unsigned char)+0x6ea>
     fba:	13 ce       	rjmp	.-986    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     fbc:	a7 d8       	rcall	.-3762   	; 0x10c <UPDI::RECV()>
     fbe:	80 34       	cpi	r24, 0x40	; 64
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <UPDI::runtime(unsigned char)+0x6f2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:421

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     fc2:	0f ce       	rjmp	.-994    	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     fc4:	65 e0       	ldi	r22, 0x05	; 5
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	86 e2       	ldi	r24, 0x26	; 38
     fca:	98 e3       	ldi	r25, 0x38	; 56
     fcc:	c3 d8       	rcall	.-3706   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:422
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     fce:	88 23       	and	r24, r24
     fd0:	09 f4       	brne	.+2      	; 0xfd4 <UPDI::runtime(unsigned char)+0x702>
     fd2:	07 ce       	rjmp	.-1010   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     fd4:	95 e7       	ldi	r25, 0x75	; 117
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:423
  } while (--byte_count);
     fd6:	e9 2e       	mov	r14, r25
     fd8:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:425

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     fda:	f9 2e       	mov	r15, r25
     fdc:	f7 01       	movw	r30, r14
     fde:	81 91       	ld	r24, Z+
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:379
 * EEPROM領域バイト書込
 */

/* NVMCTRL v0 */
bool NVM::write_eeprom (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     fe0:	7f 01       	movw	r14, r30
     fe2:	a0 d8       	rcall	.-3776   	; 0x124 <UPDI::SEND(unsigned char)>
     fe4:	88 23       	and	r24, r24
     fe6:	09 f4       	brne	.+2      	; 0xfea <UPDI::runtime(unsigned char)+0x718>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:382

  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
     fe8:	fc cd       	rjmp	.-1032   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     fea:	90 d8       	rcall	.-3808   	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:383
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
     fec:	80 34       	cpi	r24, 0x40	; 64
     fee:	09 f0       	breq	.+2      	; 0xff2 <UPDI::runtime(unsigned char)+0x720>
     ff0:	f8 cd       	rjmp	.-1040   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
     ff2:	01 50       	subi	r16, 0x01	; 1
     ff4:	11 09       	sbc	r17, r1
     ff6:	91 f7       	brne	.-28     	; 0xfdc <UPDI::runtime(unsigned char)+0x70a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:384
  NVM::nvm_wait();
     ff8:	80 e0       	ldi	r24, 0x00	; 0
     ffa:	f3 db       	rcall	.-2074   	; 0x7e2 <NVM::nvm_ctrl_v2(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:387

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     ffc:	06 ce       	rjmp	.-1012   	; 0xc0a <UPDI::runtime(unsigned char)+0x338>
write_eeprom():
     ffe:	8f 3f       	cpi	r24, 0xFF	; 255
    1000:	91 05       	cpc	r25, r1
    1002:	11 f0       	breq	.+4      	; 0x1008 <UPDI::runtime(unsigned char)+0x736>
    1004:	08 f0       	brcs	.+2      	; 0x1008 <UPDI::runtime(unsigned char)+0x736>
    1006:	ed cd       	rjmp	.-1062   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
    1008:	de db       	rcall	.-2116   	; 0x7c6 <NVM::nvm_wait()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:388
  set_repeat[2] = (uint8_t)byte_count - 1;
    100a:	84 e0       	ldi	r24, 0x04	; 4
    100c:	d9 d9       	rcall	.-3150   	; 0x3c0 <NVM::nvm_ctrl(unsigned char)>
    100e:	88 23       	and	r24, r24
    1010:	09 f4       	brne	.+2      	; 0x1014 <UPDI::runtime(unsigned char)+0x742>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:389
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
    1012:	e7 cd       	rjmp	.-1074   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
    1014:	d8 db       	rcall	.-2128   	; 0x7c6 <NVM::nvm_wait()>
    1016:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
    101a:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
    101e:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
    1022:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:390
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
    1026:	8f ef       	ldi	r24, 0xFF	; 255
    1028:	80 0f       	add	r24, r16
    102a:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:391
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
    102e:	65 e0       	ldi	r22, 0x05	; 5
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	8b e2       	ldi	r24, 0x2B	; 43
    1034:	98 e3       	ldi	r25, 0x38	; 56
    1036:	8e d8       	rcall	.-3812   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    1038:	88 23       	and	r24, r24
    103a:	09 f4       	brne	.+2      	; 0x103e <UPDI::runtime(unsigned char)+0x76c>
    103c:	d2 cd       	rjmp	.-1116   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
    103e:	66 d8       	rcall	.-3892   	; 0x10c <UPDI::RECV()>
    1040:	80 34       	cpi	r24, 0x40	; 64
    1042:	09 f0       	breq	.+2      	; 0x1046 <UPDI::runtime(unsigned char)+0x774>
    1044:	ce cd       	rjmp	.-1124   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
    1046:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:396

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
    1048:	70 e0       	ldi	r23, 0x00	; 0
    104a:	86 e2       	ldi	r24, 0x26	; 38
    104c:	98 e3       	ldi	r25, 0x38	; 56
    104e:	82 d8       	rcall	.-3836   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    1050:	88 23       	and	r24, r24
    1052:	09 f4       	brne	.+2      	; 0x1056 <UPDI::runtime(unsigned char)+0x784>
    1054:	c6 cd       	rjmp	.-1140   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:397
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
    1056:	85 e7       	ldi	r24, 0x75	; 117
    1058:	e8 2e       	mov	r14, r24
    105a:	88 e3       	ldi	r24, 0x38	; 56
    105c:	f8 2e       	mov	r15, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:398
  } while (--byte_count);
    105e:	f7 01       	movw	r30, r14
    1060:	81 91       	ld	r24, Z+
    1062:	7f 01       	movw	r14, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:453
        }
        _result = NVM::write_memory();
        break;
      }
      case UPDI::UPDI_CMD_ERASE : {
        if (JTAG2::packet.body[1] == JTAG2::XMEGA_ERASE_CHIP
    1064:	5f d8       	rcall	.-3906   	; 0x124 <UPDI::SEND(unsigned char)>
    1066:	88 23       	and	r24, r24
    1068:	09 f4       	brne	.+2      	; 0x106c <UPDI::runtime(unsigned char)+0x79a>
    106a:	bb cd       	rjmp	.-1162   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:454
          && _CAPS32(JTAG2::packet.body[2])->dword == 0) {
    106c:	4f d8       	rcall	.-3938   	; 0x10c <UPDI::RECV()>
    106e:	80 34       	cpi	r24, 0x40	; 64
    1070:	09 f0       	breq	.+2      	; 0x1074 <UPDI::runtime(unsigned char)+0x7a2>
    1072:	b7 cd       	rjmp	.-1170   	; 0xbe2 <UPDI::runtime(unsigned char)+0x310>
    1074:	01 50       	subi	r16, 0x01	; 1
    1076:	11 09       	sbc	r17, r1
    1078:	91 f7       	brne	.-28     	; 0x105e <UPDI::runtime(unsigned char)+0x78c>
    107a:	14 ce       	rjmp	.-984    	; 0xca4 <UPDI::runtime(unsigned char)+0x3d2>
_ZN4UPDI7runtimeEh():
    107c:	e3 e6       	ldi	r30, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:300
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();
    107e:	f8 e3       	ldi	r31, 0x38	; 56
    1080:	81 85       	ldd	r24, Z+9	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:303

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
    1082:	81 11       	cpse	r24, r1
    1084:	42 cd       	rjmp	.-1404   	; 0xb0a <UPDI::runtime(unsigned char)+0x238>
    1086:	82 85       	ldd	r24, Z+10	; 0x0a
    1088:	93 85       	ldd	r25, Z+11	; 0x0b
    108a:	a4 85       	ldd	r26, Z+12	; 0x0c
    108c:	b5 85       	ldd	r27, Z+13	; 0x0d
    108e:	89 2b       	or	r24, r25
    1090:	8a 2b       	or	r24, r26
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:306

  /* send erase_key */
  if (!UPDI::send_bytes(UPDI::erase_key, sizeof(UPDI::erase_key))) return false;
    1092:	8b 2b       	or	r24, r27
    1094:	09 f0       	breq	.+2      	; 0x1098 <UPDI::runtime(unsigned char)+0x7c6>
    1096:	39 cd       	rjmp	.-1422   	; 0xb0a <UPDI::runtime(unsigned char)+0x238>
chip_erase():
    1098:	e0 9b       	sbis	0x1c, 0	; 28
    109a:	31 c0       	rjmp	.+98     	; 0x10fe <UPDI::runtime(unsigned char)+0x82c>
    109c:	6a e0       	ldi	r22, 0x0A	; 10
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	84 e2       	ldi	r24, 0x24	; 36
    10a2:	99 e9       	ldi	r25, 0x99	; 153
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:309

  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
    10a4:	57 d8       	rcall	.-3922   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    10a6:	88 23       	and	r24, r24
    10a8:	09 f4       	brne	.+2      	; 0x10ac <UPDI::runtime(unsigned char)+0x7da>
    10aa:	67 cc       	rjmp	.-1842   	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
    10ac:	6a e0       	ldi	r22, 0x0A	; 10
    10ae:	70 e0       	ldi	r23, 0x00	; 0
    10b0:	8a e1       	ldi	r24, 0x1A	; 26
    10b2:	99 e9       	ldi	r25, 0x99	; 153
    10b4:	4f d8       	rcall	.-3938   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    10b6:	88 23       	and	r24, r24
    10b8:	09 f4       	brne	.+2      	; 0x10bc <UPDI::runtime(unsigned char)+0x7ea>
    10ba:	5f cc       	rjmp	.-1858   	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	ae d8       	rcall	.-3748   	; 0x21c <UPDI::updi_reset(bool)>
    10c0:	88 23       	and	r24, r24
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <UPDI::runtime(unsigned char)+0x7f4>
    10c4:	5a cc       	rjmp	.-1868   	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
    10c6:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    10c8:	a9 d8       	rcall	.-3758   	; 0x21c <UPDI::updi_reset(bool)>
    10ca:	88 23       	and	r24, r24
    10cc:	09 f4       	brne	.+2      	; 0x10d0 <UPDI::runtime(unsigned char)+0x7fe>
    10ce:	55 cc       	rjmp	.-1878   	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
delay_millis():
    10d0:	87 ea       	ldi	r24, 0xA7	; 167
    10d2:	91 e6       	ldi	r25, 0x61	; 97
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
    10d4:	01 97       	sbiw	r24, 0x01	; 1
    10d6:	f1 f7       	brne	.-4      	; 0x10d4 <UPDI::runtime(unsigned char)+0x802>
    10d8:	00 c0       	rjmp	.+0      	; 0x10da <UPDI::runtime(unsigned char)+0x808>
    10da:	00 00       	nop
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:314
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;

  /* wait enable : chip erase mode success */
  delay_millis(10);

  do{ delay_micros(100); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS));
    10dc:	e9 ef       	ldi	r30, 0xF9	; 249
    10de:	f0 e0       	ldi	r31, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:315
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
    10e0:	31 97       	sbiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:317

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    10e2:	f1 f7       	brne	.-4      	; 0x10e0 <UPDI::runtime(unsigned char)+0x80e>
    10e4:	00 c0       	rjmp	.+0      	; 0x10e6 <UPDI::runtime(unsigned char)+0x814>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:318
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
    10e6:	00 00       	nop
is_sys_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:321
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
    10e8:	61 e0       	ldi	r22, 0x01	; 1
    10ea:	8b e0       	ldi	r24, 0x0B	; 11
    10ec:	f4 d8       	rcall	.-3608   	; 0x2d6 <UPDI::is_cs_stat(unsigned char, unsigned char)>
chip_erase():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:300
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();
    10ee:	81 11       	cpse	r24, r1
    10f0:	f5 cf       	rjmp	.-22     	; 0x10dc <UPDI::runtime(unsigned char)+0x80a>
    10f2:	e2 9a       	sbi	0x1c, 2	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:349
      delay_millis(50);
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    10f4:	e0 9b       	sbis	0x1c, 0	; 28
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <UPDI::runtime(unsigned char)+0x830>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:350
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
    10f8:	e1 98       	cbi	0x1c, 1	; 28
    10fa:	02 da       	rcall	.-3068   	; 0x500 <UPDI::enter_prog()>
    10fc:	73 cc       	rjmp	.-1818   	; 0x9e4 <UPDI::runtime(unsigned char)+0x112>
    10fe:	3d da       	rcall	.-2950   	; 0x57a <HV_Pulse()>
    1100:	cd cf       	rjmp	.-102    	; 0x109c <UPDI::runtime(unsigned char)+0x7ca>
enter_updi():
    1102:	e0 99       	sbic	0x1c, 0	; 28
    1104:	fa cf       	rjmp	.-12     	; 0x10fa <UPDI::runtime(unsigned char)+0x828>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:321

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
    1106:	3d d8       	rcall	.-3974   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
    1108:	88 23       	and	r24, r24
    110a:	09 f4       	brne	.+2      	; 0x110e <UPDI::runtime(unsigned char)+0x83c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:460
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
    110c:	36 cc       	rjmp	.-1940   	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
    110e:	43 d8       	rcall	.-3962   	; 0x196 <UPDI::enter_updi(bool) [clone .part.4]>
chip_erase():
    1110:	81 11       	cpse	r24, r1
    1112:	f3 cf       	rjmp	.-26     	; 0x10fa <UPDI::runtime(unsigned char)+0x828>
    1114:	32 cc       	rjmp	.-1948   	; 0x97a <UPDI::runtime(unsigned char)+0xa8>
_ZN4UPDI7runtimeEh():
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	02 d9       	rcall	.-3580   	; 0x31e <UPDI::Target_Reset(bool)>
    111a:	88 23       	and	r24, r24
    111c:	09 f4       	brne	.+2      	; 0x1120 <UPDI::runtime(unsigned char)+0x84e>
    111e:	62 cc       	rjmp	.-1852   	; 0x9e4 <UPDI::runtime(unsigned char)+0x112>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:280
 *
 * ここから割込元に戻ることはない
 */

ISR(TCB0_INT_vect, ISR_NAKED) {
  __asm__ __volatile__ ("EOR R1,R1");
    1120:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:281
  TCB0_CTRLA = 0;
    1122:	fd d8       	rcall	.-3590   	; 0x31e <UPDI::Target_Reset(bool)>
    1124:	5f cc       	rjmp	.-1858   	; 0x9e4 <UPDI::runtime(unsigned char)+0x112>

00001126 <__vector_13>:
__vector_13():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:282
  TCB0_INTFLAGS = TCB_CAPT_bm;
    1126:	11 24       	eor	r1, r1
    1128:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f715c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:283
  longjmp(TIM::CONTEXT, 2);
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f7162>
    1132:	62 e0       	ldi	r22, 0x02	; 2
    1134:	70 e0       	ldi	r23, 0x00	; 0
    1136:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:248
 *
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
    1138:	98 e3       	ldi	r25, 0x38	; 56
    113a:	c8 d3       	rcall	.+1936   	; 0x18cc <longjmp>

0000113c <__vector_6>:
__vector_6():
    113c:	1f 92       	push	r1
    113e:	0f 92       	push	r0
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	0f 92       	push	r0
    1144:	11 24       	eor	r1, r1
    1146:	2f 93       	push	r18
    1148:	3f 93       	push	r19
    114a:	4f 93       	push	r20
    114c:	5f 93       	push	r21
    114e:	6f 93       	push	r22
    1150:	7f 93       	push	r23
    1152:	8f 93       	push	r24
    1154:	9f 93       	push	r25
    1156:	af 93       	push	r26
    1158:	bf 93       	push	r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:250
  portRegister(RTS_SENSE_PIN).INTFLAGS =
  portRegister(RTS_SENSE_PIN).INTFLAGS;
    115a:	ef 93       	push	r30
    115c:	ff 93       	push	r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:249
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
  portRegister(RTS_SENSE_PIN).INTFLAGS =
    115e:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <UPDI::nvmprog_key+0x7f6ae5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:252
  portRegister(RTS_SENSE_PIN).INTFLAGS;

  if ( digitalRead(RTS_SENSE_PIN) ) {
    1162:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6ae5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
/*
 * 本体リセット
 */

void SYS::System_Reset (void) {
  _PROTECTED_WRITE(RSTCTRL_SWRR, RSTCTRL_SWRE_bm);
    1166:	12 9b       	sbis	0x02, 2	; 2
    1168:	16 c0       	rjmp	.+44     	; 0x1196 <__vector_6+0x5a>
System_Reset():
    116a:	88 ed       	ldi	r24, 0xD8	; 216
    116c:	91 e0       	ldi	r25, 0x01	; 1
    116e:	84 bf       	out	0x34, r24	; 52
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:271
    openDrainWrite(TRST_PIN, HIGH);

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
  }
}
    1170:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f671d>
__vector_6():
    1174:	ff 91       	pop	r31
    1176:	ef 91       	pop	r30
    1178:	bf 91       	pop	r27
    117a:	af 91       	pop	r26
    117c:	9f 91       	pop	r25
    117e:	8f 91       	pop	r24
    1180:	7f 91       	pop	r23
    1182:	6f 91       	pop	r22
    1184:	5f 91       	pop	r21
    1186:	4f 91       	pop	r20
    1188:	3f 91       	pop	r19
    118a:	2f 91       	pop	r18
    118c:	0f 90       	pop	r0
    118e:	0f be       	out	0x3f, r0	; 63
    1190:	0f 90       	pop	r0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:258
    /* RTS 開放で本体リセット */
    SYS::System_Reset();
  }
  else {
    /* LED は点滅 */
    TIM::LED_Flash();
    1192:	1f 90       	pop	r1
    1194:	18 95       	reti
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:261

    /* ターゲット再起動 */
    UPDI::Target_Reset(true);
    1196:	e9 d8       	rcall	.-3630   	; 0x36a <TIM::LED_Flash()>
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	c1 d8       	rcall	.-3710   	; 0x31e <UPDI::Target_Reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:264

    /* ターゲットリセットパルス */
    openDrainWrite(TRST_PIN, LOW);
    119c:	21 9a       	sbi	0x04, 1	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:265
    nop();
    119e:	00 00       	nop
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:266
    openDrainWrite(TRST_PIN, HIGH);
    11a0:	21 98       	cbi	0x04, 1	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:269

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	bc d8       	rcall	.-3720   	; 0x31e <UPDI::Target_Reset(bool)>
    11a6:	e6 cf       	rjmp	.-52     	; 0x1174 <__vector_6+0x38>

000011a8 <__vector_7>:
__vector_7():
    11a8:	e0 d8       	rcall	.-3648   	; 0x36a <TIM::LED_Flash()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:217
 * このハンドラから主処理に戻ることはない
 */

ISR(portIntrruptVector(SW_SENSE_PIN), ISR_NAKED) {
  /* LED は点滅 */
  TIM::LED_Flash();
    11aa:	81 e0       	ldi	r24, 0x01	; 1
    11ac:	b8 d8       	rcall	.-3728   	; 0x31e <UPDI::Target_Reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:220

  /* ターゲットリセットON */
  UPDI::Target_Reset(true);
    11ae:	88 e0       	ldi	r24, 0x08	; 8
    11b0:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6ee2>
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:221
  UPDI_USART.CTRLB = UPDI_USART_OFF;
    11b4:	83 ec       	ldi	r24, 0xC3	; 195
    11b6:	99 e0       	ldi	r25, 0x09	; 9
    11b8:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
    11ba:	f1 f7       	brne	.-4      	; 0x11b8 <__vector_7+0x10>
    11bc:	00 c0       	rjmp	.+0      	; 0x11be <__vector_7+0x16>
    11be:	00 00       	nop
__vector_7():
    11c0:	01 9a       	sbi	0x00, 1	; 0
    11c2:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <UPDI::nvmprog_key+0x7f6aed>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:227

  /* チャタリング抑制 */
  delay_micros(1000);

  /* ターゲットリセット維持 */
  pinMode(UPDI_TDAT_PIN, OUTPUT);
    11c6:	09 98       	cbi	0x01, 1	; 1
    11c8:	21 9a       	sbi	0x04, 1	; 4
    11ca:	b7 d8       	rcall	.-3730   	; 0x33a <TIM::LED_Blink()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:228
  digitalWrite(UPDI_TDAT_PIN, LOW);
    11cc:	30 9b       	sbis	0x06, 0	; 6
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:229
  openDrainWrite(TRST_PIN, LOW);
    11ce:	fe cf       	rjmp	.-4      	; 0x11cc <__vector_7+0x24>
System_Reset():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:232

  /* LEDは 交互点滅 */
  TIM::LED_Blink();
    11d0:	88 ed       	ldi	r24, 0xD8	; 216
    11d2:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:235

  /* 押している間は待機 */
  while (!digitalRead(SW_SENSE_PIN));
    11d4:	84 bf       	out	0x34, r24	; 52
    11d6:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f671d>

000011da <main>:
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
    11da:	f8 94       	cli
initVariant():
    11dc:	24 e0       	ldi	r18, 0x04	; 4
    11de:	e0 e1       	ldi	r30, 0x10	; 16
    11e0:	f4 e0       	ldi	r31, 0x04	; 4
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/variants/tinyAVR2_20/variant.h:281
    "   DEC  R24     \n"
    "   BRNE 2b        " /* 3 loop PORTA to PORTC */
    : : "z" ((register8_t*)&PORTA_PIN0CTRL),
        "r" ((uint8_t)PORT_ISC_INPUT_DISABLE_gc)
      : "r24", "r25"
  );
    11e2:	83 e0       	ldi	r24, 0x03	; 3
    11e4:	98 e0       	ldi	r25, 0x08	; 8
    11e6:	21 93       	st	Z+, r18
    11e8:	9a 95       	dec	r25
    11ea:	e9 f7       	brne	.-6      	; 0x11e6 <main+0xc>
    11ec:	78 96       	adiw	r30, 0x18	; 24
    11ee:	8a 95       	dec	r24
    11f0:	c9 f7       	brne	.-14     	; 0x11e4 <main+0xa>
_CLKCTRL_SETUP():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/CLKCTRL_megaAVR.h:127
  // _PROTECTED_WRITE(CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc);

#else

  #if defined(_CLKCTRL_PDIV_)
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, _CLKCTRL_PDIV_ | CLKCTRL_PEN_bm);
    11f2:	88 ed       	ldi	r24, 0xD8	; 216
    11f4:	41 e0       	ldi	r20, 0x01	; 1
    11f6:	50 e0       	ldi	r21, 0x00	; 0
    11f8:	84 bf       	out	0x34, r24	; 52
    11fa:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <UPDI::nvmprog_key+0x7f673d>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:17
#include <avr/io.h>

void SYS::setup (void) {

  /* ターゲットリセット開放 */
  pinControlRegister(TRST_PIN) = TRST_PIN_CONFIG;
    11fe:	8c e0       	ldi	r24, 0x0C	; 12
    1200:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <UPDI::nvmprog_key+0x7f6b0d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:20

  /* 出力方向ポート */
  PORTA_DIRSET = _BV(pinPosition(HVP1_PIN))
    1204:	88 ef       	ldi	r24, 0xF8	; 248
    1206:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <UPDI::nvmprog_key+0x7f6add>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:25
               | _BV(pinPosition(HVP2_PIN))
               | _BV(pinPosition(HV12_PIN))
               | _BV(pinPosition(LEDG_PIN))
               | _BV(pinPosition(LEDY_PIN));
  PORTB_DIRSET = _BV(pinPosition(HV8_PIN));
    120a:	80 e2       	ldi	r24, 0x20	; 32
    120c:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <UPDI::nvmprog_key+0x7f6afd>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:28

  /* USART 切替 LOW=ターゲット開通（PG_Disable） */
  PORTC_DIRSET = _BV(pinPosition(PGEN_PIN));
    1210:	81 e0       	ldi	r24, 0x01	; 1
    1212:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <UPDI::nvmprog_key+0x7f6b1d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:31

  /* LED 出力 */
  LEDG_EVOUT_MUX = LEDG_EVOUT_ALT;          /* OUT:PA7 */
    1216:	80 93 e0 05 	sts	0x05E0, r24	; 0x8005e0 <UPDI::nvmprog_key+0x7f6cbc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:32
  PORTMUX_CCLROUTEA = PORTMUX_LUT3_ALT1_gc; /* OUT:PA5 IN:PC0,PC1,PC2 */
    121a:	98 e0       	ldi	r25, 0x08	; 8
    121c:	90 93 e1 05 	sts	0x05E1, r25	; 0x8005e1 <UPDI::nvmprog_key+0x7f6cbd>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:33
  PORTA_OUTSET = _BV(pinPosition(LEDG_PIN))
    1220:	30 ea       	ldi	r19, 0xA0	; 160
    1222:	30 93 05 04 	sts	0x0405, r19	; 0x800405 <UPDI::nvmprog_key+0x7f6ae1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:37
               | _BV(pinPosition(LEDY_PIN));

  /* USART代替選択 */
  PORTMUX_USARTROUTEA = JTAG_PMUX_ALT | UPDI_PMUX_ALT;
    1226:	35 e0       	ldi	r19, 0x05	; 5
    1228:	30 93 e2 05 	sts	0x05E2, r19	; 0x8005e2 <UPDI::nvmprog_key+0x7f6cbe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:40

  /* JTAG ポート */
  pinControlRegister(JTAG_TXD_PIN) = JTAG_TXD_CONFIG;
    122c:	90 93 52 04 	sts	0x0452, r25	; 0x800452 <UPDI::nvmprog_key+0x7f6b2e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:41
  pinControlRegister(JTAG_RXD_PIN) = JTAG_RXD_CONFIG;
    1230:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <UPDI::nvmprog_key+0x7f6b2d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:44

  /* UPDI ポート */
  pinControlRegister(UPDI_TDAT_PIN) = UPDI_TDAT_CONFIG;
    1234:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <UPDI::nvmprog_key+0x7f6aed>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:47

  /* HV 発生器 */
  pinControlRegister(HVP1_PIN) = HVP1_PIN_CONFIG;
    1238:	20 93 13 04 	sts	0x0413, r18	; 0x800413 <UPDI::nvmprog_key+0x7f6aef>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:48
  pinControlRegister(HVP2_PIN) = HVP2_PIN_CONFIG;
    123c:	44 e8       	ldi	r20, 0x84	; 132
    123e:	40 93 14 04 	sts	0x0414, r20	; 0x800414 <UPDI::nvmprog_key+0x7f6af0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:51

  /* SW1 割込許可 */
  pinControlRegister(SW_SENSE_PIN) = SW_SENSE_CONFIG;
    1242:	4d e0       	ldi	r20, 0x0D	; 13
    1244:	40 93 30 04 	sts	0x0430, r20	; 0x800430 <UPDI::nvmprog_key+0x7f6b0c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:54

  /* RTS 認識 */
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
    1248:	49 e0       	ldi	r20, 0x09	; 9
    124a:	40 93 12 04 	sts	0x0412, r20	; 0x800412 <UPDI::nvmprog_key+0x7f6aee>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:57

  /* JP1 認識 */
  pinControlRegister(JP_SENSE_PIN) = JP_SENSE_CONFIG;
    124e:	90 93 53 04 	sts	0x0453, r25	; 0x800453 <UPDI::nvmprog_key+0x7f6b2f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:60

  /* 状態変数初期化 */
  UPDI_CONTROL = 0;
    1252:	1c ba       	out	0x1c, r1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:61
  UPDI_NVMCTRL = 0;
    1254:	1d ba       	out	0x1d, r1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:47

  /*
   * EVSYS信号分配
   */

  EVSYS_CHANNEL0 = EVSYS_CHANNEL0_CCL_LUT0_gc;
    1256:	90 e1       	ldi	r25, 0x10	; 16
    1258:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <UPDI::nvmprog_key+0x7f686c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:48
  EVSYS_CHANNEL1 = EVSYS_CHANNEL1_RTC_PIT_DIV128_gc;
    125c:	9a e0       	ldi	r25, 0x0A	; 10
    125e:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <UPDI::nvmprog_key+0x7f686d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:49
  EVSYS_CHANNEL2 = EVSYS_CHANNEL2_CCL_LUT1_gc;
    1262:	91 e1       	ldi	r25, 0x11	; 17
    1264:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <UPDI::nvmprog_key+0x7f686e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:50
  EVSYS_CHANNEL3 = EVSYS_CHANNEL3_PORTA_PIN5_gc;
    1268:	9d e4       	ldi	r25, 0x4D	; 77
    126a:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <UPDI::nvmprog_key+0x7f686f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:51
  EVSYS_USERTCB0COUNT = EVSYS_USER_CHANNEL1_gc;
    126e:	92 e0       	ldi	r25, 0x02	; 2
    1270:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <UPDI::nvmprog_key+0x7f688d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:52
  EVSYS_USERTCB1COUNT = EVSYS_USER_CHANNEL1_gc;
    1274:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <UPDI::nvmprog_key+0x7f688f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:53
  EVSYS_USERCCLLUT0A  = EVSYS_USER_CHANNEL3_gc;
    1278:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <UPDI::nvmprog_key+0x7f687c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:54
  EVSYS_USERCCLLUT1A  = EVSYS_USER_CHANNEL3_gc;
    127c:	20 93 a2 01 	sts	0x01A2, r18	; 0x8001a2 <UPDI::nvmprog_key+0x7f687e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:61
  /*
   * CCL/LUT構築
   */

  /* TRUTH0: 010 is ON */
  CCL_TRUTH0    = CCL_TRUTH_2_bm;
    1280:	20 93 cb 01 	sts	0x01CB, r18	; 0x8001cb <UPDI::nvmprog_key+0x7f68a7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:62
  CCL_LUT0CTRLC = CCL_INSEL0_EVENTA_gc;
    1284:	93 e0       	ldi	r25, 0x03	; 3
    1286:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <UPDI::nvmprog_key+0x7f68a6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:63
  CCL_LUT0CTRLB = CCL_INSEL1_TCB1_gc;                       /* IN1:POS */
    128a:	20 ec       	ldi	r18, 0xC0	; 192
    128c:	20 93 c9 01 	sts	0x01C9, r18	; 0x8001c9 <UPDI::nvmprog_key+0x7f68a5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:64
  CCL_LUT0CTRLA = CCL_ENABLE_bm;
    1290:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <UPDI::nvmprog_key+0x7f68a4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:67

  /* TRUTH1: 001 010 is ON */
  CCL_TRUTH1    = CCL_TRUTH_1_bm | CCL_TRUTH_2_bm;
    1294:	26 e0       	ldi	r18, 0x06	; 6
    1296:	20 93 cf 01 	sts	0x01CF, r18	; 0x8001cf <UPDI::nvmprog_key+0x7f68ab>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:68
  CCL_LUT1CTRLC = CCL_INSEL0_EVENTA_gc;
    129a:	90 93 ce 01 	sts	0x01CE, r25	; 0x8001ce <UPDI::nvmprog_key+0x7f68aa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:69
  CCL_LUT1CTRLB = CCL_INSEL0_TCA0_gc | CCL_INSEL1_TCB1_gc;  /* IN0:POS IN1:POS */
    129e:	2a ec       	ldi	r18, 0xCA	; 202
    12a0:	20 93 cd 01 	sts	0x01CD, r18	; 0x8001cd <UPDI::nvmprog_key+0x7f68a9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:70
  CCL_LUT1CTRLA = CCL_ENABLE_bm;
    12a4:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <UPDI::nvmprog_key+0x7f68a8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:76

  /* TRUTH3: 001 010 is ON */
  /* CCL_INSEL0_USART0_gc : USART0TX normal HIGH */
  /* CCL_INSEL1_IO_gc     : USART1RX normal HIGH */
  /* CCL_INSEL2_IO_gc     : USART1TX normal HIGH */
  CCL_TRUTH3    = (uint8_t) ~CCL_TRUTH_7_bm;
    12a8:	2f e7       	ldi	r18, 0x7F	; 127
    12aa:	20 93 d7 01 	sts	0x01D7, r18	; 0x8001d7 <UPDI::nvmprog_key+0x7f68b3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:77
  CCL_LUT3CTRLC = CCL_INSEL2_IO_gc;
    12ae:	30 93 d6 01 	sts	0x01D6, r19	; 0x8001d6 <UPDI::nvmprog_key+0x7f68b2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:78
  CCL_LUT3CTRLB = CCL_INSEL0_USART0_gc | CCL_INSEL1_IO_gc;
    12b2:	28 e5       	ldi	r18, 0x58	; 88
    12b4:	20 93 d5 01 	sts	0x01D5, r18	; 0x8001d5 <UPDI::nvmprog_key+0x7f68b1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:79
  CCL_LUT3CTRLA = CCL_ENABLE_bm | CCL_OUTEN_bm;
    12b8:	21 e4       	ldi	r18, 0x41	; 65
    12ba:	20 93 d4 01 	sts	0x01D4, r18	; 0x8001d4 <UPDI::nvmprog_key+0x7f68b0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:82

  /* CCL 有効化 */
  CCL_CTRLA = CCL_RUNSTDBY_bm | CCL_ENABLE_bm;
    12be:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <UPDI::nvmprog_key+0x7f689c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:85

  /* RTC_PIT 有効化 */
  RTC_PITCTRLA = RTC_PITEN_bm;
    12c2:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <UPDI::nvmprog_key+0x7f682c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:92
  /*
   * タイマー
   */

  /* TCA0 */
  TCA0_SPLIT_CTRLD = TCA_SPLIT_SPLITM_bm;
    12c6:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <UPDI::nvmprog_key+0x7f70df>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:93
  TCA0_SPLIT_LPER  = TCA0_STEP - 2;
    12ca:	29 e8       	ldi	r18, 0x89	; 137
    12cc:	20 93 26 0a 	sts	0x0A26, r18	; 0x800a26 <UPDI::nvmprog_key+0x7f7102>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:94
  TCA0_SPLIT_LCMP0 = TCA0_STEP / 2;
    12d0:	25 e4       	ldi	r18, 0x45	; 69
    12d2:	20 93 28 0a 	sts	0x0A28, r18	; 0x800a28 <UPDI::nvmprog_key+0x7f7104>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:95
  TCA0_SPLIT_HPER  = 1;
    12d6:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <UPDI::nvmprog_key+0x7f7103>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:96
  TCA0_SPLIT_HCMP0 = 1;     /* WOA3=PA3 */
    12da:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <UPDI::nvmprog_key+0x7f7105>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:97
  TCA0_SPLIT_HCMP1 = 1;     /* WOA4=PA4 */
    12de:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <UPDI::nvmprog_key+0x7f7107>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:98
  TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1024_gc;
    12e2:	3f e8       	ldi	r19, 0x8F	; 143
    12e4:	30 93 00 0a 	sts	0x0A00, r19	; 0x800a00 <UPDI::nvmprog_key+0x7f70dc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:101

  /* TCB1 */
  TCB1_CTRLB = TCB_CNTMODE_PWM8_gc;
    12e8:	37 e0       	ldi	r19, 0x07	; 7
    12ea:	30 93 91 0a 	sts	0x0A91, r19	; 0x800a91 <UPDI::nvmprog_key+0x7f716d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:110
   *
   * RTS Deactive なら ハートビート
   * RTS Active なら フラッシュ
   */

  if ( digitalRead(RTS_SENSE_PIN) ) {
    12ee:	12 9b       	sbis	0x02, 2	; 2
    12f0:	90 c0       	rjmp	.+288    	; 0x1412 <main+0x238>
LED_HeartBeat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:150
 * LED動作切替
 */

/* ハートビート（待機中）*/
void TIM::LED_HeartBeat (void) {
  if (TIM::mode != 1) {
    12f2:	30 91 50 38 	lds	r19, 0x3850	; 0x803850 <TIM::mode>
    12f6:	31 30       	cpi	r19, 0x01	; 1
    12f8:	81 f0       	breq	.+32     	; 0x131a <main+0x140>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:151
    TIM::mode = 1;
    12fa:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:152
    TCB1_CCMP = TCB1_HBEAT;
    12fe:	4a e8       	ldi	r20, 0x8A	; 138
    1300:	55 e4       	ldi	r21, 0x45	; 69
    1302:	40 93 9c 0a 	sts	0x0A9C, r20	; 0x800a9c <UPDI::nvmprog_key+0x7f7178>
    1306:	50 93 9d 0a 	sts	0x0A9D, r21	; 0x800a9d <UPDI::nvmprog_key+0x7f7179>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:153
    TCB1_CNT = 0;
    130a:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7176>
    130e:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7177>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:154
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;
    1312:	20 93 90 0a 	sts	0x0A90, r18	; 0x800a90 <UPDI::nvmprog_key+0x7f716c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:155
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
    1316:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <UPDI::nvmprog_key+0x7f6885>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:82
  };
}

/* 初期化 */
void JTAG2::setup (void) {
  JTAG_USART.BAUD = pgm_read_word( &BAUD_TABLE[JTAG2::BAUD_19200] );
    131a:	ed e9       	ldi	r30, 0x9D	; 157
    131c:	f0 e0       	ldi	r31, 0x00	; 0
    131e:	85 91       	lpm	r24, Z+
    1320:	94 91       	lpm	r25, Z
    1322:	80 93 28 08 	sts	0x0828, r24	; 0x800828 <UPDI::nvmprog_key+0x7f6f04>
    1326:	90 93 29 08 	sts	0x0829, r25	; 0x800829 <UPDI::nvmprog_key+0x7f6f05>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:83
  JTAG_USART.CTRLA = JTAG_USART_CTRLA;
    132a:	10 92 25 08 	sts	0x0825, r1	; 0x800825 <UPDI::nvmprog_key+0x7f6f01>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:84
  JTAG_USART.CTRLC = JTAG_USART_CTRLC;
    132e:	83 e0       	ldi	r24, 0x03	; 3
    1330:	80 93 27 08 	sts	0x0827, r24	; 0x800827 <UPDI::nvmprog_key+0x7f6f03>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:85
  JTAG_USART.CTRLB = JTAG_USART_OFF;
    1334:	88 e8       	ldi	r24, 0x88	; 136
    1336:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6f02>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:29
void UPDI::guardtime (void) {
  delay_micros(UPDI_GUARDTIME);
}

void UPDI::setup (void) {
  UPDI_USART.BAUD  = UPDI_BAUD_CALC;
    133a:	80 eb       	ldi	r24, 0xB0	; 176
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6ee4>
    1342:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6ee5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:30
  UPDI_USART.CTRLA = UPDI_USART_CTRLA;
    1346:	8a e0       	ldi	r24, 0x0A	; 10
    1348:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <UPDI::nvmprog_key+0x7f6ee1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:31
  UPDI_USART.CTRLC = UPDI_USART_CTRLC;
    134c:	8b e2       	ldi	r24, 0x2B	; 43
    134e:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <UPDI::nvmprog_key+0x7f6ee3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:32
  UPDI_USART.CTRLB = UPDI_USART_ON;
    1352:	88 ec       	ldi	r24, 0xC8	; 200
    1354:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6ee2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:35

  /* ソフトリセット後は ターゲットのリセットを解除 */
  if ( bit_is_set(RSTCTRL_RSTFR, RSTCTRL_SWRF_bp) ) UPDI::Target_Reset(false);
    1358:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <UPDI::nvmprog_key+0x7f671c>
    135c:	84 ff       	sbrs	r24, 4
    135e:	03 c0       	rjmp	.+6      	; 0x1366 <main+0x18c>
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	0e 94 8f 01 	call	0x31e	; 0x31e <UPDI::Target_Reset(bool)>
ready():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:119
/*
 * 起動シーケンスの最後に実行
 */

void SYS::ready (void) {
  RSTCTRL_RSTFR = 0xFF;
    1366:	8f ef       	ldi	r24, 0xFF	; 255
    1368:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <UPDI::nvmprog_key+0x7f671c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:122

  /* 初期化中に検出された非同期割込をクリアする */
  portRegister(RTS_SENSE_PIN).INTFLAGS = 0xFF;
    136c:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6ae5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:125

  /* 割込許可 */
  sei();
    1370:	78 94       	sei
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:297
    case JTAG2::CMND_ENTER_PROGMODE : {
      uint8_t c = UPDI_CONTROL;
      UPDI::updi_activate();
      JTAG2::set_response(JTAG2::RSP_OK);
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
        packet.size = 19;
    1372:	e3 e1       	ldi	r30, 0x13	; 19
    1374:	8e 2e       	mov	r8, r30
    1376:	91 2c       	mov	r9, r1
    1378:	a1 2c       	mov	r10, r1
    137a:	b1 2c       	mov	r11, r1
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:251
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
    137c:	f2 e0       	ldi	r31, 0x02	; 2
    137e:	2f 2e       	mov	r2, r31
    1380:	31 2c       	mov	r3, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    1382:	a3 e0       	ldi	r26, 0x03	; 3
    1384:	ca 2e       	mov	r12, r26
    1386:	d1 2c       	mov	r13, r1
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    1388:	bd e1       	ldi	r27, 0x1D	; 29
    138a:	4b 2e       	mov	r4, r27
    138c:	51 2c       	mov	r5, r1
    138e:	61 2c       	mov	r6, r1
    1390:	71 2c       	mov	r7, r1
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    1392:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6f00>
    1396:	87 ff       	sbrs	r24, 7
    1398:	fc cf       	rjmp	.-8      	; 0x1392 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    139a:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6efc>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:126
  uint16_t _crc = ~0;
  uint8_t *p = (uint8_t*) &packet.soh;
  uint8_t *q = (uint8_t*) &packet.soh;

  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
    139e:	8b 31       	cpi	r24, 0x1B	; 27
    13a0:	c1 f7       	brne	.-16     	; 0x1392 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:127
  (*p++) = JTAG2::MESSAGE_START;
    13a2:	80 93 63 38 	sts	0x3863, r24	; 0x803863 <JTAG2::packet>
    13a6:	e4 e6       	ldi	r30, 0x64	; 100
    13a8:	f8 e3       	ldi	r31, 0x38	; 56
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    13aa:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6f00>
    13ae:	87 ff       	sbrs	r24, 7
    13b0:	fc cf       	rjmp	.-8      	; 0x13aa <main+0x1d0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    13b2:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6efc>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:130
  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
  (*p++) = JTAG2::MESSAGE_START;

  /* 最初の7byte */
  for (int8_t i = 0; i < 7; i++) *p++ = get();
    13b6:	81 93       	st	Z+, r24
    13b8:	2b e6       	ldi	r18, 0x6B	; 107
    13ba:	38 e3       	ldi	r19, 0x38	; 56
    13bc:	2e 17       	cp	r18, r30
    13be:	3f 07       	cpc	r19, r31
    13c0:	a1 f7       	brne	.-24     	; 0x13aa <main+0x1d0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:133

  /* STX 確認 */
  if (packet.stx != JTAG2::TOKEN) return false;
    13c2:	80 91 6a 38 	lds	r24, 0x386A	; 0x80386a <JTAG2::packet+0x7>
    13c6:	8e 30       	cpi	r24, 0x0E	; 14
    13c8:	21 f7       	brne	.-56     	; 0x1392 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:136

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;
    13ca:	80 91 66 38 	lds	r24, 0x3866	; 0x803866 <JTAG2::packet+0x3>
    13ce:	90 91 67 38 	lds	r25, 0x3867	; 0x803867 <JTAG2::packet+0x4>
    13d2:	a0 91 68 38 	lds	r26, 0x3868	; 0x803868 <JTAG2::packet+0x5>
    13d6:	b0 91 69 38 	lds	r27, 0x3869	; 0x803869 <JTAG2::packet+0x6>
    13da:	8a 30       	cpi	r24, 0x0A	; 10
    13dc:	92 40       	sbci	r25, 0x02	; 2
    13de:	a1 05       	cpc	r26, r1
    13e0:	b1 05       	cpc	r27, r1
    13e2:	b8 f6       	brcc	.-82     	; 0x1392 <main+0x1b8>
    13e4:	cb e6       	ldi	r28, 0x6B	; 107
    13e6:	d8 e3       	ldi	r29, 0x38	; 56
    13e8:	7e 01       	movw	r14, r28
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    13ea:	8e ef       	ldi	r24, 0xFE	; 254
    13ec:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
    13ee:	20 91 66 38 	lds	r18, 0x3866	; 0x803866 <JTAG2::packet+0x3>
    13f2:	30 91 67 38 	lds	r19, 0x3867	; 0x803867 <JTAG2::packet+0x4>
    13f6:	82 17       	cp	r24, r18
    13f8:	93 07       	cpc	r25, r19
    13fa:	74 f4       	brge	.+28     	; 0x1418 <main+0x23e>
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    13fc:	20 91 24 08 	lds	r18, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6f00>
    1400:	27 ff       	sbrs	r18, 7
    1402:	fc cf       	rjmp	.-8      	; 0x13fc <main+0x222>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    1404:	20 91 20 08 	lds	r18, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6efc>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    1408:	d7 01       	movw	r26, r14
    140a:	2d 93       	st	X+, r18
    140c:	7d 01       	movw	r14, r26
    140e:	01 96       	adiw	r24, 0x01	; 1
    1410:	ee cf       	rjmp	.-36     	; 0x13ee <main+0x214>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:114

  if ( digitalRead(RTS_SENSE_PIN) ) {
    LED_HeartBeat();
  }
  else {
    LED_Flash();
    1412:	0e 94 b5 01 	call	0x36a	; 0x36a <TIM::LED_Flash()>
    1416:	81 cf       	rjmp	.-254    	; 0x131a <main+0x140>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139
    1418:	03 e6       	ldi	r16, 0x63	; 99
    141a:	18 e3       	ldi	r17, 0x38	; 56
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:121
  return _crc_ccitt_update(_crc, _data);
}

/* JTAG Receive */
bool JTAG2::packet_receive (void) {
  uint16_t _crc = ~0;
    141c:	8f ef       	ldi	r24, 0xFF	; 255
    141e:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:142

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();

  /* 受信バッファが満たされたら CRC 確認 */
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
    1420:	0e 15       	cp	r16, r14
    1422:	1f 05       	cpc	r17, r15
    1424:	29 f0       	breq	.+10     	; 0x1430 <main+0x256>
    1426:	f8 01       	movw	r30, r16
    1428:	61 91       	ld	r22, Z+
    142a:	8f 01       	movw	r16, r30
crc16_update():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
    142c:	01 d8       	rcall	.-4094   	; 0x430 <_crc_ccitt_update(unsigned int, unsigned char)>
    142e:	f8 cf       	rjmp	.-16     	; 0x1420 <main+0x246>
wakeup_jtag():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:381
  JTAG2::answer_transfer();
}

void JTAG2::wakeup_jtag (void) {
  for (;;) {
    if (JTAG2::packet_receive()) JTAG2::process_command();
    1430:	89 2b       	or	r24, r25
    1432:	09 f0       	breq	.+2      	; 0x1436 <main+0x25c>
    1434:	ae cf       	rjmp	.-164    	; 0x1392 <main+0x1b8>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:274
  packet.body[0] = JTAG2::RSP_PARAMETER;
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
    1436:	a8 95       	wdr
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
  switch ( packet.body[0] ) {
    1438:	80 91 6b 38 	lds	r24, 0x386B	; 0x80386b <JTAG2::packet+0x8>
    143c:	88 30       	cpi	r24, 0x08	; 8
    143e:	09 f4       	brne	.+2      	; 0x1442 <main+0x268>
    1440:	c7 c1       	rjmp	.+910    	; 0x17d0 <main+0x5f6>
    1442:	d8 f5       	brcc	.+118    	; 0x14ba <main+0x2e0>
    1444:	82 30       	cpi	r24, 0x02	; 2
    1446:	09 f4       	brne	.+2      	; 0x144a <main+0x270>
    1448:	a1 c0       	rjmp	.+322    	; 0x158c <main+0x3b2>
    144a:	48 f4       	brcc	.+18     	; 0x145e <main+0x284>
    144c:	88 23       	and	r24, r24
    144e:	09 f4       	brne	.+2      	; 0x1452 <main+0x278>
    1450:	c4 c1       	rjmp	.+904    	; 0x17da <main+0x600>
    1452:	81 30       	cpi	r24, 0x01	; 1
    1454:	09 f4       	brne	.+2      	; 0x1458 <main+0x27e>
    1456:	48 c0       	rjmp	.+144    	; 0x14e8 <main+0x30e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:373
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    1458:	80 ea       	ldi	r24, 0xA0	; 160
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	d8 c0       	rjmp	.+432    	; 0x160e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    145e:	84 30       	cpi	r24, 0x04	; 4
    1460:	09 f4       	brne	.+2      	; 0x1464 <main+0x28a>
    1462:	96 c1       	rjmp	.+812    	; 0x1790 <main+0x5b6>
    1464:	08 f4       	brcc	.+2      	; 0x1468 <main+0x28e>
    1466:	d6 c0       	rjmp	.+428    	; 0x1614 <main+0x43a>
    1468:	85 30       	cpi	r24, 0x05	; 5
    146a:	b1 f7       	brne	.-20     	; 0x1458 <main+0x27e>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:233
/*
 * Dummy SIGNATURE
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
    146c:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:237
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    1470:	e1 99       	sbic	0x1c, 1	; 28
    1472:	69 c1       	rjmp	.+722    	; 0x1746 <main+0x56c>
    1474:	84 3b       	cpi	r24, 0xB4	; 180
    1476:	09 f0       	breq	.+2      	; 0x147a <main+0x2a0>
    1478:	66 c1       	rjmp	.+716    	; 0x1746 <main+0x56c>
    147a:	80 91 6d 38 	lds	r24, 0x386D	; 0x80386d <JTAG2::packet+0xa>
    147e:	81 30       	cpi	r24, 0x01	; 1
    1480:	09 f0       	breq	.+2      	; 0x1484 <main+0x2aa>
    1482:	61 c1       	rjmp	.+706    	; 0x1746 <main+0x56c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:235
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
    1484:	80 91 71 38 	lds	r24, 0x3871	; 0x803871 <JTAG2::packet+0xe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:238
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    1488:	92 e8       	ldi	r25, 0x82	; 130
    148a:	90 93 6b 38 	sts	0x386B, r25	; 0x80386b <JTAG2::packet+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:239
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    148e:	e0 99       	sbic	0x1c, 0	; 28
    1490:	3e c1       	rjmp	.+636    	; 0x170e <main+0x534>
    1492:	9f b3       	in	r25, 0x1f	; 31
    1494:	81 e0       	ldi	r24, 0x01	; 1
    1496:	91 11       	cpse	r25, r1
    1498:	80 e0       	ldi	r24, 0x00	; 0
    149a:	81 95       	neg	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:246
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? '2' : '0';
    else return false;
    JTAG2::packet.size = 2;
    149c:	22 e0       	ldi	r18, 0x02	; 2
    149e:	30 e0       	ldi	r19, 0x00	; 0
    14a0:	40 e0       	ldi	r20, 0x00	; 0
    14a2:	50 e0       	ldi	r21, 0x00	; 0
    14a4:	20 93 66 38 	sts	0x3866, r18	; 0x803866 <JTAG2::packet+0x3>
    14a8:	30 93 67 38 	sts	0x3867, r19	; 0x803867 <JTAG2::packet+0x4>
    14ac:	40 93 68 38 	sts	0x3868, r20	; 0x803868 <JTAG2::packet+0x5>
    14b0:	50 93 69 38 	sts	0x3869, r21	; 0x803869 <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:247
    JTAG2::packet.body[1] = c;
    14b4:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
    14b8:	66 c0       	rjmp	.+204    	; 0x1586 <main+0x3ac>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
    14ba:	84 31       	cpi	r24, 0x14	; 20
    14bc:	09 f4       	brne	.+2      	; 0x14c0 <main+0x2e6>
    14be:	0c c1       	rjmp	.+536    	; 0x16d8 <main+0x4fe>
    14c0:	48 f4       	brcc	.+18     	; 0x14d4 <main+0x2fa>
    14c2:	8b 30       	cpi	r24, 0x0B	; 11
    14c4:	48 f2       	brcs	.-110    	; 0x1458 <main+0x27e>
    14c6:	8d 30       	cpi	r24, 0x0D	; 13
    14c8:	10 f0       	brcs	.+4      	; 0x14ce <main+0x2f4>
    14ca:	8f 30       	cpi	r24, 0x0F	; 15
    14cc:	29 f6       	brne	.-118    	; 0x1458 <main+0x27e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:338
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
      JTAG2::set_response(JTAG2::RSP_OK);
    14ce:	80 e8       	ldi	r24, 0x80	; 128
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	9d c0       	rjmp	.+314    	; 0x160e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    14d4:	84 33       	cpi	r24, 0x34	; 52
    14d6:	09 f4       	brne	.+2      	; 0x14da <main+0x300>
    14d8:	62 c1       	rjmp	.+708    	; 0x179e <main+0x5c4>
    14da:	86 33       	cpi	r24, 0x36	; 54
    14dc:	09 f4       	brne	.+2      	; 0x14e0 <main+0x306>
    14de:	8b c1       	rjmp	.+790    	; 0x17f6 <main+0x61c>
    14e0:	85 31       	cpi	r24, 0x15	; 21
    14e2:	09 f0       	breq	.+2      	; 0x14e6 <main+0x30c>
    14e4:	b9 cf       	rjmp	.-142    	; 0x1458 <main+0x27e>
    14e6:	f3 cf       	rjmp	.-26     	; 0x14ce <main+0x2f4>
RTS_Disable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:107
void SYS::RTS_Enable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
}

void SYS::RTS_Disable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_DISABLE;
    14e8:	88 e0       	ldi	r24, 0x08	; 8
    14ea:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <UPDI::nvmprog_key+0x7f6aee>
WDT_ON():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:139
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }
    14ee:	8b e0       	ldi	r24, 0x0B	; 11
    14f0:	0e 94 d7 01 	call	0x3ae	; 0x3ae <SYS::WDT_SET(unsigned char)>
LED_Stop():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:187
}

/* 停止（UPDI許認可前）*/
/* TCA0はチャージポンプ駆動速度に変更 */
void TIM::LED_Stop (void) {
  if (TIM::mode != 0) {
    14f4:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    14f8:	88 23       	and	r24, r24
    14fa:	41 f0       	breq	.+16     	; 0x150c <main+0x332>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:188
    TIM::mode = 0;
    14fc:	10 92 50 38 	sts	0x3850, r1	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:189
    TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    1500:	81 e8       	ldi	r24, 0x81	; 129
    1502:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <UPDI::nvmprog_key+0x7f70dc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:190
    LEDG_EVOUT = EVSYS_USER_OFF_gc;
    1506:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <UPDI::nvmprog_key+0x7f6885>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:191
    digitalWrite(LEDG_PIN, LOW);
    150a:	0f 98       	cbi	0x01, 7	; 1
PG_Enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:95
/*
 * 各種ON/OFF
 */

void SYS::PG_Enable (void) {
  digitalWrite(PGEN_PIN, HIGH);
    150c:	48 9a       	sbi	0x09, 0	; 9
transfer_enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:90
  JTAG_USART.CTRLB = JTAG_USART_OFF;
}

void JTAG2::transfer_enable (void) {
  SYS::PG_Enable();
  pinMode(JTAG_TXD_PIN, OUTPUT);
    150e:	42 9a       	sbi	0x08, 2	; 8
    1510:	10 92 52 04 	sts	0x0452, r1	; 0x800452 <UPDI::nvmprog_key+0x7f6b2e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:91
  JTAG_USART.CTRLB = JTAG_USART_ON;
    1514:	88 ec       	ldi	r24, 0xC8	; 200
    1516:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6f02>
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    151a:	40 92 66 38 	sts	0x3866, r4	; 0x803866 <JTAG2::packet+0x3>
    151e:	50 92 67 38 	sts	0x3867, r5	; 0x803867 <JTAG2::packet+0x4>
    1522:	60 92 68 38 	sts	0x3868, r6	; 0x803868 <JTAG2::packet+0x5>
    1526:	70 92 69 38 	sts	0x3869, r7	; 0x803869 <JTAG2::packet+0x6>
    152a:	e8 e7       	ldi	r30, 0x78	; 120
    152c:	f0 e0       	ldi	r31, 0x00	; 0
    152e:	88 e8       	ldi	r24, 0x88	; 136
    1530:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:177
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
    1532:	24 91       	lpm	r18, Z
    1534:	29 93       	st	Y+, r18
    1536:	31 96       	adiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:176
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    1538:	8c 17       	cp	r24, r28
    153a:	9d 07       	cpc	r25, r29
    153c:	d1 f7       	brne	.-12     	; 0x1532 <main+0x358>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:182
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
  /* SERNUMから Version情報を生成する */
  uint8_t* p = (uint8_t*) &SIGROW_SERNUM0;
  uint8_t* q = (uint8_t*) &SIGROW_SERNUM4;
  uint8_t* r = (uint8_t*) &packet.body[10];
    *r++ = *q++ ^ *p++ ^ *p++;
    153e:	80 91 07 11 	lds	r24, 0x1107	; 0x801107 <UPDI::nvmprog_key+0x7f77e3>
    1542:	90 91 03 11 	lds	r25, 0x1103	; 0x801103 <UPDI::nvmprog_key+0x7f77df>
    1546:	89 27       	eor	r24, r25
    1548:	90 91 04 11 	lds	r25, 0x1104	; 0x801104 <UPDI::nvmprog_key+0x7f77e0>
    154c:	89 27       	eor	r24, r25
    154e:	80 93 75 38 	sts	0x3875, r24	; 0x803875 <JTAG2::packet+0x12>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:183
    *r++ = *q++ ^ *p++ ^ *p++;
    1552:	80 91 08 11 	lds	r24, 0x1108	; 0x801108 <UPDI::nvmprog_key+0x7f77e4>
    1556:	90 91 05 11 	lds	r25, 0x1105	; 0x801105 <UPDI::nvmprog_key+0x7f77e1>
    155a:	89 27       	eor	r24, r25
    155c:	90 91 06 11 	lds	r25, 0x1106	; 0x801106 <UPDI::nvmprog_key+0x7f77e2>
    1560:	89 27       	eor	r24, r25
    1562:	80 93 76 38 	sts	0x3876, r24	; 0x803876 <JTAG2::packet+0x13>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:184
    *r++ = *q++;
    1566:	80 91 09 11 	lds	r24, 0x1109	; 0x801109 <UPDI::nvmprog_key+0x7f77e5>
    156a:	80 93 77 38 	sts	0x3877, r24	; 0x803877 <JTAG2::packet+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:185
    *r++ = *q++;
    156e:	80 91 0a 11 	lds	r24, 0x110A	; 0x80110a <UPDI::nvmprog_key+0x7f77e6>
    1572:	80 93 78 38 	sts	0x3878, r24	; 0x803878 <JTAG2::packet+0x15>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:186
    *r++ = *q++;
    1576:	80 91 0b 11 	lds	r24, 0x110B	; 0x80110b <UPDI::nvmprog_key+0x7f77e7>
    157a:	80 93 79 38 	sts	0x3879, r24	; 0x803879 <JTAG2::packet+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:187
    *r++ = *q++;
    157e:	80 91 0c 11 	lds	r24, 0x110C	; 0x80110c <UPDI::nvmprog_key+0x7f77e8>
    1582:	80 93 7a 38 	sts	0x387A, r24	; 0x80387a <JTAG2::packet+0x17>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:376
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    }
  }
  JTAG2::answer_transfer();
    1586:	0e 94 2a 02 	call	0x454	; 0x454 <JTAG2::answer_transfer()>
    158a:	03 cf       	rjmp	.-506    	; 0x1392 <main+0x1b8>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:193
  JTAG2::answer_transfer();
}

/* CMND_SET_PARAMETER */
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
    158c:	f0 90 6d 38 	lds	r15, 0x386D	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:194
  switch (packet.body[1]) {
    1590:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
    1594:	83 30       	cpi	r24, 0x03	; 3
    1596:	b1 f1       	breq	.+108    	; 0x1604 <main+0x42a>
    1598:	85 30       	cpi	r24, 0x05	; 5
    159a:	09 f0       	breq	.+2      	; 0x159e <main+0x3c4>
    159c:	98 cf       	rjmp	.-208    	; 0x14ce <main+0x2f4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:203
      break;
    }
    /* JTAGインタフェース速度 */
    case JTAG2::PARAM_BAUD_RATE : {
      /* 対応範囲確認 */
      if ((param_val >= JTAG2::BAUD_LOWER) && (param_val <= JTAG2::BAUD_UPPER)) {
    159e:	8e ef       	ldi	r24, 0xFE	; 254
    15a0:	8f 0d       	add	r24, r15
    15a2:	88 31       	cpi	r24, 0x18	; 24
    15a4:	90 f5       	brcc	.+100    	; 0x160a <main+0x430>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:204
        uint16_t baud = pgm_read_word( &BAUD_TABLE[param_val] );
    15a6:	8f 2d       	mov	r24, r15
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	fc 01       	movw	r30, r24
    15ac:	ee 0f       	add	r30, r30
    15ae:	ff 1f       	adc	r31, r31
    15b0:	eb 56       	subi	r30, 0x6B	; 107
    15b2:	ff 4f       	sbci	r31, 0xFF	; 255
    15b4:	c5 91       	lpm	r28, Z+
    15b6:	d4 91       	lpm	r29, Z
    15b8:	8e 01       	movw	r16, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:205
        if (baud) {
    15ba:	20 97       	sbiw	r28, 0x00	; 0
    15bc:	31 f1       	breq	.+76     	; 0x160a <main+0x430>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:207
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
    15be:	80 93 33 38 	sts	0x3833, r24	; 0x803833 <JTAG2::PARAM_BAUD_RATE_VAL>
    15c2:	90 93 34 38 	sts	0x3834, r25	; 0x803834 <JTAG2::PARAM_BAUD_RATE_VAL+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:208
          JTAG2::set_response(JTAG2::RSP_OK);
    15c6:	80 e8       	ldi	r24, 0x80	; 128
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:209
          JTAG2::answer_transfer();
    15ce:	0e 94 2a 02 	call	0x454	; 0x454 <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    15d2:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6f00>
    15d6:	86 ff       	sbrs	r24, 6
    15d8:	fc cf       	rjmp	.-8      	; 0x15d2 <main+0x3f8>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:211
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
          JTAG2::set_response(JTAG2::RSP_OK);
          JTAG2::answer_transfer();
          JTAG2::flush();
          if (baud < 64) {
    15da:	c0 34       	cpi	r28, 0x40	; 64
    15dc:	d1 05       	cpc	r29, r1
    15de:	30 f4       	brcc	.+12     	; 0x15ec <main+0x412>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:212
            JTAG_USART.CTRLB = JTAG_USART_DBLON;
    15e0:	8a ec       	ldi	r24, 0xCA	; 202
    15e2:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6f02>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:213
            baud <<= 1;
    15e6:	8e 01       	movw	r16, r28
    15e8:	00 0f       	add	r16, r16
    15ea:	11 1f       	adc	r17, r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:215
          }
          JTAG_USART.BAUD = baud;
    15ec:	00 93 28 08 	sts	0x0828, r16	; 0x800828 <UPDI::nvmprog_key+0x7f6f04>
    15f0:	10 93 29 08 	sts	0x0829, r17	; 0x800829 <UPDI::nvmprog_key+0x7f6f05>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:217
          /* terminal mode を許可する速度 */
          if (param_val == JTAG2::BAUD_38400 || param_val == JTAG2::BAUD_666666)
    15f4:	f5 e0       	ldi	r31, 0x05	; 5
    15f6:	ff 16       	cp	r15, r31
    15f8:	19 f0       	breq	.+6      	; 0x1600 <main+0x426>
    15fa:	28 e1       	ldi	r18, 0x18	; 24
    15fc:	f2 12       	cpse	r15, r18
    15fe:	c9 ce       	rjmp	.-622    	; 0x1392 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:218
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
    1600:	e6 9a       	sbi	0x1c, 6	; 28
    1602:	c7 ce       	rjmp	.-626    	; 0x1392 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:197
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
  switch (packet.body[1]) {
    /* エミュレーションモード */
    case JTAG2::PARAM_EMU_MODE : {
      PARAM_EMU_MODE_VAL = param_val;
    1604:	f0 92 4f 38 	sts	0x384F, r15	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
    1608:	62 cf       	rjmp	.-316    	; 0x14ce <main+0x2f4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:223
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
          return false;
        }
      }
      /* 範囲違反は失敗応答 */
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_VALUE);
    160a:	86 ea       	ldi	r24, 0xA6	; 166
    160c:	90 e0       	ldi	r25, 0x00	; 0
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:373
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    160e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <JTAG2::set_response(JTAG2::jtag_response_e)>
    1612:	b9 cf       	rjmp	.-142    	; 0x1586 <main+0x3ac>
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    1614:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
    1618:	83 30       	cpi	r24, 0x03	; 3
    161a:	09 f4       	brne	.+2      	; 0x161e <main+0x444>
    161c:	51 c0       	rjmp	.+162    	; 0x16c0 <main+0x4e6>
    161e:	38 f4       	brcc	.+14     	; 0x162e <main+0x454>
    1620:	81 30       	cpi	r24, 0x01	; 1
    1622:	81 f1       	breq	.+96     	; 0x1684 <main+0x4aa>
    1624:	82 30       	cpi	r24, 0x02	; 2
    1626:	b9 f1       	breq	.+110    	; 0x1696 <main+0x4bc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:265
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
    1628:	81 ea       	ldi	r24, 0xA1	; 161
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	f0 cf       	rjmp	.-32     	; 0x160e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    162e:	85 30       	cpi	r24, 0x05	; 5
    1630:	09 f4       	brne	.+2      	; 0x1634 <main+0x45a>
    1632:	4f c0       	rjmp	.+158    	; 0x16d2 <main+0x4f8>
    1634:	86 30       	cpi	r24, 0x06	; 6
    1636:	c1 f7       	brne	.-16     	; 0x1628 <main+0x44e>
get_vcc():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:69
/*
 * 自己VCC測定
 */

uint16_t SYS::get_vcc (void) {
  ADC0_CTRLA = ADC_ENABLE_bm;
    1638:	81 e0       	ldi	r24, 0x01	; 1
    163a:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <UPDI::nvmprog_key+0x7f6cdc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:70
  ADC0_CTRLB = ADC_PRESC_DIV2_gc;
    163e:	10 92 01 06 	sts	0x0601, r1	; 0x800601 <UPDI::nvmprog_key+0x7f6cdd>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:71
  ADC0_CTRLC = ADC_REFSEL_1024MV_gc | ((F_CPU / 1000000UL) << ADC_TIMEBASE_gp);
    1642:	84 e5       	ldi	r24, 0x54	; 84
    1644:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <UPDI::nvmprog_key+0x7f6cde>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:72
  ADC0_CTRLE = 17; /* (SAMPDUR + 0.5) * fCLK_ADC = 10.5 µs sample duration */
    1648:	81 e1       	ldi	r24, 0x11	; 17
    164a:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <UPDI::nvmprog_key+0x7f6ce4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:73
  ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD/10 */
    164e:	91 e3       	ldi	r25, 0x31	; 49
    1650:	90 93 0c 06 	sts	0x060C, r25	; 0x80060c <UPDI::nvmprog_key+0x7f6ce8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:74
  ADC0_COMMAND = ADC_MODE_SINGLE_12BIT_gc | ADC_START_IMMEDIATE_gc;
    1654:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <UPDI::nvmprog_key+0x7f6ce6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:75
  loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
    1658:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <UPDI::nvmprog_key+0x7f6ce1>
    165c:	81 ff       	sbrs	r24, 1
    165e:	fc cf       	rjmp	.-8      	; 0x1658 <main+0x47e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:76
  uint16_t adc_reading = ADC0_SAMPLE;
    1660:	80 91 14 06 	lds	r24, 0x0614	; 0x800614 <UPDI::nvmprog_key+0x7f6cf0>
    1664:	90 91 15 06 	lds	r25, 0x0615	; 0x800615 <UPDI::nvmprog_key+0x7f6cf1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:77
  adc_reading += adc_reading + (adc_reading >> 1);  /* x2.5 */
    1668:	9c 01       	movw	r18, r24
    166a:	36 95       	lsr	r19
    166c:	27 95       	ror	r18
    166e:	88 0f       	add	r24, r24
    1670:	99 1f       	adc	r25, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:78
  ADC0_CTRLA = 0;
    1672:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <UPDI::nvmprog_key+0x7f6cdc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:77
  ADC0_CTRLE = 17; /* (SAMPDUR + 0.5) * fCLK_ADC = 10.5 µs sample duration */
  ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD/10 */
  ADC0_COMMAND = ADC_MODE_SINGLE_12BIT_gc | ADC_START_IMMEDIATE_gc;
  loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
  uint16_t adc_reading = ADC0_SAMPLE;
  adc_reading += adc_reading + (adc_reading >> 1);  /* x2.5 */
    1676:	82 0f       	add	r24, r18
    1678:	93 1f       	adc	r25, r19
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:260
      packet.body[1] = PARAM_BAUD_RATE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
    167a:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
    167e:	90 93 6d 38 	sts	0x386D, r25	; 0x80386d <JTAG2::packet+0xa>
    1682:	04 c0       	rjmp	.+8      	; 0x168c <main+0x4b2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:236
/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    case JTAG2::PARAM_HW_VER : {
      packet.body[1] = sign_on_resp[5];
    1684:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:237
      packet.body[2] = sign_on_resp[9];
    1688:	80 93 6d 38 	sts	0x386D, r24	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    168c:	c0 92 66 38 	sts	0x3866, r12	; 0x803866 <JTAG2::packet+0x3>
    1690:	d0 92 67 38 	sts	0x3867, r13	; 0x803867 <JTAG2::packet+0x4>
    1694:	11 c0       	rjmp	.+34     	; 0x16b8 <main+0x4de>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:242
      packet.body[2] = sign_on_resp[9];
      packet.size_word[0] = 3;
      break;
    }
    case JTAG2::PARAM_FW_VER : {
      packet.body[1] = sign_on_resp[3];
    1696:	91 e0       	ldi	r25, 0x01	; 1
    1698:	90 93 6c 38 	sts	0x386C, r25	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:243
      packet.body[2] = sign_on_resp[4];
    169c:	80 93 6d 38 	sts	0x386D, r24	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:244
      packet.body[3] = sign_on_resp[7];
    16a0:	85 e3       	ldi	r24, 0x35	; 53
    16a2:	80 93 6e 38 	sts	0x386E, r24	; 0x80386e <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:245
      packet.body[4] = sign_on_resp[8];
    16a6:	87 e0       	ldi	r24, 0x07	; 7
    16a8:	80 93 6f 38 	sts	0x386F, r24	; 0x80386f <JTAG2::packet+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:246
      packet.size_word[0] = 5;
    16ac:	45 e0       	ldi	r20, 0x05	; 5
    16ae:	50 e0       	ldi	r21, 0x00	; 0
    16b0:	40 93 66 38 	sts	0x3866, r20	; 0x803866 <JTAG2::packet+0x3>
    16b4:	50 93 67 38 	sts	0x3867, r21	; 0x803867 <JTAG2::packet+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:269
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
      return;
    }
  }
  packet.body[0] = JTAG2::RSP_PARAMETER;
    16b8:	81 e8       	ldi	r24, 0x81	; 129
    16ba:	80 93 6b 38 	sts	0x386B, r24	; 0x80386b <JTAG2::packet+0x8>
    16be:	63 cf       	rjmp	.-314    	; 0x1586 <main+0x3ac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:250
      packet.body[4] = sign_on_resp[8];
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
    16c0:	80 91 4f 38 	lds	r24, 0x384F	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    16c4:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:256
      packet.size_word[0] = 2;
    16c8:	20 92 66 38 	sts	0x3866, r2	; 0x803866 <JTAG2::packet+0x3>
    16cc:	30 92 67 38 	sts	0x3867, r3	; 0x803867 <JTAG2::packet+0x4>
    16d0:	f3 cf       	rjmp	.-26     	; 0x16b8 <main+0x4de>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    16d2:	80 91 33 38 	lds	r24, 0x3833	; 0x803833 <JTAG2::PARAM_BAUD_RATE_VAL>
    16d6:	f6 cf       	rjmp	.-20     	; 0x16c4 <main+0x4ea>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:293
    case JTAG2::CMND_GET_PARAMETER : {
      JTAG2::get_parameter();
      break;
    }
    case JTAG2::CMND_ENTER_PROGMODE : {
      uint8_t c = UPDI_CONTROL;
    16d8:	cc b3       	in	r28, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:294
      UPDI::updi_activate();
    16da:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <UPDI::updi_activate()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:295
      JTAG2::set_response(JTAG2::RSP_OK);
    16de:	80 e8       	ldi	r24, 0x80	; 128
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:296
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    16e6:	c0 fd       	sbrc	r28, 0
    16e8:	0a c0       	rjmp	.+20     	; 0x16fe <main+0x524>
    16ea:	e0 9b       	sbis	0x1c, 0	; 28
    16ec:	08 c0       	rjmp	.+16     	; 0x16fe <main+0x524>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:297
        packet.size = 19;
    16ee:	80 92 66 38 	sts	0x3866, r8	; 0x803866 <JTAG2::packet+0x3>
    16f2:	90 92 67 38 	sts	0x3867, r9	; 0x803867 <JTAG2::packet+0x4>
    16f6:	a0 92 68 38 	sts	0x3868, r10	; 0x803868 <JTAG2::packet+0x5>
    16fa:	b0 92 69 38 	sts	0x3869, r11	; 0x803869 <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:298
      TIM::LED_Blink();
    16fe:	0e 94 9d 01 	call	0x33a	; 0x33a <TIM::LED_Blink()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:300
      /* terminal mode 許可時は WDTを無効にする */
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) SYS::WDT_OFF();
    1702:	e6 9b       	sbis	0x1c, 6	; 28
    1704:	40 cf       	rjmp	.-384    	; 0x1586 <main+0x3ac>
WDT_OFF():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:137
void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }
    1706:	80 e0       	ldi	r24, 0x00	; 0
    1708:	0e 94 d7 01 	call	0x3ae	; 0x3ae <SYS::WDT_SET(unsigned char)>
    170c:	3c cf       	rjmp	.-392    	; 0x1586 <main+0x3ac>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:240
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    170e:	88 23       	and	r24, r24
    1710:	81 f0       	breq	.+32     	; 0x1732 <main+0x558>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:241
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    1712:	81 30       	cpi	r24, 0x01	; 1
    1714:	31 f4       	brne	.+12     	; 0x1722 <main+0x548>
    1716:	e9 99       	sbic	0x1d, 1	; 29
    1718:	0e c0       	rjmp	.+28     	; 0x1736 <main+0x55c>
    171a:	e8 99       	sbic	0x1d, 0	; 29
    171c:	0e c0       	rjmp	.+28     	; 0x173a <main+0x560>
main():
    171e:	84 e7       	ldi	r24, 0x74	; 116
    1720:	bd ce       	rjmp	.-646    	; 0x149c <main+0x2c2>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:243
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    1722:	82 30       	cpi	r24, 0x02	; 2
    1724:	81 f4       	brne	.+32     	; 0x1746 <main+0x56c>
    1726:	ea 99       	sbic	0x1d, 2	; 29
    1728:	0a c0       	rjmp	.+20     	; 0x173e <main+0x564>
    172a:	e9 99       	sbic	0x1d, 1	; 29
    172c:	0a c0       	rjmp	.+20     	; 0x1742 <main+0x568>
main():
    172e:	80 e3       	ldi	r24, 0x30	; 48
    1730:	b5 ce       	rjmp	.-662    	; 0x149c <main+0x2c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:240
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    1732:	8e e1       	ldi	r24, 0x1E	; 30
    1734:	b3 ce       	rjmp	.-666    	; 0x149c <main+0x2c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:241
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    1736:	81 e4       	ldi	r24, 0x41	; 65
    1738:	b1 ce       	rjmp	.-670    	; 0x149c <main+0x2c2>
    173a:	8d e6       	ldi	r24, 0x6D	; 109
    173c:	af ce       	rjmp	.-674    	; 0x149c <main+0x2c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:243
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    173e:	83 e3       	ldi	r24, 0x33	; 51
    1740:	ad ce       	rjmp	.-678    	; 0x149c <main+0x2c2>
    1742:	82 e3       	ldi	r24, 0x32	; 50
    1744:	ab ce       	rjmp	.-682    	; 0x149c <main+0x2c2>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:307
    }
    case JTAG2::CMND_READ_MEMORY : {
      /* 非PROG でも SIG要求にはダミー応答する */
      if (UPDI::check_sig()) break;
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();
    1746:	e6 99       	sbic	0x1c, 6	; 28
    1748:	17 c0       	rjmp	.+46     	; 0x1778 <main+0x59e>
LED_TCB1():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
    174a:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    174e:	84 30       	cpi	r24, 0x04	; 4
    1750:	99 f0       	breq	.+38     	; 0x1778 <main+0x59e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
    1752:	84 e0       	ldi	r24, 0x04	; 4
    1754:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
    1758:	45 e1       	ldi	r20, 0x15	; 21
    175a:	51 e0       	ldi	r21, 0x01	; 1
    175c:	40 93 9c 0a 	sts	0x0A9C, r20	; 0x800a9c <UPDI::nvmprog_key+0x7f7178>
    1760:	50 93 9d 0a 	sts	0x0A9D, r21	; 0x800a9d <UPDI::nvmprog_key+0x7f7179>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
    1764:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7176>
    1768:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7177>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    176c:	8f e4       	ldi	r24, 0x4F	; 79
    176e:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f716c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
    1772:	81 e0       	ldi	r24, 0x01	; 1
    1774:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6885>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:312

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    1778:	e1 99       	sbic	0x1c, 1	; 28
    177a:	05 c0       	rjmp	.+10     	; 0x1786 <main+0x5ac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:311
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
    177c:	e5 99       	sbic	0x1c, 5	; 28
    177e:	03 c0       	rjmp	.+6      	; 0x1786 <main+0x5ac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:313
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
    1780:	85 ea       	ldi	r24, 0xA5	; 165
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	44 cf       	rjmp	.-376    	; 0x160e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:312
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    1786:	81 e0       	ldi	r24, 0x01	; 1
    1788:	a4 d8       	rcall	.-3768   	; 0x8d2 <UPDI::runtime(unsigned char)>
    178a:	81 11       	cpse	r24, r1
    178c:	fc ce       	rjmp	.-520    	; 0x1586 <main+0x3ac>
    178e:	f8 cf       	rjmp	.-16     	; 0x1780 <main+0x5a6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:319
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_WRITE_MEMORY)
    1790:	82 e0       	ldi	r24, 0x02	; 2
    1792:	9f d8       	rcall	.-3778   	; 0x8d2 <UPDI::runtime(unsigned char)>
    1794:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:318
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
    1796:	9b ce       	rjmp	.-714    	; 0x14ce <main+0x2f4>
main():
    1798:	82 ea       	ldi	r24, 0xA2	; 162
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	38 cf       	rjmp	.-400    	; 0x160e <main+0x434>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:326
        : JTAG2::RSP_ILLEGAL_MEMORY_TYPE
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
    179e:	cc b3       	in	r28, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:328
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
    17a0:	83 e0       	ldi	r24, 0x03	; 3
    17a2:	97 d8       	rcall	.-3794   	; 0x8d2 <UPDI::runtime(unsigned char)>
    17a4:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:327
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    17a6:	11 c0       	rjmp	.+34     	; 0x17ca <main+0x5f0>
main():
    17a8:	85 ea       	ldi	r24, 0xA5	; 165
    17aa:	90 e0       	ldi	r25, 0x00	; 0
process_command():
    17ac:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <JTAG2::set_response(JTAG2::jtag_response_e)>
    17b0:	c0 fd       	sbrc	r28, 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:332
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
        ? JTAG2::RSP_OK
        : JTAG2::RSP_ILLEGAL_MCU_STATE
      );
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    17b2:	e9 ce       	rjmp	.-558    	; 0x1586 <main+0x3ac>
    17b4:	e0 9b       	sbis	0x1c, 0	; 28
    17b6:	e7 ce       	rjmp	.-562    	; 0x1586 <main+0x3ac>
    17b8:	80 92 66 38 	sts	0x3866, r8	; 0x803866 <JTAG2::packet+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:333
        packet.size = 19;
    17bc:	90 92 67 38 	sts	0x3867, r9	; 0x803867 <JTAG2::packet+0x4>
    17c0:	a0 92 68 38 	sts	0x3868, r10	; 0x803868 <JTAG2::packet+0x5>
    17c4:	b0 92 69 38 	sts	0x3869, r11	; 0x803869 <JTAG2::packet+0x6>
    17c8:	de ce       	rjmp	.-580    	; 0x1586 <main+0x3ac>
main():
    17ca:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:327
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	ee cf       	rjmp	.-36     	; 0x17ac <main+0x5d2>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:337
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
    17d0:	e1 9b       	sbis	0x1c, 1	; 28
    17d2:	7d ce       	rjmp	.-774    	; 0x14ce <main+0x2f4>
    17d4:	84 e0       	ldi	r24, 0x04	; 4
    17d6:	7d d8       	rcall	.-3846   	; 0x8d2 <UPDI::runtime(unsigned char)>
    17d8:	7a ce       	rjmp	.-780    	; 0x14ce <main+0x2f4>
    17da:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:342
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    case JTAG2::CMND_SIGN_OFF : {
      JTAG2::set_response(JTAG2::RSP_OK);
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <JTAG2::set_response(JTAG2::jtag_response_e)>
    17e2:	0e 94 2a 02 	call	0x454	; 0x454 <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:343
      JTAG2::answer_transfer();
    17e6:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6f00>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    17ea:	86 ff       	sbrs	r24, 6
    17ec:	fc cf       	rjmp	.-8      	; 0x17e6 <main+0x60c>
WDT_REBOOT():
    17ee:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:142

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }

void SYS::WDT_REBOOT (void) {
  WDT_SET(WDT_PERIOD_8CLK_gc);
    17f0:	0e 94 d7 01 	call	0x3ae	; 0x3ae <SYS::WDT_SET(unsigned char)>
    17f4:	ff cf       	rjmp	.-2      	; 0x17f4 <main+0x61a>
process_command():
    17f6:	80 91 77 38 	lds	r24, 0x3877	; 0x803877 <JTAG2::packet+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:352
      SYS::WDT_REBOOT();
      /* Session Complete */
    }
    // Ex) struct xmega_device_desc
    case JTAG2::CMND_SET_XMEGA_PARAMS : {
      NVM::nvm_eeprom_offset   = _CAPS32(packet.body[12])->dword;
    17fa:	90 91 78 38 	lds	r25, 0x3878	; 0x803878 <JTAG2::packet+0x15>
    17fe:	a0 91 79 38 	lds	r26, 0x3879	; 0x803879 <JTAG2::packet+0x16>
    1802:	b0 91 7a 38 	lds	r27, 0x387A	; 0x80387a <JTAG2::packet+0x17>
    1806:	80 93 5f 38 	sts	0x385F, r24	; 0x80385f <NVM::nvm_eeprom_offset>
    180a:	90 93 60 38 	sts	0x3860, r25	; 0x803860 <NVM::nvm_eeprom_offset+0x1>
    180e:	a0 93 61 38 	sts	0x3861, r26	; 0x803861 <NVM::nvm_eeprom_offset+0x2>
    1812:	b0 93 62 38 	sts	0x3862, r27	; 0x803862 <NVM::nvm_eeprom_offset+0x3>
    1816:	80 91 83 38 	lds	r24, 0x3883	; 0x803883 <JTAG2::packet+0x20>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:354
    //NVM::nvm_fuse_offset     = _CAPS32(packet.body[16])->dword;
      NVM::nvm_user_sig_offset = _CAPS32(packet.body[24])->dword;
    181a:	90 91 84 38 	lds	r25, 0x3884	; 0x803884 <JTAG2::packet+0x21>
    181e:	a0 91 85 38 	lds	r26, 0x3885	; 0x803885 <JTAG2::packet+0x22>
    1822:	b0 91 86 38 	lds	r27, 0x3886	; 0x803886 <JTAG2::packet+0x23>
    1826:	80 93 5b 38 	sts	0x385B, r24	; 0x80385b <NVM::nvm_user_sig_offset>
    182a:	90 93 5c 38 	sts	0x385C, r25	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
    182e:	a0 93 5d 38 	sts	0x385D, r26	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
    1832:	b0 93 5e 38 	sts	0x385E, r27	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
    1836:	80 91 8b 38 	lds	r24, 0x388B	; 0x80388b <JTAG2::packet+0x28>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:355
      NVM::nvm_data_offset     = _CAPS32(packet.body[32])->dword;
    183a:	90 91 8c 38 	lds	r25, 0x388C	; 0x80388c <JTAG2::packet+0x29>
    183e:	a0 91 8d 38 	lds	r26, 0x388D	; 0x80388d <JTAG2::packet+0x2a>
    1842:	b0 91 8e 38 	lds	r27, 0x388E	; 0x80388e <JTAG2::packet+0x2b>
    1846:	80 93 57 38 	sts	0x3857, r24	; 0x803857 <NVM::nvm_data_offset>
    184a:	90 93 58 38 	sts	0x3858, r25	; 0x803858 <NVM::nvm_data_offset+0x1>
    184e:	a0 93 59 38 	sts	0x3859, r26	; 0x803859 <NVM::nvm_data_offset+0x2>
    1852:	b0 93 5a 38 	sts	0x385A, r27	; 0x80385a <NVM::nvm_data_offset+0x3>
    1856:	80 91 95 38 	lds	r24, 0x3895	; 0x803895 <JTAG2::packet+0x32>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:356
      NVM::flash_page_size     = _CAPS16(packet.body[42])->word;
    185a:	90 91 96 38 	lds	r25, 0x3896	; 0x803896 <JTAG2::packet+0x33>
    185e:	80 93 55 38 	sts	0x3855, r24	; 0x803855 <NVM::flash_page_size>
    1862:	90 93 56 38 	sts	0x3856, r25	; 0x803856 <NVM::flash_page_size+0x1>
    1866:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:359
    //NVM::eeprom_page_size    = packet.body[46];
      // AVR_DA/DB/DD/EA
      if (_CAPS32(NVM::nvm_user_sig_offset)->bytes[0] == 0x80) {
    186a:	80 38       	cpi	r24, 0x80	; 128
    186c:	09 f0       	breq	.+2      	; 0x1870 <main+0x696>
    186e:	2f ce       	rjmp	.-930    	; 0x14ce <main+0x2f4>
    1870:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:360
        NVM::nvm_flash_offset  = 0x800000;
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	a0 e8       	ldi	r26, 0x80	; 128
    1876:	b0 e0       	ldi	r27, 0x00	; 0
    1878:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
    187c:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
    1880:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
    1884:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
    1888:	e9 9a       	sbi	0x1d, 1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:361
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
    188a:	21 ce       	rjmp	.-958    	; 0x14ce <main+0x2f4>

0000188c <setjmp>:
setjmp():
    188c:	dc 01       	movw	r26, r24
    188e:	2d 92       	st	X+, r2
    1890:	3d 92       	st	X+, r3
    1892:	4d 92       	st	X+, r4
    1894:	5d 92       	st	X+, r5
    1896:	6d 92       	st	X+, r6
    1898:	7d 92       	st	X+, r7
    189a:	8d 92       	st	X+, r8
    189c:	9d 92       	st	X+, r9
    189e:	ad 92       	st	X+, r10
    18a0:	bd 92       	st	X+, r11
    18a2:	cd 92       	st	X+, r12
    18a4:	dd 92       	st	X+, r13
    18a6:	ed 92       	st	X+, r14
    18a8:	fd 92       	st	X+, r15
    18aa:	0d 93       	st	X+, r16
    18ac:	1d 93       	st	X+, r17
    18ae:	cd 93       	st	X+, r28
    18b0:	dd 93       	st	X+, r29
    18b2:	ff 91       	pop	r31
    18b4:	ef 91       	pop	r30
    18b6:	8d b7       	in	r24, 0x3d	; 61
    18b8:	8d 93       	st	X+, r24
    18ba:	8e b7       	in	r24, 0x3e	; 62
    18bc:	8d 93       	st	X+, r24
    18be:	8f b7       	in	r24, 0x3f	; 63
    18c0:	8d 93       	st	X+, r24
    18c2:	ed 93       	st	X+, r30
    18c4:	fd 93       	st	X+, r31
    18c6:	88 27       	eor	r24, r24
    18c8:	99 27       	eor	r25, r25
    18ca:	09 94       	ijmp

000018cc <longjmp>:
longjmp():
    18cc:	dc 01       	movw	r26, r24
    18ce:	cb 01       	movw	r24, r22
    18d0:	81 30       	cpi	r24, 0x01	; 1
    18d2:	91 05       	cpc	r25, r1
    18d4:	81 1d       	adc	r24, r1
    18d6:	2d 90       	ld	r2, X+
    18d8:	3d 90       	ld	r3, X+
    18da:	4d 90       	ld	r4, X+
    18dc:	5d 90       	ld	r5, X+
    18de:	6d 90       	ld	r6, X+
    18e0:	7d 90       	ld	r7, X+
    18e2:	8d 90       	ld	r8, X+
    18e4:	9d 90       	ld	r9, X+
    18e6:	ad 90       	ld	r10, X+
    18e8:	bd 90       	ld	r11, X+
    18ea:	cd 90       	ld	r12, X+
    18ec:	dd 90       	ld	r13, X+
    18ee:	ed 90       	ld	r14, X+
    18f0:	fd 90       	ld	r15, X+
    18f2:	0d 91       	ld	r16, X+
    18f4:	1d 91       	ld	r17, X+
    18f6:	cd 91       	ld	r28, X+
    18f8:	dd 91       	ld	r29, X+
    18fa:	ed 91       	ld	r30, X+
    18fc:	fd 91       	ld	r31, X+
    18fe:	0d 90       	ld	r0, X+
    1900:	0f be       	out	0x3f, r0	; 63
    1902:	ed bf       	out	0x3d, r30	; 61
    1904:	fe bf       	out	0x3e, r31	; 62
    1906:	ed 91       	ld	r30, X+
    1908:	fd 91       	ld	r31, X+
    190a:	09 94       	ijmp

0000190c <_exit>:
exit():
    190c:	f8 94       	cli

0000190e <__stop_program>:
__stop_program():
    190e:	ff cf       	rjmp	.-2      	; 0x190e <__stop_program>

Disassembly of section .nvmem:

00001966 <.nvmem>:
	...
