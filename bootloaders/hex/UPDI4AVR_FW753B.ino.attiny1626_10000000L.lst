
/var/folders/4m/5plmh1yn7tjd65bkjnn6yc5c0000gn/T/arduino_build_897671/UPDI4AVR_FW753B.ino.elf:     file format elf32-avr


Disassembly of section .data:

00803800 <__data_start>:
__data_start():
  803800:	55 c8       	rjmp	.-3926   	; 0x8028ac <UPDI::nvmprog_key+0x7f8f7a>
  803802:	00 c3       	rjmp	.+1536   	; 0x803e04 <__bss_end+0x38c>
  803804:	04 55       	subi	r16, 0x54	; 84

00803805 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat>:
  803805:	55 a0 00 55 04                                      U..U.

0080380a <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr>:
  80380a:	55 6a 00 00 00 00                                   Uj....

00803810 <UPDI::st8(unsigned long, unsigned char)::set_ptr>:
  803810:	55 48 00 00 00 00                                   UH....

00803816 <UPDI::ld8(unsigned long)::set_ptr>:
  803816:	55 08 00 00 00 00                                   U.....

0080381c <UPDI::is_cs_stat(unsigned char, unsigned char)::set_ptr>:
  80381c:	55 00                                               U.

0080381e <NVM::set_repeat_rsd>:
  80381e:	55 c2 0e 55 a0 00 55 65                             U..U..Ue

00803826 <NVM::set_repeat>:
  803826:	55 a0 00 55 64                                      U..Ud

0080382b <NVM::set_ptr>:
  80382b:	55 6a 00 00 00 00                                   Uj....

00803831 <UPDI::enter_updi(bool)::set_ptr>:
  803831:	55 e5                                               U.

00803833 <JTAG2::PARAM_BAUD_RATE_VAL>:
  803833:	04 00                                               ..

00803835 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr>:
  803835:	55 00 00                                            U..

Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	67 c0       	rjmp	.+206    	; 0xd0 <__ctors_end>
       2:	00 00       	nop
../../../../crt1/gcrt1.S:67
       4:	82 c0       	rjmp	.+260    	; 0x10a <__bad_interrupt>
       6:	00 00       	nop
../../../../crt1/gcrt1.S:68
       8:	80 c0       	rjmp	.+256    	; 0x10a <__bad_interrupt>
       a:	00 00       	nop
../../../../crt1/gcrt1.S:69
       c:	7e c0       	rjmp	.+252    	; 0x10a <__bad_interrupt>
       e:	00 00       	nop
../../../../crt1/gcrt1.S:70
      10:	7c c0       	rjmp	.+248    	; 0x10a <__bad_interrupt>
      12:	00 00       	nop
../../../../crt1/gcrt1.S:71
      14:	7a c0       	rjmp	.+244    	; 0x10a <__bad_interrupt>
      16:	00 00       	nop
../../../../crt1/gcrt1.S:72
      18:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__vector_6>
../../../../crt1/gcrt1.S:73
      1c:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__vector_7>
../../../../crt1/gcrt1.S:74
      20:	74 c0       	rjmp	.+232    	; 0x10a <__bad_interrupt>
      22:	00 00       	nop
../../../../crt1/gcrt1.S:75
      24:	72 c0       	rjmp	.+228    	; 0x10a <__bad_interrupt>
      26:	00 00       	nop
../../../../crt1/gcrt1.S:76
      28:	70 c0       	rjmp	.+224    	; 0x10a <__bad_interrupt>
      2a:	00 00       	nop
../../../../crt1/gcrt1.S:77
      2c:	6e c0       	rjmp	.+220    	; 0x10a <__bad_interrupt>
      2e:	00 00       	nop
../../../../crt1/gcrt1.S:78
      30:	6c c0       	rjmp	.+216    	; 0x10a <__bad_interrupt>
      32:	00 00       	nop
../../../../crt1/gcrt1.S:79
      34:	0c 94 96 08 	jmp	0x112c	; 0x112c <__vector_13>
../../../../crt1/gcrt1.S:80
      38:	68 c0       	rjmp	.+208    	; 0x10a <__bad_interrupt>
      3a:	00 00       	nop
../../../../crt1/gcrt1.S:81
      3c:	66 c0       	rjmp	.+204    	; 0x10a <__bad_interrupt>
      3e:	00 00       	nop
../../../../crt1/gcrt1.S:82
      40:	64 c0       	rjmp	.+200    	; 0x10a <__bad_interrupt>
      42:	00 00       	nop
../../../../crt1/gcrt1.S:83
      44:	62 c0       	rjmp	.+196    	; 0x10a <__bad_interrupt>
      46:	00 00       	nop
../../../../crt1/gcrt1.S:84
      48:	60 c0       	rjmp	.+192    	; 0x10a <__bad_interrupt>
      4a:	00 00       	nop
../../../../crt1/gcrt1.S:85
      4c:	5e c0       	rjmp	.+188    	; 0x10a <__bad_interrupt>
      4e:	00 00       	nop
../../../../crt1/gcrt1.S:86
      50:	5c c0       	rjmp	.+184    	; 0x10a <__bad_interrupt>
      52:	00 00       	nop
../../../../crt1/gcrt1.S:87
      54:	5a c0       	rjmp	.+180    	; 0x10a <__bad_interrupt>
      56:	00 00       	nop
../../../../crt1/gcrt1.S:88
      58:	58 c0       	rjmp	.+176    	; 0x10a <__bad_interrupt>
      5a:	00 00       	nop
../../../../crt1/gcrt1.S:89
      5c:	56 c0       	rjmp	.+172    	; 0x10a <__bad_interrupt>
      5e:	00 00       	nop
../../../../crt1/gcrt1.S:90
      60:	54 c0       	rjmp	.+168    	; 0x10a <__bad_interrupt>
      62:	00 00       	nop
../../../../crt1/gcrt1.S:91
      64:	52 c0       	rjmp	.+164    	; 0x10a <__bad_interrupt>
      66:	00 00       	nop
../../../../crt1/gcrt1.S:92
      68:	50 c0       	rjmp	.+160    	; 0x10a <__bad_interrupt>
      6a:	00 00       	nop
../../../../crt1/gcrt1.S:93
      6c:	4e c0       	rjmp	.+156    	; 0x10a <__bad_interrupt>
      6e:	00 00       	nop
../../../../crt1/gcrt1.S:94
      70:	4c c0       	rjmp	.+152    	; 0x10a <__bad_interrupt>
      72:	00 00       	nop
../../../../crt1/gcrt1.S:95
      74:	4a c0       	rjmp	.+148    	; 0x10a <__bad_interrupt>
	...

00000078 <__trampolines_end>:
__trampolines_start():
      78:	86 01       	movw	r16, r12
      7a:	01 01       	movw	r0, r2
      7c:	02 01       	movw	r0, r4
      7e:	01 35       	cpi	r16, 0x51	; 81
      80:	07 01       	movw	r0, r14
      82:	00 00       	nop
      84:	00 00       	nop
      86:	00 00       	nop
      88:	4a 54       	subi	r20, 0x4A	; 74
      8a:	41 47       	sbci	r20, 0x71	; 113
      8c:	49 43       	sbci	r20, 0x39	; 57
      8e:	45 20       	and	r4, r5
      90:	6d 6b       	ori	r22, 0xBD	; 189
      92:	49 49       	sbci	r20, 0x99	; 153
	...

00000095 <JTAG2::BAUD_TABLE>:
      95:	00 00 1b 41 8d 20 47 10 23 08 12 04 b6 02 5b 01     ...A. G.#.....[.
      a5:	da 0a 04 01 ae 00 57 00 2b 00 39 01 9c 00 00 00     ......W.+.9.....
      b5:	00 00 0b 01 c8 00 a0 00 85 00 64 00 50 00 43 00     ..........d.P.C.
      c5:	3c 00 28 00 1b 00 14 00 0d 00 00                    <.(........

000000d0 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
      d0:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
      d2:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
      d4:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
      d6:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
      d8:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
      da:	de bf       	out	0x3e, r29	; 62

000000dc <__do_copy_data>:
__do_copy_data():
      dc:	18 e3       	ldi	r17, 0x38	; 56
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b8 e3       	ldi	r27, 0x38	; 56
      e2:	ec e3       	ldi	r30, 0x3C	; 60
      e4:	f9 e1       	ldi	r31, 0x19	; 25
      e6:	02 c0       	rjmp	.+4      	; 0xec <__do_copy_data+0x10>
      e8:	05 90       	lpm	r0, Z+
      ea:	0d 92       	st	X+, r0
      ec:	a8 33       	cpi	r26, 0x38	; 56
      ee:	b1 07       	cpc	r27, r17
      f0:	d9 f7       	brne	.-10     	; 0xe8 <__do_copy_data+0xc>

000000f2 <__do_clear_bss>:
__do_clear_bss():
      f2:	2a e3       	ldi	r18, 0x3A	; 58
      f4:	a8 e3       	ldi	r26, 0x38	; 56
      f6:	b8 e3       	ldi	r27, 0x38	; 56
      f8:	01 c0       	rjmp	.+2      	; 0xfc <.do_clear_bss_start>

000000fa <.do_clear_bss_loop>:
      fa:	1d 92       	st	X+, r1

000000fc <.do_clear_bss_start>:
      fc:	a8 37       	cpi	r26, 0x78	; 120
      fe:	b2 07       	cpc	r27, r18
     100:	e1 f7       	brne	.-8      	; 0xfa <.do_clear_bss_loop>
.do_clear_bss_start():
../../../../crt1/gcrt1.S:314
     102:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <main>
../../../../crt1/gcrt1.S:315
     106:	0c 94 8d 0c 	jmp	0x191a	; 0x191a <_exit>

0000010a <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:209
     10a:	7a cf       	rjmp	.-268    	; 0x0 <__vectors>

0000010c <UPDI::RECV()>:
_ZN4UPDI4RECVEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:43
/*
 * UPDI受信
 */

uint8_t UPDI::RECV (void) {
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_RXCIF_bp);
     10c:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6ed2>
     110:	87 ff       	sbrs	r24, 7
     112:	fc cf       	rjmp	.-8      	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:44
  UPDI_LASTH = UPDI_USART.RXDATAH ^ 0x80;
     114:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <UPDI::nvmprog_key+0x7f6ecf>
     118:	80 58       	subi	r24, 0x80	; 128
     11a:	8f bb       	out	0x1f, r24	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:45
  return UPDI_LASTL = UPDI_USART.RXDATAL;
     11c:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <UPDI::nvmprog_key+0x7f6ece>
     120:	8e bb       	out	0x1e, r24	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:46
}
     122:	08 95       	ret

00000124 <UPDI::SEND(unsigned char)>:
_ZN4UPDI4SENDEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:54
 * UPDI送信
 *
 * ループバック受信で送信値を照合
 */

bool UPDI::SEND (uint8_t _data) {
     124:	cf 93       	push	r28
     126:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:56
  bool _r;
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_DREIF_bp);
     128:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6ed2>
     12c:	85 ff       	sbrs	r24, 5
     12e:	fc cf       	rjmp	.-8      	; 0x128 <UPDI::SEND(unsigned char)+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:57
  UPDI_USART.STATUS = USART_TXCIF_bm;
     130:	80 e4       	ldi	r24, 0x40	; 64
     132:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <UPDI::nvmprog_key+0x7f6ed2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:58
  UPDI_USART.TXDATAL = _data;
     136:	c0 93 02 08 	sts	0x0802, r28	; 0x800802 <UPDI::nvmprog_key+0x7f6ed0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:59
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_TXCIF_bp);
     13a:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6ed2>
     13e:	86 ff       	sbrs	r24, 6
     140:	fc cf       	rjmp	.-8      	; 0x13a <UPDI::SEND(unsigned char)+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:60
  _r = _data == UPDI::RECV();
     142:	e4 df       	rcall	.-56     	; 0x10c <UPDI::RECV()>
     144:	98 2f       	mov	r25, r24
     146:	81 e0       	ldi	r24, 0x01	; 1
     148:	9c 13       	cpse	r25, r28
     14a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:61
  if (!_r) UPDI_LASTH |= 0x20;
     14c:	9c 13       	cpse	r25, r28
     14e:	fd 9a       	sbi	0x1f, 5	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:63
  return _r;
}
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <UPDI::send_bytes(unsigned char const*, unsigned int)>:
_ZN4UPDI10send_bytesEPKhj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:110

/*
 * バイト塊送信
 */

bool UPDI::send_bytes (const uint8_t *data, size_t len) {
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	eb 01       	movw	r28, r22
     15e:	8c 01       	movw	r16, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:113
  uint8_t *p = (uint8_t*)(void*)data;
  do {
    if (!UPDI::SEND(*p++)) break;
     160:	f8 01       	movw	r30, r16
     162:	81 91       	ld	r24, Z+
     164:	8f 01       	movw	r16, r30
     166:	de df       	rcall	.-68     	; 0x124 <UPDI::SEND(unsigned char)>
     168:	88 23       	and	r24, r24
     16a:	11 f0       	breq	.+4      	; 0x170 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x1c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:114
  } while (--len);
     16c:	21 97       	sbiw	r28, 0x01	; 1
     16e:	c1 f7       	brne	.-16     	; 0x160 <UPDI::send_bytes(unsigned char const*, unsigned int)+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:115
  return len == 0;
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	cd 2b       	or	r28, r29
     174:	09 f0       	breq	.+2      	; 0x178 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x24>
     176:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:116
}
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	1f 91       	pop	r17
     17e:	0f 91       	pop	r16
     180:	08 95       	ret

00000182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>:
_ZN4UPDI11set_cs_ctraEh.constprop.1():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     182:	e5 e3       	ldi	r30, 0x35	; 53
     184:	f8 e3       	ldi	r31, 0x38	; 56
     186:	82 ec       	ldi	r24, 0xC2	; 194
     188:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     18a:	86 e0       	ldi	r24, 0x06	; 6
     18c:	82 83       	std	Z+2, r24	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     18e:	63 e0       	ldi	r22, 0x03	; 3
     190:	70 e0       	ldi	r23, 0x00	; 0
     192:	cf 01       	movw	r24, r30
     194:	df cf       	rjmp	.-66     	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00000196 <UPDI::enter_updi(bool) [clone .part.4]>:
_ZN4UPDI10enter_updiEb.part.4():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:328

/*
 * UPDI制御開始
 */

bool UPDI::enter_updi (bool skip) {
     196:	0f 93       	push	r16
     198:	1f 93       	push	r17
     19a:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:351
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
     19c:	62 e0       	ldi	r22, 0x02	; 2
     19e:	70 e0       	ldi	r23, 0x00	; 0
     1a0:	81 e3       	ldi	r24, 0x31	; 49
     1a2:	98 e3       	ldi	r25, 0x38	; 56
     1a4:	d7 df       	rcall	.-82     	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     1a6:	c8 2f       	mov	r28, r24
     1a8:	88 23       	and	r24, r24
     1aa:	59 f1       	breq	.+86     	; 0x202 <UPDI::enter_updi(bool) [clone .part.4]+0x6c>
     1ac:	0f e6       	ldi	r16, 0x6F	; 111
     1ae:	18 e3       	ldi	r17, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:352
    while (_len--) *_p++ = UPDI::RECV();
     1b0:	88 e3       	ldi	r24, 0x38	; 56
     1b2:	0f 37       	cpi	r16, 0x7F	; 127
     1b4:	18 07       	cpc	r17, r24
     1b6:	29 f0       	breq	.+10     	; 0x1c2 <UPDI::enter_updi(bool) [clone .part.4]+0x2c>
     1b8:	a9 df       	rcall	.-174    	; 0x10c <UPDI::RECV()>
     1ba:	f8 01       	movw	r30, r16
     1bc:	81 93       	st	Z+, r24
     1be:	8f 01       	movw	r16, r30
     1c0:	f7 cf       	rjmp	.-18     	; 0x1b0 <UPDI::enter_updi(bool) [clone .part.4]+0x1a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:353
    switch (JTAG2::packet.body[4]) {
     1c2:	80 91 6f 38 	lds	r24, 0x386F	; 0x80386f <JTAG2::packet+0xc>
     1c6:	81 34       	cpi	r24, 0x41	; 65
     1c8:	09 f1       	breq	.+66     	; 0x20c <UPDI::enter_updi(bool) [clone .part.4]+0x76>
     1ca:	20 f4       	brcc	.+8      	; 0x1d4 <UPDI::enter_updi(bool) [clone .part.4]+0x3e>
     1cc:	80 32       	cpi	r24, 0x20	; 32
     1ce:	f1 f0       	breq	.+60     	; 0x20c <UPDI::enter_updi(bool) [clone .part.4]+0x76>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:379
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
        break;
      }
      default : {
				return false;
     1d0:	c0 e0       	ldi	r28, 0x00	; 0
     1d2:	17 c0       	rjmp	.+46     	; 0x202 <UPDI::enter_updi(bool) [clone .part.4]+0x6c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:353
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
    while (_len--) *_p++ = UPDI::RECV();
    switch (JTAG2::packet.body[4]) {
     1d4:	8d 36       	cpi	r24, 0x6D	; 109
     1d6:	39 f0       	breq	.+14     	; 0x1e6 <UPDI::enter_updi(bool) [clone .part.4]+0x50>
     1d8:	84 37       	cpi	r24, 0x74	; 116
     1da:	d1 f7       	brne	.-12     	; 0x1d0 <UPDI::enter_updi(bool) [clone .part.4]+0x3a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:362
        NVM::nvm_flash_offset = 0x4000;
        break;
      }
      case 't' : {              // 'tinyAVR' series
        /* tinyAVR SIB = 'tinyAVR P:0D:1-3' */
        NVM::nvm_flash_offset = 0x8000;
     1dc:	80 e0       	ldi	r24, 0x00	; 0
     1de:	90 e8       	ldi	r25, 0x80	; 128
     1e0:	a0 e0       	ldi	r26, 0x00	; 0
     1e2:	b0 e0       	ldi	r27, 0x00	; 0
     1e4:	05 c0       	rjmp	.+10     	; 0x1f0 <UPDI::enter_updi(bool) [clone .part.4]+0x5a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:356
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
    while (_len--) *_p++ = UPDI::RECV();
    switch (JTAG2::packet.body[4]) {
      case 'm' : {              // 'megaAVR' series
        /* megaAVR SIB = 'megaAVR P:0D:1-3' */
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_LOWF_bp);
     1e6:	ed 9a       	sbi	0x1d, 5	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:357
        NVM::nvm_flash_offset = 0x4000;
     1e8:	80 e0       	ldi	r24, 0x00	; 0
     1ea:	90 e4       	ldi	r25, 0x40	; 64
     1ec:	a0 e0       	ldi	r26, 0x00	; 0
     1ee:	b0 e0       	ldi	r27, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:375
        if (JTAG2::packet.body[14] == '3') {
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
     1f0:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
     1f4:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
     1f8:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
     1fc:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:382
      }
      default : {
				return false;
			}
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     200:	e0 9a       	sbi	0x1c, 0	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:385
  }
  return true;
}
     202:	8c 2f       	mov	r24, r28
     204:	cf 91       	pop	r28
     206:	1f 91       	pop	r17
     208:	0f 91       	pop	r16
     20a:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:370
			case ' ' :
      case 'A' : {              // 'AVR_Dx' series
        /* AVR Dx SIB = 'AVR     P:2D:1-3' */
        /* AVR Ex SIB = 'AVR     P:3D:1-3' */
        /* AVR DA SIB = '    AVR P:2D:1-3' (最初期ロット) */
        if (JTAG2::packet.body[14] == '3') {
     20c:	80 91 79 38 	lds	r24, 0x3879	; 0x803879 <JTAG2::packet+0x16>
     210:	83 33       	cpi	r24, 0x33	; 51
     212:	09 f4       	brne	.+2      	; 0x216 <UPDI::enter_updi(bool) [clone .part.4]+0x80>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:372
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
     214:	ef 9a       	sbi	0x1d, 7	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:374
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
     216:	ee 9a       	sbi	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:375
        NVM::nvm_flash_offset = 0x800000;
     218:	80 e0       	ldi	r24, 0x00	; 0
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	a0 e8       	ldi	r26, 0x80	; 128
     21e:	b0 e0       	ldi	r27, 0x00	; 0
     220:	e7 cf       	rjmp	.-50     	; 0x1f0 <UPDI::enter_updi(bool) [clone .part.4]+0x5a>

00000222 <UPDI::updi_reset(bool)>:
_ZN4UPDI10updi_resetEb():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:223
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
}
inline bool UPDI::updi_reset (bool logic) {
  return UPDI::set_cs_stat(
     222:	81 11       	cpse	r24, r1
     224:	89 e5       	ldi	r24, 0x59	; 89
set_cs_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     226:	98 ec       	ldi	r25, 0xC8	; 200
     228:	90 93 36 38 	sts	0x3836, r25	; 0x803836 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     22c:	80 93 37 38 	sts	0x3837, r24	; 0x803837 <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     230:	63 e0       	ldi	r22, 0x03	; 3
     232:	70 e0       	ldi	r23, 0x00	; 0
     234:	85 e3       	ldi	r24, 0x35	; 53
     236:	98 e3       	ldi	r25, 0x38	; 56
     238:	8d cf       	rjmp	.-230    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

0000023a <UPDI::st8(unsigned long, unsigned char)>:
_ZN4UPDI3st8Emh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:147

/*
 * 単バイト送信
 */

bool UPDI::st8 (uint32_t addr, uint8_t data) {
     23a:	cf 93       	push	r28
     23c:	c4 2f       	mov	r28, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:153
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
     23e:	60 93 12 38 	sts	0x3812, r22	; 0x803812 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x2>
     242:	70 93 13 38 	sts	0x3813, r23	; 0x803813 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x3>
     246:	80 93 14 38 	sts	0x3814, r24	; 0x803814 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x4>
     24a:	90 93 15 38 	sts	0x3815, r25	; 0x803815 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:154
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     24e:	65 e0       	ldi	r22, 0x05	; 5
     250:	70 e0       	ldi	r23, 0x00	; 0
     252:	80 e1       	ldi	r24, 0x10	; 16
     254:	98 e3       	ldi	r25, 0x38	; 56
     256:	7e df       	rcall	.-260    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     258:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:157
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  if (!UPDI::SEND(data)) return false;
  return UPDI::UPDI_ACK == UPDI::RECV();
     25a:	02 c0       	rjmp	.+4      	; 0x260 <UPDI::st8(unsigned long, unsigned char)+0x26>
     25c:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:155
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     25e:	0b c0       	rjmp	.+22     	; 0x276 <UPDI::st8(unsigned long, unsigned char)+0x3c>
     260:	55 df       	rcall	.-342    	; 0x10c <UPDI::RECV()>
     262:	80 34       	cpi	r24, 0x40	; 64
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:156
  if (!UPDI::SEND(data)) return false;
     264:	d9 f7       	brne	.-10     	; 0x25c <UPDI::st8(unsigned long, unsigned char)+0x22>
     266:	8c 2f       	mov	r24, r28
     268:	5d df       	rcall	.-326    	; 0x124 <UPDI::SEND(unsigned char)>
     26a:	88 23       	and	r24, r24
     26c:	b9 f3       	breq	.-18     	; 0x25c <UPDI::st8(unsigned long, unsigned char)+0x22>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:157
  return UPDI::UPDI_ACK == UPDI::RECV();
     26e:	4e df       	rcall	.-356    	; 0x10c <UPDI::RECV()>
     270:	91 e0       	ldi	r25, 0x01	; 1
     272:	80 34       	cpi	r24, 0x40	; 64
     274:	99 f7       	brne	.-26     	; 0x25c <UPDI::st8(unsigned long, unsigned char)+0x22>
     276:	89 2f       	mov	r24, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:158
}
     278:	cf 91       	pop	r28
     27a:	08 95       	ret

0000027c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>:
_ZN4UPDI18send_repeat_headerEhmj():
     27c:	40 93 0c 38 	sts	0x380C, r20	; 0x80380c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:135
    , UPDI::UPDI_REPEAT | UPDI::UPDI_DATA1
    , 0                   // repeat count
    , UPDI::UPDI_SYNCH
    , UPDI::UPDI_PTR_INC  // +cmd
  };
  _CAPS32(set_ptr[2])->dword = addr;
     280:	50 93 0d 38 	sts	0x380D, r21	; 0x80380d <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x3>
     284:	60 93 0e 38 	sts	0x380E, r22	; 0x80380e <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x4>
     288:	70 93 0f 38 	sts	0x380F, r23	; 0x80380f <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x5>
     28c:	21 50       	subi	r18, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:136
  set_repeat[2] = len - 1;
     28e:	20 93 07 38 	sts	0x3807, r18	; 0x803807 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:137
  set_repeat[4] = UPDI::UPDI_PTR_INC | cmd;
     292:	84 60       	ori	r24, 0x04	; 4
     294:	80 93 09 38 	sts	0x3809, r24	; 0x803809 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:138
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     298:	65 e0       	ldi	r22, 0x05	; 5
     29a:	70 e0       	ldi	r23, 0x00	; 0
     29c:	8a e0       	ldi	r24, 0x0A	; 10
     29e:	98 e3       	ldi	r25, 0x38	; 56
     2a0:	59 df       	rcall	.-334    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     2a2:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:139
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     2a4:	41 f0       	breq	.+16     	; 0x2b6 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
     2a6:	32 df       	rcall	.-412    	; 0x10c <UPDI::RECV()>
     2a8:	80 34       	cpi	r24, 0x40	; 64
     2aa:	29 f4       	brne	.+10     	; 0x2b6 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:140
  return UPDI::send_bytes(set_repeat, sizeof(set_repeat));
     2ac:	65 e0       	ldi	r22, 0x05	; 5
     2ae:	70 e0       	ldi	r23, 0x00	; 0
     2b0:	85 e0       	ldi	r24, 0x05	; 5
     2b2:	98 e3       	ldi	r25, 0x38	; 56
     2b4:	4f cf       	rjmp	.-354    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:141
}
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	08 95       	ret

000002ba <UPDI::BREAK()>:
_ZN4UPDI5BREAKEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:81
 * BREAKキャラクタ
 *
 * 送信速度を遅くすることで生成する
 */

void UPDI::BREAK (void) {
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:82
  UPDI_USART.BAUD = UPDI_BAUD_BREAK;
     2be:	c0 e0       	ldi	r28, 0x00	; 0
     2c0:	d8 e0       	ldi	r29, 0x08	; 8
     2c2:	80 ec       	ldi	r24, 0xC0	; 192
     2c4:	94 e4       	ldi	r25, 0x44	; 68
     2c6:	88 87       	std	Y+8, r24	; 0x08
     2c8:	99 87       	std	Y+9, r25	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:83
  UPDI::SEND(UPDI::UPDI_NOP);
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	2b df       	rcall	.-426    	; 0x124 <UPDI::SEND(unsigned char)>
     2ce:	80 eb       	ldi	r24, 0xB0	; 176
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:84
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	88 87       	std	Y+8, r24	; 0x08
     2d4:	99 87       	std	Y+9, r25	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:85
}
     2d6:	df 91       	pop	r29
     2d8:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:193

/*
 * コントロールステータス受信
 */

bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
     2da:	08 95       	ret

000002dc <UPDI::is_cs_stat(unsigned char, unsigned char)>:
_ZN4UPDI10is_cs_statEhh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:195
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0 };
  set_ptr[1] = UPDI::UPDI_LDCS | code;
     2dc:	cf 93       	push	r28
     2de:	c6 2f       	mov	r28, r22
     2e0:	80 68       	ori	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:196
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
     2e2:	80 93 1d 38 	sts	0x381D, r24	; 0x80381d <UPDI::is_cs_stat(unsigned char, unsigned char)::set_ptr+0x1>
     2e6:	62 e0       	ldi	r22, 0x02	; 2
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	8c e1       	ldi	r24, 0x1C	; 28
     2ec:	98 e3       	ldi	r25, 0x38	; 56
     2ee:	32 df       	rcall	.-412    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     2f0:	81 11       	cpse	r24, r1
     2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <UPDI::is_cs_stat(unsigned char, unsigned char)+0x1c>
     2f4:	e2 df       	rcall	.-60     	; 0x2ba <UPDI::BREAK()>
     2f6:	f7 cf       	rjmp	.-18     	; 0x2e6 <UPDI::is_cs_stat(unsigned char, unsigned char)+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:197
  return check == (UPDI::RECV() & check);
     2f8:	09 df       	rcall	.-494    	; 0x10c <UPDI::RECV()>
     2fa:	98 2f       	mov	r25, r24
     2fc:	9c 23       	and	r25, r28
     2fe:	81 e0       	ldi	r24, 0x01	; 1
     300:	9c 13       	cpse	r25, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:198
}
     302:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:184
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_LDS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS16(set_ptr[2])->word = (uint16_t)addr;
     304:	cf 91       	pop	r28
     306:	08 95       	ret

00000308 <UPDI::ld8(unsigned long)>:
_ZN4UPDI3ld8Em():
     308:	60 93 18 38 	sts	0x3818, r22	; 0x803818 <UPDI::ld8(unsigned long)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:185
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) UPDI::BREAK();
     30c:	70 93 19 38 	sts	0x3819, r23	; 0x803819 <UPDI::ld8(unsigned long)::set_ptr+0x3>
     310:	65 e0       	ldi	r22, 0x05	; 5
     312:	70 e0       	ldi	r23, 0x00	; 0
     314:	86 e1       	ldi	r24, 0x16	; 22
     316:	98 e3       	ldi	r25, 0x38	; 56
     318:	1d df       	rcall	.-454    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     31a:	81 11       	cpse	r24, r1
     31c:	02 c0       	rjmp	.+4      	; 0x322 <UPDI::ld8(unsigned long)+0x1a>
     31e:	cd df       	rcall	.-102    	; 0x2ba <UPDI::BREAK()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:186
  return UPDI::RECV();
     320:	f7 cf       	rjmp	.-18     	; 0x310 <UPDI::ld8(unsigned long)+0x8>
     322:	f4 ce       	rjmp	.-536    	; 0x10c <UPDI::RECV()>

00000324 <UPDI::Target_Reset(bool)>:
_ZN4UPDI12Target_ResetEb():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:93
 * 対象リセット
 *
 * BREAKを前置するタイプ
 */

bool UPDI::Target_Reset (bool _enable) {
     324:	cf 93       	push	r28
     326:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:101
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_ASI_RESET_REQ
    , 0
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
     328:	c8 df       	rcall	.-112    	; 0x2ba <UPDI::BREAK()>
     32a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:102
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
     32c:	c1 11       	cpse	r28, r1
     32e:	89 e5       	ldi	r24, 0x59	; 89
     330:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
     334:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:103
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     336:	70 e0       	ldi	r23, 0x00	; 0
     338:	80 e0       	ldi	r24, 0x00	; 0
     33a:	98 e3       	ldi	r25, 0x38	; 56
     33c:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:104
}
     33e:	0a cf       	rjmp	.-492    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00000340 <TIM::LED_Blink()>:
_ZN3TIM9LED_BlinkEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:103
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     340:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     344:	83 30       	cpi	r24, 0x03	; 3
     346:	99 f0       	breq	.+38     	; 0x36e <TIM::LED_Blink()+0x2e>
     348:	83 e0       	ldi	r24, 0x03	; 3
     34a:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
     34e:	89 ea       	ldi	r24, 0xA9	; 169
     350:	95 e5       	ldi	r25, 0x55	; 85
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
     352:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f716a>
     356:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f716b>
     35a:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7168>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
     35e:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7169>
     362:	8f e4       	ldi	r24, 0x4F	; 79
     364:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f715e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6877>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     36e:	08 95       	ret

00000370 <TIM::LED_Flash()>:
_ZN3TIM9LED_FlashEv():
     370:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     374:	82 30       	cpi	r24, 0x02	; 2
     376:	99 f0       	breq	.+38     	; 0x39e <TIM::LED_Flash()+0x2e>
     378:	82 e0       	ldi	r24, 0x02	; 2
     37a:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
     37e:	89 ea       	ldi	r24, 0xA9	; 169
     380:	98 e0       	ldi	r25, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
     382:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f716a>
     386:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f716b>
     38a:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7168>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
     38e:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7169>
     392:	8f e4       	ldi	r24, 0x4F	; 79
     394:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f715e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     398:	81 e0       	ldi	r24, 0x01	; 1
     39a:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6877>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     39e:	08 95       	ret

000003a0 <TIM::Timeout_Stop()>:
_ZN3TIM12Timeout_StopEv():
     3a0:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:172
}

/* フラッシュ（RTSアサート/UPDI許認可後）*/
void TIM::LED_Flash (void) {
  LED_TCB1(2, TCB1_FLASH);
}
     3a2:	f8 94       	cli
_ZN3TIM12Timeout_StopEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:137
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
  }
}

void TIM::Timeout_Stop (void) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     3a4:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f714e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:138
    TCB0_CTRLA = 0;
     3a8:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:139
    TCB0_INTFLAGS = TCB_CAPT_bm;
     3aa:	90 93 86 0a 	sts	0x0A86, r25	; 0x800a86 <UPDI::nvmprog_key+0x7f7154>
__iRestore():
     3ae:	8f bf       	out	0x3f, r24	; 63
_ZN3TIM12Timeout_StopEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     3b0:	18 95       	reti
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:141
  }
  reti();
     3b2:	08 95       	ret

000003b4 <SYS::WDT_SET(unsigned char)>:
_ZN3SYS7WDT_SETEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:133
/*
 * WDT操作
 */

void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
     3b4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <UPDI::nvmprog_key+0x7f67cf>
     3b8:	90 fd       	sbrc	r25, 0
     3ba:	fc cf       	rjmp	.-8      	; 0x3b4 <SYS::WDT_SET(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:134
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
     3bc:	98 ed       	ldi	r25, 0xD8	; 216
     3be:	94 bf       	out	0x34, r25	; 52
     3c0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <UPDI::nvmprog_key+0x7f67ce>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:317
 * NVMCTRL制御
 */

/* NVMCTRL v0 */
bool NVM::nvm_ctrl (uint8_t nvmcmd) {
  return UPDI::st8(NVM::NVMCTRL_REG_CTRLA, nvmcmd);
     3c4:	08 95       	ret

000003c6 <NVM::nvm_ctrl(unsigned char)>:
_ZN3NVM8nvm_ctrlEh():
     3c6:	48 2f       	mov	r20, r24
     3c8:	60 e0       	ldi	r22, 0x00	; 0
     3ca:	70 e1       	ldi	r23, 0x10	; 16
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:320
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
     3d0:	34 cf       	rjmp	.-408    	; 0x23a <UPDI::st8(unsigned long, unsigned char)>

000003d2 <nvm_ctrl_change(unsigned char)>:
_Z15nvm_ctrl_changeh():
     3d2:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:321
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
     3d4:	c8 2f       	mov	r28, r24
     3d6:	60 e0       	ldi	r22, 0x00	; 0
     3d8:	70 e1       	ldi	r23, 0x10	; 16
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	94 df       	rcall	.-216    	; 0x308 <UPDI::ld8(unsigned long)>
     3e0:	8c 13       	cpse	r24, r28
     3e2:	03 c0       	rjmp	.+6      	; 0x3ea <nvm_ctrl_change(unsigned char)+0x18>
     3e4:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:325
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}
     3e6:	cf 91       	pop	r28
     3e8:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:322
  return UPDI::st8(NVM::NVMCTRL_REG_CTRLA, nvmcmd);
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
     3ea:	80 e0       	ldi	r24, 0x00	; 0
     3ec:	ec df       	rcall	.-40     	; 0x3c6 <NVM::nvm_ctrl(unsigned char)>
     3ee:	88 23       	and	r24, r24
     3f0:	d1 f3       	breq	.-12     	; 0x3e6 <nvm_ctrl_change(unsigned char)+0x14>
     3f2:	cc 23       	and	r28, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:323
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     3f4:	b9 f3       	breq	.-18     	; 0x3e4 <nvm_ctrl_change(unsigned char)+0x12>
     3f6:	8c 2f       	mov	r24, r28
     3f8:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:325
  return true;
}
     3fa:	e5 cf       	rjmp	.-54     	; 0x3c6 <NVM::nvm_ctrl(unsigned char)>

000003fc <JTAG2::set_response(JTAG2::jtag_response_e)>:
_ZN5JTAG212set_responseENS_15jtag_response_eE():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:323
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     3fc:	44 e0       	ldi	r20, 0x04	; 4
     3fe:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:162
  }
}

/* JTAG Response */
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
     400:	60 e0       	ldi	r22, 0x00	; 0
     402:	70 e0       	ldi	r23, 0x00	; 0
     404:	40 93 66 38 	sts	0x3866, r20	; 0x803866 <JTAG2::packet+0x3>
     408:	50 93 67 38 	sts	0x3867, r21	; 0x803867 <JTAG2::packet+0x4>
     40c:	60 93 68 38 	sts	0x3868, r22	; 0x803868 <JTAG2::packet+0x5>
     410:	70 93 69 38 	sts	0x3869, r23	; 0x803869 <JTAG2::packet+0x6>
     414:	80 93 6b 38 	sts	0x386B, r24	; 0x80386b <JTAG2::packet+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:164
  /* 応答番号 */
  packet.body[0] = response_code;
     418:	e1 99       	sbic	0x1c, 1	; 28
     41a:	0b c0       	rjmp	.+22     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     41c:	8c b3       	in	r24, 0x1c	; 28
     41e:	81 70       	andi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:167
                 : bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp) ? 1 : 0;
     420:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
  /* 応答番号 */
  packet.body[0] = response_code;
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     424:	8c b3       	in	r24, 0x1c	; 28
     426:	80 93 6d 38 	sts	0x386D, r24	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:169
                 : bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp) ? 1 : 0;
  /* 内部状態フラグ */
  packet.body[2] = UPDI_CONTROL;
     42a:	8d b3       	in	r24, 0x1d	; 29
     42c:	80 93 6e 38 	sts	0x386E, r24	; 0x80386e <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:170
  packet.body[3] = UPDI_NVMCTRL;
     430:	08 95       	ret
     432:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:171
}
     434:	f5 cf       	rjmp	.-22     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>

00000436 <_crc_ccitt_update(unsigned int, unsigned char)>:
_ZL17_crc_ccitt_updatejh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
  /* 応答番号 */
  packet.body[0] = response_code;
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     436:	86 27       	eor	r24, r22
     438:	08 2e       	mov	r0, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:285
        "eor    %A0,__tmp_reg__"

        : "=d" (__ret)
        : "r" (__data), "0" (__crc)
        : "r0"
    );
     43a:	82 95       	swap	r24
     43c:	80 7f       	andi	r24, 0xF0	; 240
     43e:	80 25       	eor	r24, r0
     440:	09 2e       	mov	r0, r25
     442:	98 2f       	mov	r25, r24
     444:	82 95       	swap	r24
     446:	8f 70       	andi	r24, 0x0F	; 15
     448:	08 26       	eor	r0, r24
     44a:	86 95       	lsr	r24
     44c:	98 27       	eor	r25, r24
     44e:	89 27       	eor	r24, r25
     450:	88 0f       	add	r24, r24
     452:	88 0f       	add	r24, r24
     454:	88 0f       	add	r24, r24
     456:	80 25       	eor	r24, r0
     458:	08 95       	ret

0000045a <JTAG2::answer_transfer()>:
_ZN5JTAG215answer_transferEv():
     45a:	af 92       	push	r10
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:287
    return __ret;
}
     45c:	bf 92       	push	r11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:147
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
  return _crc == 0;
}

/* JTAG Answer */
void JTAG2::answer_transfer (void) {
     45e:	cf 92       	push	r12
     460:	df 92       	push	r13
     462:	ef 92       	push	r14
     464:	ff 92       	push	r15
     466:	0f 93       	push	r16
     468:	1f 93       	push	r17
     46a:	cf 93       	push	r28
     46c:	df 93       	push	r29
     46e:	00 d0       	rcall	.+0      	; 0x470 <JTAG2::answer_transfer()+0x16>
     470:	cd b7       	in	r28, 0x3d	; 61
     472:	de b7       	in	r29, 0x3e	; 62
     474:	8f ef       	ldi	r24, 0xFF	; 255
     476:	9f ef       	ldi	r25, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:148
  uint16_t _crc = ~0;
     478:	89 83       	std	Y+1, r24	; 0x01
     47a:	9a 83       	std	Y+2, r25	; 0x02
     47c:	e0 90 66 38 	lds	r14, 0x3866	; 0x803866 <JTAG2::packet+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:149
  int16_t _len = packet.size_word[0] + 8;
     480:	f0 90 67 38 	lds	r15, 0x3867	; 0x803867 <JTAG2::packet+0x4>
     484:	87 01       	movw	r16, r14
     486:	08 5f       	subi	r16, 0xF8	; 248
     488:	1f 4f       	sbci	r17, 0xFF	; 255
     48a:	83 e6       	ldi	r24, 0x63	; 99
     48c:	c8 2e       	mov	r12, r24
     48e:	88 e3       	ldi	r24, 0x38	; 56
     490:	d8 2e       	mov	r13, r24
     492:	56 01       	movw	r10, r12
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	e8 1a       	sub	r14, r24
     498:	f1 08       	sbc	r15, r1
     49a:	a7 ef       	ldi	r26, 0xF7	; 247
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     49c:	ea 16       	cp	r14, r26
     49e:	af ef       	ldi	r26, 0xFF	; 255
     4a0:	fa 06       	cpc	r15, r26
     4a2:	49 f0       	breq	.+18     	; 0x4b6 <JTAG2::answer_transfer()+0x5c>
     4a4:	f5 01       	movw	r30, r10
     4a6:	61 91       	ld	r22, Z+
     4a8:	5f 01       	movw	r10, r30
crc16_update():
     4aa:	89 81       	ldd	r24, Y+1	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
     4ac:	9a 81       	ldd	r25, Y+2	; 0x02
     4ae:	c3 df       	rcall	.-122    	; 0x436 <_crc_ccitt_update(unsigned int, unsigned char)>
_ZN5JTAG215answer_transferEv():
     4b0:	89 83       	std	Y+1, r24	; 0x01
     4b2:	9a 83       	std	Y+2, r25	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
void JTAG2::answer_transfer (void) {
  uint16_t _crc = ~0;
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     4b4:	ef cf       	rjmp	.-34     	; 0x494 <JTAG2::answer_transfer()+0x3a>
     4b6:	f8 01       	movw	r30, r16
     4b8:	ed 59       	subi	r30, 0x9D	; 157
     4ba:	f7 4c       	sbci	r31, 0xC7	; 199
     4bc:	89 81       	ldd	r24, Y+1	; 0x01
     4be:	80 83       	st	Z, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:153
  (*_q++) = _CAPS16(_crc)->bytes[0];
     4c0:	8a 81       	ldd	r24, Y+2	; 0x02
     4c2:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  (*_q++) = _CAPS16(_crc)->bytes[1];
     4c4:	2f b7       	in	r18, 0x3f	; 63
__iCliRetVal():
     4c6:	f8 94       	cli
_ZN5JTAG215answer_transferEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:155
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     4c8:	32 96       	adiw	r30, 0x02	; 2
put():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     4ca:	90 e4       	ldi	r25, 0x40	; 64
_ZN5JTAG215answer_transferEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
     4cc:	ce 16       	cp	r12, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:107
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
  JTAG_USART.STATUS = USART_TXCIF_bm;
     4ce:	df 06       	cpc	r13, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     4d0:	71 f4       	brne	.+28     	; 0x4ee <JTAG2::answer_transfer()+0x94>
__iRestore():
     4d2:	2f bf       	out	0x3f, r18	; 63
_ZN5JTAG215answer_transferEv():
     4d4:	0f 90       	pop	r0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     4d6:	0f 90       	pop	r0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:158
  }
}
     4d8:	df 91       	pop	r29
     4da:	cf 91       	pop	r28
     4dc:	1f 91       	pop	r17
     4de:	0f 91       	pop	r16
     4e0:	ff 90       	pop	r15
     4e2:	ef 90       	pop	r14
     4e4:	df 90       	pop	r13
     4e6:	cf 90       	pop	r12
     4e8:	bf 90       	pop	r11
     4ea:	af 90       	pop	r10
     4ec:	08 95       	ret
     4ee:	d6 01       	movw	r26, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     4f0:	8d 91       	ld	r24, X+
     4f2:	6d 01       	movw	r12, r26
put():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:106
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
     4f4:	30 91 24 08 	lds	r19, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6ef2>
     4f8:	35 ff       	sbrs	r19, 5
     4fa:	fc cf       	rjmp	.-8      	; 0x4f4 <JTAG2::answer_transfer()+0x9a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:107
  JTAG_USART.STATUS = USART_TXCIF_bm;
     4fc:	90 93 24 08 	sts	0x0824, r25	; 0x800824 <UPDI::nvmprog_key+0x7f6ef2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:108
  return JTAG_USART.TXDATAL = _data;
     500:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <UPDI::nvmprog_key+0x7f6ef0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:392
/*
 * プログラミング制御開始
 *
 */

bool UPDI::enter_prog (void) {
     504:	e3 cf       	rjmp	.-58     	; 0x4cc <JTAG2::answer_transfer()+0x72>

00000506 <UPDI::enter_prog()>:
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:393
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
     506:	cf 93       	push	r28
     508:	e1 99       	sbic	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     50a:	36 c0       	rjmp	.+108    	; 0x578 <UPDI::enter_prog()+0x72>
is_sys_stat():
     50c:	60 e2       	ldi	r22, 0x20	; 32
     50e:	8b e0       	ldi	r24, 0x0B	; 11
     510:	e5 de       	rcall	.-566    	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:394
 *
 */

bool UPDI::enter_prog (void) {
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
     512:	c8 2f       	mov	r28, r24
_ZN4UPDI10enter_progEv():
     514:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:395
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
     516:	fa cf       	rjmp	.-12     	; 0x50c <UPDI::enter_prog()+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:396
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
     518:	f3 99       	sbic	0x1e, 3	; 30
     51a:	2c c0       	rjmp	.+88     	; 0x574 <UPDI::enter_prog()+0x6e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:203
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
}
inline bool UPDI::is_key_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, check);
     51c:	f0 99       	sbic	0x1e, 0	; 30
     51e:	2d c0       	rjmp	.+90     	; 0x57a <UPDI::enter_prog()+0x74>
is_key_stat():
     520:	60 e1       	ldi	r22, 0x10	; 16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:397
bool UPDI::enter_prog (void) {
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
     522:	87 e0       	ldi	r24, 0x07	; 7
     524:	db de       	rcall	.-586    	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:398
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     526:	81 11       	cpse	r24, r1
     528:	12 c0       	rjmp	.+36     	; 0x54e <UPDI::enter_prog()+0x48>
     52a:	6a e0       	ldi	r22, 0x0A	; 10
     52c:	70 e0       	ldi	r23, 0x00	; 0
     52e:	82 e3       	ldi	r24, 0x32	; 50
     530:	99 e9       	ldi	r25, 0x99	; 153
     532:	10 de       	rcall	.-992    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     534:	88 23       	and	r24, r24
     536:	09 f1       	breq	.+66     	; 0x57a <UPDI::enter_prog()+0x74>
delay_micros():
     538:	89 ef       	ldi	r24, 0xF9	; 249
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	01 97       	sbiw	r24, 0x01	; 1
     53e:	f1 f7       	brne	.-4      	; 0x53c <UPDI::enter_prog()+0x36>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:203
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
}
inline bool UPDI::is_key_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, check);
     540:	00 c0       	rjmp	.+0      	; 0x542 <UPDI::enter_prog()+0x3c>
     542:	00 00       	nop
is_key_stat():
     544:	60 e1       	ldi	r22, 0x10	; 16
     546:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:399
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
        do{ delay_micros(100); } while (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG));
     548:	c9 de       	rcall	.-622    	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
     54a:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:401
      }
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     54c:	a9 f3       	breq	.-22     	; 0x538 <UPDI::enter_prog()+0x32>
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	68 de       	rcall	.-816    	; 0x222 <UPDI::updi_reset(bool)>
     552:	88 23       	and	r24, r24
     554:	91 f0       	breq	.+36     	; 0x57a <UPDI::enter_prog()+0x74>
     556:	80 e0       	ldi	r24, 0x00	; 0
     558:	64 de       	rcall	.-824    	; 0x222 <UPDI::updi_reset(bool)>
     55a:	88 23       	and	r24, r24
     55c:	71 f0       	breq	.+28     	; 0x57a <UPDI::enter_prog()+0x74>
delay_micros():
     55e:	89 ef       	ldi	r24, 0xF9	; 249
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	01 97       	sbiw	r24, 0x01	; 1
     564:	f1 f7       	brne	.-4      	; 0x562 <UPDI::enter_prog()+0x5c>
     566:	00 c0       	rjmp	.+0      	; 0x568 <UPDI::enter_prog()+0x62>
     568:	00 00       	nop
is_sys_stat():
     56a:	68 e0       	ldi	r22, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     56c:	8b e0       	ldi	r24, 0x0B	; 11
     56e:	b6 de       	rcall	.-660    	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_progEv():
     570:	88 23       	and	r24, r24
     572:	a9 f3       	breq	.-22     	; 0x55e <UPDI::enter_prog()+0x58>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:402
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
        do{ delay_micros(100); } while (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG));
      }
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
      do{ delay_micros(100); } while (!UPDI::is_sys_stat(UPDI::UPDI_SYS_NVMPROG));
     574:	e0 9a       	sbi	0x1c, 0	; 28
     576:	e1 9a       	sbi	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:404
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     578:	c1 e0       	ldi	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:405
    UPDI_CONTROL |= _BV(UPDI::UPDI_PROG_bp);
     57a:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:407
  }
  return true;
     57c:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:408
}
     57e:	08 95       	ret

00000580 <HV_Pulse()>:
_Z8HV_Pulsev():
     580:	80 e3       	ldi	r24, 0x30	; 48
     582:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <UPDI::nvmprog_key+0x7f70cf>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:200
/*
 * HVチャージポンプ駆動制御
 */

void TIM::HV_Pulse_ON (void) {
  TCA0_SPLIT_CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm;
     586:	21 9a       	sbi	0x04, 1	; 4
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:270
/*
 * HVパルス印加
 */
void HV_Pulse (void) {
  TIM::HV_Pulse_ON();
  openDrainWrite(TRST_PIN, LOW);
     588:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     58a:	93 e1       	ldi	r25, 0x13	; 19
     58c:	01 97       	sbiw	r24, 0x01	; 1
     58e:	f1 f7       	brne	.-4      	; 0x58c <HV_Pulse()+0xc>
     590:	00 c0       	rjmp	.+0      	; 0x592 <HV_Pulse()+0x12>
     592:	00 00       	nop
_Z8HV_Pulsev():
     594:	21 98       	cbi	0x04, 1	; 4
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:272
  delay_micros(2000);
  openDrainWrite(TRST_PIN, HIGH);
     596:	87 e8       	ldi	r24, 0x87	; 135
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     598:	93 e1       	ldi	r25, 0x13	; 19
     59a:	01 97       	sbiw	r24, 0x01	; 1
     59c:	f1 f7       	brne	.-4      	; 0x59a <HV_Pulse()+0x1a>
     59e:	00 c0       	rjmp	.+0      	; 0x5a0 <HV_Pulse()+0x20>
     5a0:	00 00       	nop
_Z8HV_Pulsev():
     5a2:	ee 9b       	sbis	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:274
  delay_micros(2000);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     5a4:	1a c0       	rjmp	.+52     	; 0x5da <HV_Pulse()+0x5a>
     5a6:	2d 9a       	sbi	0x05, 5	; 5
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:275
    digitalWrite(HV8_PIN, HIGH);
     5a8:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     5aa:	97 e0       	ldi	r25, 0x07	; 7
     5ac:	01 97       	sbiw	r24, 0x01	; 1
     5ae:	f1 f7       	brne	.-4      	; 0x5ac <HV_Pulse()+0x2c>
     5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <HV_Pulse()+0x32>
     5b2:	00 00       	nop
_Z8HV_Pulsev():
     5b4:	2d 98       	cbi	0x05, 5	; 5
HV_Pulse_OFF():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:277
    delay_micros(800);
    digitalWrite(HV8_PIN, LOW);
     5b6:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <UPDI::nvmprog_key+0x7f70cf>
_Z8HV_Pulsev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:204
}

void TIM::HV_Pulse_OFF (void) {
  TCA0_SPLIT_CTRLB = 0;
     5ba:	88 ee       	ldi	r24, 0xE8	; 232
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:285
    digitalWrite(HV12_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
  }
  TIM::HV_Pulse_OFF();
  UPDI_USART.BAUD = UPDI_BAUD_SHORT_BREAK;
     5bc:	93 e0       	ldi	r25, 0x03	; 3
     5be:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6ed6>
     5c2:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6ed7>
     5c6:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:286
  UPDI::SEND(UPDI::UPDI_NOP);
     5c8:	ad dd       	rcall	.-1190   	; 0x124 <UPDI::SEND(unsigned char)>
     5ca:	80 eb       	ldi	r24, 0xB0	; 176
     5cc:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:287
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     5ce:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6ed6>
     5d2:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6ed7>
     5d6:	e3 9a       	sbi	0x1c, 3	; 28
     5d8:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:288
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERHV_bp);
     5da:	0e 9a       	sbi	0x01, 6	; 1
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:289
}
     5dc:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:280
    digitalWrite(HV8_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV8_PIN, LOW);
  }
  else {
    digitalWrite(HV12_PIN, HIGH);
     5de:	97 e0       	ldi	r25, 0x07	; 7
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	f1 f7       	brne	.-4      	; 0x5e0 <HV_Pulse()+0x60>
     5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <HV_Pulse()+0x66>
     5e6:	00 00       	nop
_Z8HV_Pulsev():
     5e8:	0e 98       	cbi	0x01, 6	; 1
     5ea:	e5 cf       	rjmp	.-54     	; 0x5b6 <HV_Pulse()+0x36>

000005ec <UPDI::updi_activate()>:
_ZN4UPDI13updi_activateEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:282
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:414

/*
 * UPDI許認可
 */

bool UPDI::updi_activate (void) {
     5f0:	1f 92       	push	r1
     5f2:	cd b7       	in	r28, 0x3d	; 61
     5f4:	de b7       	in	r29, 0x3e	; 62
     5f6:	83 e0       	ldi	r24, 0x03	; 3
     5f8:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:415
  volatile uint8_t count = 3;
     5fa:	89 81       	ldd	r24, Y+1	; 0x01
     5fc:	81 50       	subi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:416
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
     5fe:	89 83       	std	Y+1, r24	; 0x01
     600:	88 23       	and	r24, r24
     602:	09 f4       	brne	.+2      	; 0x606 <UPDI::updi_activate()+0x1a>
     604:	52 c0       	rjmp	.+164    	; 0x6aa <UPDI::updi_activate()+0xbe>
     606:	e1 99       	sbic	0x1c, 1	; 28
     608:	50 c0       	rjmp	.+160    	; 0x6aa <UPDI::updi_activate()+0xbe>
delay_millis():
     60a:	2f e3       	ldi	r18, 0x3F	; 63
     60c:	3d e0       	ldi	r19, 0x0D	; 13
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	21 50       	subi	r18, 0x01	; 1
     612:	30 40       	sbci	r19, 0x00	; 0
     614:	80 40       	sbci	r24, 0x00	; 0
     616:	e1 f7       	brne	.-8      	; 0x610 <UPDI::updi_activate()+0x24>
     618:	00 c0       	rjmp	.+0      	; 0x61a <UPDI::updi_activate()+0x2e>
     61a:	00 00       	nop
_ZN4UPDI13updi_activateEv():
     61c:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:418
    delay_millis(100);
    if (setjmp(TIM::CONTEXT) == 0) {
     61e:	98 e3       	ldi	r25, 0x38	; 56
     620:	0e 94 4d 0c 	call	0x189a	; 0x189a <setjmp>
     624:	89 2b       	or	r24, r25
     626:	09 f0       	breq	.+2      	; 0x62a <UPDI::updi_activate()+0x3e>
     628:	3b c0       	rjmp	.+118    	; 0x6a0 <UPDI::updi_activate()+0xb4>
Timeout_Start():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     62a:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:128
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    TCB0_CNT = 0;
     62c:	f8 94       	cli
Timeout_Start():
     62e:	ea e8       	ldi	r30, 0x8A	; 138
     630:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:129
    TCB0_CCMP = _ms >> 2;
     632:	10 82       	st	Z, r1
     634:	11 82       	std	Z+1, r1	; 0x01
     636:	25 e2       	ldi	r18, 0x25	; 37
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	ec e8       	ldi	r30, 0x8C	; 140
     63c:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:130
    TCB0_INTCTRL = TCB_CAPT_bm;
     63e:	20 83       	st	Z, r18
     640:	31 83       	std	Z+1, r19	; 0x01
     642:	21 e0       	ldi	r18, 0x01	; 1
     644:	e5 e8       	ldi	r30, 0x85	; 133
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:131
    TCB0_INTFLAGS = TCB_CAPT_bm;
     646:	fa e0       	ldi	r31, 0x0A	; 10
     648:	20 83       	st	Z, r18
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:132
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     64a:	e6 e8       	ldi	r30, 0x86	; 134
     64c:	fa e0       	ldi	r31, 0x0A	; 10
     64e:	20 83       	st	Z, r18
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:334
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, UPDI::UPDI_SIB_128 };
  uint8_t* _p = &JTAG2::packet.body[4];
  size_t _len = 16;
  if (!skip) {
    /* HV制御強制許可 */
    if (bit_is_set(UPDI_CONTROL, UPDI_FCHV_bp)) {
     650:	2f e0       	ldi	r18, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:335
      HV_Pulse();
     652:	e0 e8       	ldi	r30, 0x80	; 128
     654:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:338

      /* send nvmprog_key */
      if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     656:	20 83       	st	Z, r18
__iRestore():
     658:	8f bf       	out	0x3f, r24	; 63
enter_updi():
     65a:	e4 9b       	sbis	0x1c, 4	; 28
     65c:	2d c0       	rjmp	.+90     	; 0x6b8 <UPDI::updi_activate()+0xcc>
     65e:	90 df       	rcall	.-224    	; 0x580 <HV_Pulse()>
     660:	6a e0       	ldi	r22, 0x0A	; 10
     662:	70 e0       	ldi	r23, 0x00	; 0
     664:	82 e3       	ldi	r24, 0x32	; 50
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:341

      /* restart target : change mode */
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     666:	99 e9       	ldi	r25, 0x99	; 153
     668:	75 dd       	rcall	.-1302   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     66a:	88 23       	and	r24, r24
     66c:	c9 f0       	breq	.+50     	; 0x6a0 <UPDI::updi_activate()+0xb4>
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	d8 dd       	rcall	.-1104   	; 0x222 <UPDI::updi_reset(bool)>
     672:	88 23       	and	r24, r24
     674:	a9 f0       	breq	.+42     	; 0x6a0 <UPDI::updi_activate()+0xb4>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	d4 dd       	rcall	.-1112   	; 0x222 <UPDI::updi_reset(bool)>
     67a:	88 23       	and	r24, r24
     67c:	89 f0       	breq	.+34     	; 0x6a0 <UPDI::updi_activate()+0xb4>
delay_millis():
     67e:	3f e9       	ldi	r19, 0x9F	; 159
     680:	86 e8       	ldi	r24, 0x86	; 134
     682:	91 e0       	ldi	r25, 0x01	; 1
     684:	31 50       	subi	r19, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:349
      delay_millis(50);
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
     686:	80 40       	sbci	r24, 0x00	; 0
     688:	90 40       	sbci	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:350
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     68a:	e1 f7       	brne	.-8      	; 0x684 <UPDI::updi_activate()+0x98>
     68c:	00 c0       	rjmp	.+0      	; 0x68e <UPDI::updi_activate()+0xa2>
     68e:	00 00       	nop
enter_updi():
     690:	e0 99       	sbic	0x1c, 0	; 28
     692:	05 c0       	rjmp	.+10     	; 0x69e <UPDI::updi_activate()+0xb2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:420
  volatile uint8_t count = 3;
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
    delay_millis(100);
    if (setjmp(TIM::CONTEXT) == 0) {
      TIM::Timeout_Start(150);
      UPDI::enter_updi(false) && UPDI::enter_prog();
     694:	76 dd       	rcall	.-1300   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
     696:	88 23       	and	r24, r24
     698:	19 f0       	breq	.+6      	; 0x6a0 <UPDI::updi_activate()+0xb4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:422
    }
    TIM::Timeout_Stop();
     69a:	7d dd       	rcall	.-1286   	; 0x196 <UPDI::enter_updi(bool) [clone .part.4]>
_ZN4UPDI13updi_activateEv():
     69c:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:425

    /* 2周目以降は JPショートならHV制御強制を許可 */
    if (!digitalRead(JP_SENSE_PIN)) UPDI_CONTROL |= _BV(UPDI::UPDI_FCHV_bp);
     69e:	33 df       	rcall	.-410    	; 0x506 <UPDI::enter_prog()>
     6a0:	7f de       	rcall	.-770    	; 0x3a0 <TIM::Timeout_Stop()>
     6a2:	53 99       	sbic	0x0a, 3	; 10
     6a4:	aa cf       	rjmp	.-172    	; 0x5fa <UPDI::updi_activate()+0xe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:427
  }
  return bit_is_set(UPDI_CONTROL, UPDI_PROG_bp);
     6a6:	e4 9a       	sbi	0x1c, 4	; 28
     6a8:	a8 cf       	rjmp	.-176    	; 0x5fa <UPDI::updi_activate()+0xe>
     6aa:	8c b3       	in	r24, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:428
}
     6ac:	86 95       	lsr	r24
     6ae:	81 70       	andi	r24, 0x01	; 1
     6b0:	0f 90       	pop	r0
     6b2:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:347

      /* wait enable : chip erase mode success */
      delay_millis(50);
    }
    else
      UPDI::BREAK();
     6b4:	cf 91       	pop	r28
     6b6:	08 95       	ret
enter_updi():
     6b8:	00 de       	rcall	.-1024   	; 0x2ba <UPDI::BREAK()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:307
  return UPDI_LASTL;
}

/* NVMCTRL v3 */
uint8_t NVM::nvm_wait_v3 (void) {
  while (UPDI::ld8(NVM::NVMCTRL_V3_REG_STATUS) & 3) delay_micros(50);
     6ba:	ea cf       	rjmp	.-44     	; 0x690 <UPDI::updi_activate()+0xa4>

000006bc <NVM::nvm_wait_v3()>:
_ZN3NVM11nvm_wait_v3Ev():
     6bc:	66 e0       	ldi	r22, 0x06	; 6
     6be:	70 e1       	ldi	r23, 0x10	; 16
     6c0:	80 e0       	ldi	r24, 0x00	; 0
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	21 de       	rcall	.-958    	; 0x308 <UPDI::ld8(unsigned long)>
     6c6:	83 70       	andi	r24, 0x03	; 3
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     6c8:	29 f0       	breq	.+10     	; 0x6d4 <NVM::nvm_wait_v3()+0x18>
delay_micros():
     6ca:	86 ea       	ldi	r24, 0xA6	; 166
     6cc:	8a 95       	dec	r24
     6ce:	f1 f7       	brne	.-4      	; 0x6cc <NVM::nvm_wait_v3()+0x10>
     6d0:	00 c0       	rjmp	.+0      	; 0x6d2 <NVM::nvm_wait_v3()+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:308
  return UPDI_LASTL;
     6d2:	f4 cf       	rjmp	.-24     	; 0x6bc <NVM::nvm_wait_v3()>
_ZN3NVM11nvm_wait_v3Ev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:309
}
     6d4:	8e b3       	in	r24, 0x1e	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:334
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
}

/* NVMCTRL v3 */
bool NVM::nvm_ctrl_v3 (uint8_t nvmcmd) {
     6d6:	08 95       	ret

000006d8 <NVM::nvm_ctrl_v3(unsigned char)>:
_ZN3NVM11nvm_ctrl_v3Eh():
     6d8:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:335
  NVM::nvm_wait_v3();
     6da:	c8 2f       	mov	r28, r24
     6dc:	ef df       	rcall	.-34     	; 0x6bc <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:336
  return nvm_ctrl_change(nvmcmd);
     6de:	8c 2f       	mov	r24, r28
     6e0:	cf 91       	pop	r28
     6e2:	77 ce       	rjmp	.-786    	; 0x3d2 <nvm_ctrl_change(unsigned char)>

000006e4 <NVM::write_flash_v3(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v3Emj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:525

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_flash_v3 (uint32_t start_addr, size_t byte_count) {
     6e4:	cf 92       	push	r12
     6e6:	df 92       	push	r13
     6e8:	ef 92       	push	r14
     6ea:	ff 92       	push	r15
     6ec:	0f 93       	push	r16
     6ee:	1f 93       	push	r17
     6f0:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:526
  byte_count >>= 1;
     6f2:	df 93       	push	r29
     6f4:	ea 01       	movw	r28, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:527
  if (byte_count == 0 || byte_count > 256) return false;
     6f6:	d6 95       	lsr	r29
     6f8:	c7 95       	ror	r28
     6fa:	9e 01       	movw	r18, r28
     6fc:	21 50       	subi	r18, 0x01	; 1
     6fe:	31 09       	sbc	r19, r1
     700:	2f 3f       	cpi	r18, 0xFF	; 255
     702:	31 05       	cpc	r19, r1
     704:	11 f0       	breq	.+4      	; 0x70a <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:532

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     706:	08 f0       	brcs	.+2      	; 0x70a <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
     708:	57 c0       	rjmp	.+174    	; 0x7b8 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:537
    NVM::nvm_wait_v3();
    if (!UPDI::st8(start_addr, 0xFF)) return false;
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
  }
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPBCLR)) return false;
     70a:	6b 01       	movw	r12, r22
     70c:	7c 01       	movw	r14, r24
     70e:	e2 9b       	sbis	0x1c, 2	; 28
     710:	3e c0       	rjmp	.+124    	; 0x78e <NVM::write_flash_v3(unsigned long, unsigned int)+0xaa>
     712:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:540

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     714:	e1 df       	rcall	.-62     	; 0x6d8 <NVM::nvm_ctrl_v3(unsigned char)>
     716:	88 23       	and	r24, r24
     718:	09 f4       	brne	.+2      	; 0x71c <NVM::write_flash_v3(unsigned long, unsigned int)+0x38>
     71a:	4e c0       	rjmp	.+156    	; 0x7b8 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     71c:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     720:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:541
  set_repeat_rsd[5] = byte_count - 1;
     724:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
     728:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:542
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     72c:	8c 2f       	mov	r24, r28
     72e:	81 50       	subi	r24, 0x01	; 1
     730:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
     734:	65 e0       	ldi	r22, 0x05	; 5
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:543
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     73a:	98 e3       	ldi	r25, 0x38	; 56
     73c:	0b dd       	rcall	.-1514   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     73e:	88 23       	and	r24, r24
     740:	09 f4       	brne	.+2      	; 0x744 <NVM::write_flash_v3(unsigned long, unsigned int)+0x60>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:544
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     742:	3a c0       	rjmp	.+116    	; 0x7b8 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     744:	e3 dc       	rcall	.-1594   	; 0x10c <UPDI::RECV()>
     746:	80 34       	cpi	r24, 0x40	; 64
     748:	09 f0       	breq	.+2      	; 0x74c <NVM::write_flash_v3(unsigned long, unsigned int)+0x68>
     74a:	36 c0       	rjmp	.+108    	; 0x7b8 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     74c:	68 e0       	ldi	r22, 0x08	; 8
     74e:	70 e0       	ldi	r23, 0x00	; 0
     750:	8e e1       	ldi	r24, 0x1E	; 30
     752:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:549

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     754:	ff dc       	rcall	.-1538   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     756:	88 23       	and	r24, r24
     758:	79 f1       	breq	.+94     	; 0x7b8 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     75a:	03 e6       	ldi	r16, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:550
    UPDI::SEND(*p++);
     75c:	18 e3       	ldi	r17, 0x38	; 56
     75e:	f8 01       	movw	r30, r16
     760:	82 89       	ldd	r24, Z+18	; 0x12
     762:	e0 dc       	rcall	.-1600   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:551
  } while (--byte_count);
     764:	f8 01       	movw	r30, r16
     766:	83 89       	ldd	r24, Z+19	; 0x13
     768:	dd dc       	rcall	.-1606   	; 0x124 <UPDI::SEND(unsigned char)>
     76a:	21 97       	sbiw	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:555
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     76c:	0e 5f       	subi	r16, 0xFE	; 254
     76e:	1f 4f       	sbci	r17, 0xFF	; 255
     770:	20 97       	sbiw	r28, 0x00	; 0
     772:	a9 f7       	brne	.-22     	; 0x75e <NVM::write_flash_v3(unsigned long, unsigned int)+0x7a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:557

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
     774:	06 dd       	rcall	.-1524   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:558
}
     776:	88 23       	and	r24, r24
     778:	f9 f0       	breq	.+62     	; 0x7b8 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     77a:	84 e0       	ldi	r24, 0x04	; 4
     77c:	df 91       	pop	r29
     77e:	cf 91       	pop	r28
     780:	1f 91       	pop	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:557
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
     782:	0f 91       	pop	r16
     784:	ff 90       	pop	r15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:532
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     786:	ef 90       	pop	r14
     788:	df 90       	pop	r13
     78a:	cf 90       	pop	r12
     78c:	a5 cf       	rjmp	.-182    	; 0x6d8 <NVM::nvm_ctrl_v3(unsigned char)>
     78e:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     792:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     796:	01 97       	sbiw	r24, 0x01	; 1
     798:	86 23       	and	r24, r22
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:533
    NVM::nvm_wait_v3();
     79a:	9d 21       	and	r25, r13
     79c:	89 2b       	or	r24, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:534
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     79e:	09 f0       	breq	.+2      	; 0x7a2 <NVM::write_flash_v3(unsigned long, unsigned int)+0xbe>
     7a0:	b8 cf       	rjmp	.-144    	; 0x712 <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     7a2:	8c df       	rcall	.-232    	; 0x6bc <NVM::nvm_wait_v3()>
     7a4:	4f ef       	ldi	r20, 0xFF	; 255
     7a6:	c7 01       	movw	r24, r14
     7a8:	b6 01       	movw	r22, r12
     7aa:	47 dd       	rcall	.-1394   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:535
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
     7ac:	88 23       	and	r24, r24
     7ae:	21 f0       	breq	.+8      	; 0x7b8 <NVM::write_flash_v3(unsigned long, unsigned int)+0xd4>
     7b0:	88 e0       	ldi	r24, 0x08	; 8
     7b2:	92 df       	rcall	.-220    	; 0x6d8 <NVM::nvm_ctrl_v3(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:558

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW);
}
     7b4:	81 11       	cpse	r24, r1
     7b6:	ad cf       	rjmp	.-166    	; 0x712 <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	1f 91       	pop	r17
     7c0:	0f 91       	pop	r16
     7c2:	ff 90       	pop	r15
     7c4:	ef 90       	pop	r14
     7c6:	df 90       	pop	r13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:301
 */

/* NVMCTRL v0 */
/* NVMCTRL v2 */
uint8_t NVM::nvm_wait (void) {
  while (UPDI::ld8(NVM::NVMCTRL_REG_STATUS) & 3) delay_micros(50);
     7c8:	cf 90       	pop	r12
     7ca:	08 95       	ret

000007cc <NVM::nvm_wait()>:
_ZN3NVM8nvm_waitEv():
     7cc:	62 e0       	ldi	r22, 0x02	; 2
     7ce:	70 e1       	ldi	r23, 0x10	; 16
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	99 dd       	rcall	.-1230   	; 0x308 <UPDI::ld8(unsigned long)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     7d6:	83 70       	andi	r24, 0x03	; 3
     7d8:	29 f0       	breq	.+10     	; 0x7e4 <NVM::nvm_wait()+0x18>
delay_micros():
     7da:	86 ea       	ldi	r24, 0xA6	; 166
     7dc:	8a 95       	dec	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:302
  return UPDI_LASTL;
     7de:	f1 f7       	brne	.-4      	; 0x7dc <NVM::nvm_wait()+0x10>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:303
}
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <NVM::nvm_wait()+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:328
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
     7e2:	f4 cf       	rjmp	.-24     	; 0x7cc <NVM::nvm_wait()>
_ZN3NVM8nvm_waitEv():
     7e4:	8e b3       	in	r24, 0x1e	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:329
  NVM::nvm_wait();
     7e6:	08 95       	ret

000007e8 <NVM::nvm_ctrl_v2(unsigned char)>:
_ZN3NVM11nvm_ctrl_v2Eh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:330
  return nvm_ctrl_change(nvmcmd);
     7e8:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:331
}
     7ea:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:330
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
     7ec:	ef df       	rcall	.-34     	; 0x7cc <NVM::nvm_wait()>
     7ee:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:490
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_flash_v2 (uint32_t start_addr, size_t byte_count) {
     7f0:	cf 91       	pop	r28
     7f2:	ef cd       	rjmp	.-1058   	; 0x3d2 <nvm_ctrl_change(unsigned char)>

000007f4 <NVM::write_flash_v2(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v2Emj():
     7f4:	cf 92       	push	r12
     7f6:	df 92       	push	r13
     7f8:	ef 92       	push	r14
     7fa:	ff 92       	push	r15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:491
  byte_count >>= 1;
     7fc:	0f 93       	push	r16
     7fe:	1f 93       	push	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:492
  if (byte_count == 0 || byte_count > 256) return false;
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	ea 01       	movw	r28, r20
     806:	d6 95       	lsr	r29
     808:	c7 95       	ror	r28
     80a:	9e 01       	movw	r18, r28
     80c:	21 50       	subi	r18, 0x01	; 1
     80e:	31 09       	sbc	r19, r1
     810:	2f 3f       	cpi	r18, 0xFF	; 255
     812:	31 05       	cpc	r19, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:497

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     814:	11 f0       	breq	.+4      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:501
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
    if (!UPDI::st8(start_addr, 0xFF)) return false;
  }
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLWR)) return false;
     816:	08 f0       	brcs	.+2      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     818:	55 c0       	rjmp	.+170    	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     81a:	6b 01       	movw	r12, r22
     81c:	7c 01       	movw	r14, r24
     81e:	e2 9b       	sbis	0x1c, 2	; 28
     820:	3d c0       	rjmp	.+122    	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:504

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     822:	82 e0       	ldi	r24, 0x02	; 2
     824:	e1 df       	rcall	.-62     	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     826:	88 23       	and	r24, r24
     828:	09 f4       	brne	.+2      	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     82a:	4c c0       	rjmp	.+152    	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     82c:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:505
  set_repeat_rsd[5] = byte_count - 1;
     830:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     834:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:506
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     838:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     83c:	8c 2f       	mov	r24, r28
     83e:	81 50       	subi	r24, 0x01	; 1
     840:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
     844:	65 e0       	ldi	r22, 0x05	; 5
     846:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:507
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     848:	8b e2       	ldi	r24, 0x2B	; 43
     84a:	98 e3       	ldi	r25, 0x38	; 56
     84c:	83 dc       	rcall	.-1786   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     84e:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:508
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     850:	09 f4       	brne	.+2      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
     852:	38 c0       	rjmp	.+112    	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     854:	5b dc       	rcall	.-1866   	; 0x10c <UPDI::RECV()>
     856:	80 34       	cpi	r24, 0x40	; 64
     858:	a9 f5       	brne	.+106    	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     85a:	68 e0       	ldi	r22, 0x08	; 8
     85c:	70 e0       	ldi	r23, 0x00	; 0
     85e:	8e e1       	ldi	r24, 0x1E	; 30
     860:	98 e3       	ldi	r25, 0x38	; 56
     862:	78 dc       	rcall	.-1808   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:513

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     864:	88 23       	and	r24, r24
     866:	71 f1       	breq	.+92     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     868:	03 e6       	ldi	r16, 0x63	; 99
     86a:	18 e3       	ldi	r17, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:514
    UPDI::SEND(*p++);
     86c:	f8 01       	movw	r30, r16
     86e:	82 89       	ldd	r24, Z+18	; 0x12
     870:	59 dc       	rcall	.-1870   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:515
  } while (--byte_count);
     872:	f8 01       	movw	r30, r16
     874:	83 89       	ldd	r24, Z+19	; 0x13
     876:	56 dc       	rcall	.-1876   	; 0x124 <UPDI::SEND(unsigned char)>
     878:	21 97       	sbiw	r28, 0x01	; 1
     87a:	0e 5f       	subi	r16, 0xFE	; 254
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:519
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     87c:	1f 4f       	sbci	r17, 0xFF	; 255
     87e:	20 97       	sbiw	r28, 0x00	; 0
     880:	a9 f7       	brne	.-22     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
     882:	7f dc       	rcall	.-1794   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:521

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     884:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:522
}
     886:	f1 f0       	breq	.+60     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	df 91       	pop	r29
     88c:	cf 91       	pop	r28
     88e:	1f 91       	pop	r17
     890:	0f 91       	pop	r16
     892:	ff 90       	pop	r15
     894:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:521
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     896:	df 90       	pop	r13
     898:	cf 90       	pop	r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:497
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     89a:	a6 cf       	rjmp	.-180    	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     89c:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     8a0:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     8a4:	01 97       	sbiw	r24, 0x01	; 1
     8a6:	86 23       	and	r24, r22
     8a8:	9d 21       	and	r25, r13
     8aa:	89 2b       	or	r24, r25
     8ac:	09 f0       	breq	.+2      	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:498
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     8ae:	b9 cf       	rjmp	.-142    	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     8b0:	88 e0       	ldi	r24, 0x08	; 8
     8b2:	9a df       	rcall	.-204    	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     8b4:	88 23       	and	r24, r24
     8b6:	31 f0       	breq	.+12     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:499
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     8b8:	4f ef       	ldi	r20, 0xFF	; 255
     8ba:	c7 01       	movw	r24, r14
     8bc:	b6 01       	movw	r22, r12
     8be:	bd dc       	rcall	.-1670   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
     8c0:	81 11       	cpse	r24, r1
     8c2:	af cf       	rjmp	.-162    	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     8c4:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:522

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}
     8c6:	df 91       	pop	r29
     8c8:	cf 91       	pop	r28
     8ca:	1f 91       	pop	r17
     8cc:	0f 91       	pop	r16
     8ce:	ff 90       	pop	r15
     8d0:	ef 90       	pop	r14
     8d2:	df 90       	pop	r13
     8d4:	cf 90       	pop	r12
     8d6:	08 95       	ret

000008d8 <UPDI::runtime(unsigned char)>:
_ZN4UPDI7runtimeEh():
     8d8:	bf 92       	push	r11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:434

/*
 * UPDI制御プロセス
 */

bool UPDI::runtime (uint8_t updi_cmd) {
     8da:	cf 92       	push	r12
     8dc:	df 92       	push	r13
     8de:	ef 92       	push	r14
     8e0:	ff 92       	push	r15
     8e2:	0f 93       	push	r16
     8e4:	1f 93       	push	r17
     8e6:	cf 93       	push	r28
     8e8:	df 93       	push	r29
     8ea:	cd b7       	in	r28, 0x3d	; 61
     8ec:	de b7       	in	r29, 0x3e	; 62
     8ee:	26 97       	sbiw	r28, 0x06	; 6
     8f0:	cd bf       	out	0x3d, r28	; 61
     8f2:	de bf       	out	0x3e, r29	; 62
     8f4:	8e 83       	std	Y+6, r24	; 0x06
     8f6:	1d 82       	std	Y+5, r1	; 0x05
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:435
  volatile bool _result = false;
     8f8:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:437
  uint16_t limit = 4000;
  if (setjmp(TIM::CONTEXT) == 0) {
     8fa:	98 e3       	ldi	r25, 0x38	; 56
     8fc:	ce d7       	rcall	.+3996   	; 0x189a <setjmp>
     8fe:	89 2b       	or	r24, r25
     900:	09 f0       	breq	.+2      	; 0x904 <UPDI::runtime(unsigned char)+0x2c>
     902:	06 c1       	rjmp	.+524    	; 0xb10 <UPDI::runtime(unsigned char)+0x238>
Timeout_Start():
     904:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
     906:	f8 94       	cli
Timeout_Start():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:127
/*
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     908:	10 92 8a 0a 	sts	0x0A8A, r1	; 0x800a8a <UPDI::nvmprog_key+0x7f7158>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:128
    TCB0_CNT = 0;
     90c:	10 92 8b 0a 	sts	0x0A8B, r1	; 0x800a8b <UPDI::nvmprog_key+0x7f7159>
     910:	28 ee       	ldi	r18, 0xE8	; 232
     912:	33 e0       	ldi	r19, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:129
    TCB0_CCMP = _ms >> 2;
     914:	20 93 8c 0a 	sts	0x0A8C, r18	; 0x800a8c <UPDI::nvmprog_key+0x7f715a>
     918:	30 93 8d 0a 	sts	0x0A8D, r19	; 0x800a8d <UPDI::nvmprog_key+0x7f715b>
     91c:	81 e0       	ldi	r24, 0x01	; 1
     91e:	80 93 85 0a 	sts	0x0A85, r24	; 0x800a85 <UPDI::nvmprog_key+0x7f7153>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:130
    TCB0_INTCTRL = TCB_CAPT_bm;
     922:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f7154>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:131
    TCB0_INTFLAGS = TCB_CAPT_bm;
     926:	8f e0       	ldi	r24, 0x0F	; 15
     928:	80 93 80 0a 	sts	0x0A80, r24	; 0x800a80 <UPDI::nvmprog_key+0x7f714e>
__iRestore():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:132
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     92c:	9f bf       	out	0x3f, r25	; 63
_ZN4UPDI7runtimeEh():
     92e:	8e 81       	ldd	r24, Y+6	; 0x06
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     930:	83 30       	cpi	r24, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:439
    TIM::Timeout_Start(limit);
    switch (updi_cmd) {
     932:	09 f4       	brne	.+2      	; 0x936 <UPDI::runtime(unsigned char)+0x5e>
     934:	a6 c3       	rjmp	.+1868   	; 0x1082 <UPDI::runtime(unsigned char)+0x7aa>
     936:	84 30       	cpi	r24, 0x04	; 4
     938:	09 f4       	brne	.+2      	; 0x93c <UPDI::runtime(unsigned char)+0x64>
     93a:	f0 c3       	rjmp	.+2016   	; 0x111c <UPDI::runtime(unsigned char)+0x844>
     93c:	82 30       	cpi	r24, 0x02	; 2
     93e:	09 f4       	brne	.+2      	; 0x942 <UPDI::runtime(unsigned char)+0x6a>
     940:	ae c0       	rjmp	.+348    	; 0xa9e <UPDI::runtime(unsigned char)+0x1c6>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:50
/*
 * メモリ読込中核
 */

bool NVM::read_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     942:	e3 e6       	ldi	r30, 0x63	; 99
     944:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:51
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     946:	81 85       	ldd	r24, Z+9	; 0x09
     948:	02 85       	ldd	r16, Z+10	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:52
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     94a:	13 85       	ldd	r17, Z+11	; 0x0b
     94c:	46 85       	ldd	r20, Z+14	; 0x0e
     94e:	57 85       	ldd	r21, Z+15	; 0x0f
     950:	60 89       	ldd	r22, Z+16	; 0x10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:53
  JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
     952:	71 89       	ldd	r23, Z+17	; 0x11
     954:	92 e8       	ldi	r25, 0x82	; 130
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:54
  JTAG2::packet.size_word[0] = byte_count + 1;
     956:	90 87       	std	Z+8, r25	; 0x08
     958:	98 01       	movw	r18, r16
     95a:	2f 5f       	subi	r18, 0xFF	; 255
     95c:	3f 4f       	sbci	r19, 0xFF	; 255
     95e:	23 83       	std	Z+3, r18	; 0x03
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:58
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     960:	34 83       	std	Z+4, r19	; 0x04
     962:	02 30       	cpi	r16, 0x02	; 2
     964:	11 05       	cpc	r17, r1
     966:	08 f4       	brcc	.+2      	; 0x96a <UPDI::runtime(unsigned char)+0x92>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:59
    switch (mem_type) {
     968:	46 c0       	rjmp	.+140    	; 0x9f6 <UPDI::runtime(unsigned char)+0x11e>
     96a:	80 3c       	cpi	r24, 0xC0	; 192
     96c:	09 f4       	brne	.+2      	; 0x970 <UPDI::runtime(unsigned char)+0x98>
     96e:	5c c0       	rjmp	.+184    	; 0xa28 <UPDI::runtime(unsigned char)+0x150>
     970:	48 f4       	brcc	.+18     	; 0x984 <UPDI::runtime(unsigned char)+0xac>
     972:	82 32       	cpi	r24, 0x22	; 34
     974:	09 f4       	brne	.+2      	; 0x978 <UPDI::runtime(unsigned char)+0xa0>
     976:	65 c0       	rjmp	.+202    	; 0xa42 <UPDI::runtime(unsigned char)+0x16a>
     978:	18 f0       	brcs	.+6      	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
     97a:	82 5b       	subi	r24, 0xB2	; 178
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:303
bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     97c:	84 30       	cpi	r24, 0x04	; 4
     97e:	d8 f1       	brcs	.+118    	; 0x9f6 <UPDI::runtime(unsigned char)+0x11e>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:59
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	33 c0       	rjmp	.+102    	; 0x9ea <UPDI::runtime(unsigned char)+0x112>
read_memory():
     984:	84 3c       	cpi	r24, 0xC4	; 196
     986:	09 f4       	brne	.+2      	; 0x98a <UPDI::runtime(unsigned char)+0xb2>
     988:	5c c0       	rjmp	.+184    	; 0xa42 <UPDI::runtime(unsigned char)+0x16a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:67
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
      }
      /* Flash 領域 */
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     98a:	88 f5       	brcc	.+98     	; 0x9ee <UPDI::runtime(unsigned char)+0x116>
     98c:	81 3c       	cpi	r24, 0xC1	; 193
     98e:	c1 f7       	brne	.-16     	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
     990:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
     994:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     998:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:252
/*
 * Flash領域ワード読込
 */

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
     99c:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
read_flash():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:253
  if (byte_count == 0 || byte_count > 256) return false;
     9a0:	16 95       	lsr	r17
     9a2:	07 95       	ror	r16
     9a4:	98 01       	movw	r18, r16
     9a6:	21 50       	subi	r18, 0x01	; 1
     9a8:	31 09       	sbc	r19, r1
     9aa:	2f 3f       	cpi	r18, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:67
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
      }
      /* Flash 領域 */
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     9ac:	31 05       	cpc	r19, r1
     9ae:	09 f0       	breq	.+2      	; 0x9b2 <UPDI::runtime(unsigned char)+0xda>
     9b0:	38 f7       	brcc	.-50     	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
read_memory():
     9b2:	48 0f       	add	r20, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:255

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
  if (byte_count == 0 || byte_count > 256) return false;
  uint8_t* p = &JTAG2::packet.body[1];
  if (!UPDI::send_repeat_header(
     9b4:	59 1f       	adc	r21, r25
     9b6:	6a 1f       	adc	r22, r26
     9b8:	7b 1f       	adc	r23, r27
read_flash():
     9ba:	98 01       	movw	r18, r16
     9bc:	81 e2       	ldi	r24, 0x21	; 33
     9be:	5e dc       	rcall	.-1860   	; 0x27c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     9c0:	88 23       	and	r24, r24
     9c2:	f1 f2       	breq	.-68     	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
     9c4:	73 e6       	ldi	r23, 0x63	; 99
     9c6:	e7 2e       	mov	r14, r23
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:261
    (UPDI::UPDI_LD | UPDI::UPDI_DATA2),
    start_addr,
    byte_count
  )) return false;
  do {
    *p++ = UPDI::RECV();
     9c8:	78 e3       	ldi	r23, 0x38	; 56
     9ca:	f7 2e       	mov	r15, r23
     9cc:	9f db       	rcall	.-2242   	; 0x10c <UPDI::RECV()>
     9ce:	f7 01       	movw	r30, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:262
    *p++ = UPDI::RECV();
     9d0:	81 87       	std	Z+9, r24	; 0x09
     9d2:	9c db       	rcall	.-2248   	; 0x10c <UPDI::RECV()>
     9d4:	f7 01       	movw	r30, r14
     9d6:	82 87       	std	Z+10, r24	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:263
  } while (--byte_count);
     9d8:	01 50       	subi	r16, 0x01	; 1
     9da:	11 09       	sbc	r17, r1
     9dc:	f2 e0       	ldi	r31, 0x02	; 2
     9de:	ef 0e       	add	r14, r31
     9e0:	f1 1c       	adc	r15, r1
     9e2:	01 15       	cp	r16, r1
     9e4:	11 05       	cpc	r17, r1
     9e6:	91 f7       	brne	.-28     	; 0x9cc <UPDI::runtime(unsigned char)+0xf4>
read_userrow_dummy():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:290
bool NVM::read_userrow_dummy (size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
  uint8_t* p = &JTAG2::packet.body[1];
  uint8_t* q = &JTAG2::packet.body[266];
  do { *p++ = *q++; } while (--byte_count);
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_URWR_bp);
     9e8:	81 e0       	ldi	r24, 0x01	; 1
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:464
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
     9ea:	8d 83       	std	Y+5, r24	; 0x05
     9ec:	91 c0       	rjmp	.+290    	; 0xb10 <UPDI::runtime(unsigned char)+0x238>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:59
  JTAG2::packet.size_word[0] = byte_count + 1;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     9ee:	85 3c       	cpi	r24, 0xC5	; 197
     9f0:	a9 f1       	breq	.+106    	; 0xa5c <UPDI::runtime(unsigned char)+0x184>
     9f2:	86 3c       	cpi	r24, 0xC6	; 198
     9f4:	29 f6       	brne	.-118    	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
read_data():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:272
/*
 * データ領域バイト読込
 */

bool NVM::read_data (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     9f6:	c8 01       	movw	r24, r16
     9f8:	01 97       	sbiw	r24, 0x01	; 1
     9fa:	8f 3f       	cpi	r24, 0xFF	; 255
     9fc:	91 05       	cpc	r25, r1
     9fe:	11 f0       	breq	.+4      	; 0xa04 <UPDI::runtime(unsigned char)+0x12c>
     a00:	08 f0       	brcs	.+2      	; 0xa04 <UPDI::runtime(unsigned char)+0x12c>
     a02:	be cf       	rjmp	.-132    	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:274
  uint8_t* p = &JTAG2::packet.body[1];
  if (!UPDI::send_repeat_header(
     a04:	98 01       	movw	r18, r16
     a06:	80 e2       	ldi	r24, 0x20	; 32
     a08:	39 dc       	rcall	.-1934   	; 0x27c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     a0a:	88 23       	and	r24, r24
     a0c:	09 f4       	brne	.+2      	; 0xa10 <UPDI::runtime(unsigned char)+0x138>
     a0e:	b8 cf       	rjmp	.-144    	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
     a10:	6c e6       	ldi	r22, 0x6C	; 108
     a12:	e6 2e       	mov	r14, r22
     a14:	68 e3       	ldi	r22, 0x38	; 56
     a16:	f6 2e       	mov	r15, r22
     a18:	79 db       	rcall	.-2318   	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:277
    (UPDI::UPDI_LD | UPDI::UPDI_DATA1),
    start_addr, byte_count)) return false;
  do { *p++ = UPDI::RECV(); } while (--byte_count);
     a1a:	f7 01       	movw	r30, r14
     a1c:	81 93       	st	Z+, r24
     a1e:	7f 01       	movw	r14, r30
     a20:	01 50       	subi	r16, 0x01	; 1
     a22:	11 09       	sbc	r17, r1
     a24:	c9 f7       	brne	.-14     	; 0xa18 <UPDI::runtime(unsigned char)+0x140>
     a26:	e0 cf       	rjmp	.-64     	; 0x9e8 <UPDI::runtime(unsigned char)+0x110>
read_memory():
     a28:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:63
  if (byte_count >= 2) {
    switch (mem_type) {
      /* Data 領域 */
      /* これは常に絶対アドレス */
      case JTAG2::MTYPE_XMEGA_FLASH : {   // 0xC0
        start_addr -= NVM::nvm_flash_offset;
     a2c:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     a30:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
     a34:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
     a38:	48 1b       	sub	r20, r24
     a3a:	59 0b       	sbc	r21, r25
     a3c:	6a 0b       	sbc	r22, r26
     a3e:	7b 0b       	sbc	r23, r27
     a40:	a7 cf       	rjmp	.-178    	; 0x990 <UPDI::runtime(unsigned char)+0xb8>
     a42:	80 91 5f 38 	lds	r24, 0x385F	; 0x80385f <NVM::nvm_eeprom_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:73
        return NVM::read_flash(start_addr, byte_count);
      }
      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :          // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA : {  // 0xC4
        start_addr += NVM::nvm_eeprom_offset;
     a46:	90 91 60 38 	lds	r25, 0x3860	; 0x803860 <NVM::nvm_eeprom_offset+0x1>
     a4a:	a0 91 61 38 	lds	r26, 0x3861	; 0x803861 <NVM::nvm_eeprom_offset+0x2>
     a4e:	b0 91 62 38 	lds	r27, 0x3862	; 0x803862 <NVM::nvm_eeprom_offset+0x3>
     a52:	48 0f       	add	r20, r24
     a54:	59 1f       	adc	r21, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:83

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
          return NVM::read_userrow_dummy(byte_count);

        start_addr += NVM::nvm_user_sig_offset;
     a56:	6a 1f       	adc	r22, r26
     a58:	7b 1f       	adc	r23, r27
     a5a:	cd cf       	rjmp	.-102    	; 0x9f6 <UPDI::runtime(unsigned char)+0x11e>
     a5c:	e5 9b       	sbis	0x1c, 5	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:80
      }
      /* USERROW/USERSIG */
      case JTAG2::MTYPE_USERSIG : {       // 0xC5

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
     a5e:	16 c0       	rjmp	.+44     	; 0xa8c <UPDI::runtime(unsigned char)+0x1b4>
read_userrow_dummy():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:286
/*
 * 施錠デバイスの USERROW ダミー応答
 */

bool NVM::read_userrow_dummy (size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     a60:	c8 01       	movw	r24, r16
     a62:	01 97       	sbiw	r24, 0x01	; 1
     a64:	8f 3f       	cpi	r24, 0xFF	; 255
     a66:	91 05       	cpc	r25, r1
     a68:	11 f0       	breq	.+4      	; 0xa6e <UPDI::runtime(unsigned char)+0x196>
     a6a:	08 f0       	brcs	.+2      	; 0xa6e <UPDI::runtime(unsigned char)+0x196>
     a6c:	89 cf       	rjmp	.-238    	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
     a6e:	e3 e6       	ldi	r30, 0x63	; 99
     a70:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:289
  uint8_t* p = &JTAG2::packet.body[1];
  uint8_t* q = &JTAG2::packet.body[266];
  do { *p++ = *q++; } while (--byte_count);
     a72:	0d 59       	subi	r16, 0x9D	; 157
     a74:	17 4c       	sbci	r17, 0xC7	; 199
     a76:	df 01       	movw	r26, r30
     a78:	ae 5e       	subi	r26, 0xEE	; 238
     a7a:	be 4f       	sbci	r27, 0xFE	; 254
     a7c:	8c 91       	ld	r24, X
     a7e:	81 87       	std	Z+9, r24	; 0x09
     a80:	31 96       	adiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:290
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_URWR_bp);
     a82:	0e 17       	cp	r16, r30
     a84:	1f 07       	cpc	r17, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:83

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
          return NVM::read_userrow_dummy(byte_count);

        start_addr += NVM::nvm_user_sig_offset;
     a86:	b9 f7       	brne	.-18     	; 0xa76 <UPDI::runtime(unsigned char)+0x19e>
     a88:	e5 98       	cbi	0x1c, 5	; 28
     a8a:	ae cf       	rjmp	.-164    	; 0x9e8 <UPDI::runtime(unsigned char)+0x110>
read_memory():
     a8c:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
     a90:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
     a94:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:445
      case UPDI::UPDI_CMD_READ_MEMORY : {
        _result = NVM::read_memory();
        break;
      }
      case UPDI::UPDI_CMD_WRITE_MEMORY : {
        if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
     a98:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:447
          /* USERROW だけは非PROG状態でも処理を通す */
          if (JTAG2::packet.body[1] != JTAG2::MTYPE_USERSIG) break;
     a9c:	da cf       	rjmp	.-76     	; 0xa52 <UPDI::runtime(unsigned char)+0x17a>
_ZN4UPDI7runtimeEh():
     a9e:	e1 99       	sbic	0x1c, 1	; 28
     aa0:	30 c0       	rjmp	.+96     	; 0xb02 <UPDI::runtime(unsigned char)+0x22a>
     aa2:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:106
/*
 * メモリ書込中核
 */

bool NVM::write_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     aa6:	85 3c       	cpi	r24, 0xC5	; 197
     aa8:	99 f5       	brne	.+102    	; 0xb10 <UPDI::runtime(unsigned char)+0x238>
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:107
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     aaa:	e3 e6       	ldi	r30, 0x63	; 99
     aac:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:108
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     aae:	81 85       	ldd	r24, Z+9	; 0x09
     ab0:	02 85       	ldd	r16, Z+10	; 0x0a
     ab2:	13 85       	ldd	r17, Z+11	; 0x0b
     ab4:	c6 84       	ldd	r12, Z+14	; 0x0e
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:112
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     ab6:	d7 84       	ldd	r13, Z+15	; 0x0f
     ab8:	e0 88       	ldd	r14, Z+16	; 0x10
     aba:	f1 88       	ldd	r15, Z+17	; 0x11
     abc:	02 30       	cpi	r16, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:170
      default : return false;
    }
  }
  else {
    /* ここは 1byte単位書込で通る */
    uint8_t data = JTAG2::packet.body[10];
     abe:	11 05       	cpc	r17, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:171
    switch (mem_type) {
     ac0:	08 f0       	brcs	.+2      	; 0xac4 <UPDI::runtime(unsigned char)+0x1ec>
     ac2:	39 c0       	rjmp	.+114    	; 0xb36 <UPDI::runtime(unsigned char)+0x25e>
     ac4:	b2 88       	ldd	r11, Z+18	; 0x12
     ac6:	82 3b       	cpi	r24, 0xB2	; 178
     ac8:	08 f4       	brcc	.+2      	; 0xacc <UPDI::runtime(unsigned char)+0x1f4>
     aca:	4c c0       	rjmp	.+152    	; 0xb64 <UPDI::runtime(unsigned char)+0x28c>
     acc:	84 3b       	cpi	r24, 0xB4	; 180
     ace:	08 f4       	brcc	.+2      	; 0xad2 <UPDI::runtime(unsigned char)+0x1fa>
     ad0:	af c1       	rjmp	.+862    	; 0xe30 <UPDI::runtime(unsigned char)+0x558>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:190
        /* ここは terminal mode の場合のみ通過するはず */
        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     ad2:	85 3c       	cpi	r24, 0xC5	; 197
     ad4:	09 f0       	breq	.+2      	; 0xad8 <UPDI::runtime(unsigned char)+0x200>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:192
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
     ad6:	46 c0       	rjmp	.+140    	; 0xb64 <UPDI::runtime(unsigned char)+0x28c>
     ad8:	ef 9b       	sbis	0x1d, 7	; 29
     ada:	2c c2       	rjmp	.+1112   	; 0xf34 <UPDI::runtime(unsigned char)+0x65c>
     adc:	8c 2d       	mov	r24, r12
     ade:	9c 2d       	mov	r25, r12
     ae0:	9f 73       	andi	r25, 0x3F	; 63
     ae2:	09 f0       	breq	.+2      	; 0xae6 <UPDI::runtime(unsigned char)+0x20e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:193
            NVM::nvm_wait_v3();
     ae4:	13 c2       	rjmp	.+1062   	; 0xf0c <UPDI::runtime(unsigned char)+0x634>
     ae6:	ff ef       	ldi	r31, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:194
            if (!UPDI::st8(start_addr, 0xFF)) return false;
     ae8:	bf 12       	cpse	r11, r31
     aea:	10 c2       	rjmp	.+1056   	; 0xf0c <UPDI::runtime(unsigned char)+0x634>
     aec:	e7 dd       	rcall	.-1074   	; 0x6bc <NVM::nvm_wait_v3()>
     aee:	4f ef       	ldi	r20, 0xFF	; 255
     af0:	c7 01       	movw	r24, r14
     af2:	b6 01       	movw	r22, r12
     af4:	a2 db       	rcall	.-2236   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
     af6:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:195
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
     af8:	09 f4       	brne	.+2      	; 0xafc <UPDI::runtime(unsigned char)+0x224>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:448
  do {
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW);
     afa:	76 c0       	rjmp	.+236    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     afc:	88 e0       	ldi	r24, 0x08	; 8
write_eeprom_v3():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     afe:	ec dd       	rcall	.-1064   	; 0x6d8 <NVM::nvm_ctrl_v3(unsigned char)>
     b00:	87 c0       	rjmp	.+270    	; 0xc10 <UPDI::runtime(unsigned char)+0x338>
is_sys_stat():
     b02:	61 e0       	ldi	r22, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:450
        if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
          /* USERROW だけは非PROG状態でも処理を通す */
          if (JTAG2::packet.body[1] != JTAG2::MTYPE_USERSIG) break;
        }
        else {
          if (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS)) break;
     b04:	8b e0       	ldi	r24, 0x0B	; 11
     b06:	ea db       	rcall	.-2092   	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:451
          if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
     b08:	81 11       	cpse	r24, r1
     b0a:	02 c0       	rjmp	.+4      	; 0xb10 <UPDI::runtime(unsigned char)+0x238>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:469
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
        break;
      }
    }
  }
  TIM::Timeout_Stop();
     b0c:	f3 99       	sbic	0x1e, 3	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:470
  UPDI_USART.CTRLB = UPDI_USART_ON;
     b0e:	cd cf       	rjmp	.-102    	; 0xaaa <UPDI::runtime(unsigned char)+0x1d2>
     b10:	47 dc       	rcall	.-1906   	; 0x3a0 <TIM::Timeout_Stop()>
     b12:	88 ec       	ldi	r24, 0xC8	; 200
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:471
  wdt_reset();
     b14:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6ed4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:473
  return _result;
}
     b18:	a8 95       	wdr
     b1a:	8d 81       	ldd	r24, Y+5	; 0x05
     b1c:	26 96       	adiw	r28, 0x06	; 6
     b1e:	cd bf       	out	0x3d, r28	; 61
     b20:	de bf       	out	0x3e, r29	; 62
     b22:	df 91       	pop	r29
     b24:	cf 91       	pop	r28
     b26:	1f 91       	pop	r17
     b28:	0f 91       	pop	r16
     b2a:	ff 90       	pop	r15
     b2c:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:113
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     b2e:	df 90       	pop	r13
     b30:	cf 90       	pop	r12
     b32:	bf 90       	pop	r11
     b34:	08 95       	ret
write_memory():
     b36:	82 3c       	cpi	r24, 0xC2	; 194
     b38:	08 f0       	brcs	.+2      	; 0xb3c <UPDI::runtime(unsigned char)+0x264>
     b3a:	50 c0       	rjmp	.+160    	; 0xbdc <UPDI::runtime(unsigned char)+0x304>
     b3c:	80 3c       	cpi	r24, 0xC0	; 192
     b3e:	08 f0       	brcs	.+2      	; 0xb42 <UPDI::runtime(unsigned char)+0x26a>
     b40:	55 c0       	rjmp	.+170    	; 0xbec <UPDI::runtime(unsigned char)+0x314>
     b42:	82 32       	cpi	r24, 0x22	; 34
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:129
      }
      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :        // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA :  // 0xC4
      case JTAG2::MTYPE_LOCK_BITS : {   // 0xB3
        start_addr += NVM::nvm_eeprom_offset;
     b44:	19 f0       	breq	.+6      	; 0xb4c <UPDI::runtime(unsigned char)+0x274>
     b46:	83 3b       	cpi	r24, 0xB3	; 179
     b48:	09 f0       	breq	.+2      	; 0xb4c <UPDI::runtime(unsigned char)+0x274>
     b4a:	4e c0       	rjmp	.+156    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     b4c:	80 91 5f 38 	lds	r24, 0x385F	; 0x80385f <NVM::nvm_eeprom_offset>
     b50:	90 91 60 38 	lds	r25, 0x3860	; 0x803860 <NVM::nvm_eeprom_offset+0x1>
     b54:	a0 91 61 38 	lds	r26, 0x3861	; 0x803861 <NVM::nvm_eeprom_offset+0x2>
     b58:	b0 91 62 38 	lds	r27, 0x3862	; 0x803862 <NVM::nvm_eeprom_offset+0x3>
     b5c:	c8 0e       	add	r12, r24
     b5e:	d9 1e       	adc	r13, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:240
        /* megaAVR/tinyAVR is EEPROM */
        /* この系統は EEPROM として実装されている */
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     b60:	ea 1e       	adc	r14, r26
     b62:	fb 1e       	adc	r15, r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:430
  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_eeprom_v3 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     b64:	c8 01       	movw	r24, r16
     b66:	01 97       	sbiw	r24, 0x01	; 1
     b68:	ef 9b       	sbis	0x1d, 7	; 29
     b6a:	0b c2       	rjmp	.+1046   	; 0xf82 <UPDI::runtime(unsigned char)+0x6aa>
write_eeprom_v3():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:432

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD)) return false;
     b6c:	8f 3f       	cpi	r24, 0xFF	; 255
     b6e:	91 05       	cpc	r25, r1
     b70:	11 f0       	breq	.+4      	; 0xb76 <UPDI::runtime(unsigned char)+0x29e>
     b72:	08 f0       	brcs	.+2      	; 0xb76 <UPDI::runtime(unsigned char)+0x29e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:435

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     b74:	39 c0       	rjmp	.+114    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     b76:	80 e0       	ldi	r24, 0x00	; 0
     b78:	af dd       	rcall	.-1186   	; 0x6d8 <NVM::nvm_ctrl_v3(unsigned char)>
     b7a:	88 23       	and	r24, r24
     b7c:	a9 f1       	breq	.+106    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     b7e:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     b82:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:436
  set_repeat[2] = (uint8_t)byte_count - 1;
     b86:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:437
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     b8a:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     b8e:	8f ef       	ldi	r24, 0xFF	; 255
     b90:	80 0f       	add	r24, r16
     b92:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:438
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     b96:	65 e0       	ldi	r22, 0x05	; 5
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	8b e2       	ldi	r24, 0x2B	; 43
     b9c:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:439
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     b9e:	da da       	rcall	.-2636   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     ba0:	88 23       	and	r24, r24
     ba2:	11 f1       	breq	.+68     	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     ba4:	b3 da       	rcall	.-2714   	; 0x10c <UPDI::RECV()>
     ba6:	80 34       	cpi	r24, 0x40	; 64
     ba8:	f9 f4       	brne	.+62     	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     baa:	65 e0       	ldi	r22, 0x05	; 5
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	86 e2       	ldi	r24, 0x26	; 38
     bb0:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:444

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     bb2:	d0 da       	rcall	.-2656   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     bb4:	88 23       	and	r24, r24
     bb6:	c1 f0       	breq	.+48     	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     bb8:	25 e7       	ldi	r18, 0x75	; 117
     bba:	e2 2e       	mov	r14, r18
     bbc:	28 e3       	ldi	r18, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:445
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     bbe:	f2 2e       	mov	r15, r18
     bc0:	f7 01       	movw	r30, r14
     bc2:	81 91       	ld	r24, Z+
     bc4:	7f 01       	movw	r14, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:446
  } while (--byte_count);
     bc6:	ae da       	rcall	.-2724   	; 0x124 <UPDI::SEND(unsigned char)>
     bc8:	88 23       	and	r24, r24
     bca:	71 f0       	breq	.+28     	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:448

  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW);
     bcc:	9f da       	rcall	.-2754   	; 0x10c <UPDI::RECV()>
     bce:	80 34       	cpi	r24, 0x40	; 64
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:113
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     bd0:	59 f4       	brne	.+22     	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     bd2:	01 50       	subi	r16, 0x01	; 1
     bd4:	11 09       	sbc	r17, r1
     bd6:	a1 f7       	brne	.-24     	; 0xbc0 <UPDI::runtime(unsigned char)+0x2e8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:165
        }
        /* megaAVR/tinyAVR is EEPROM */
        /* この系統は EEPROM として実装されている */
        break;
      }
      default : return false;
     bd8:	85 e1       	ldi	r24, 0x15	; 21
     bda:	91 cf       	rjmp	.-222    	; 0xafe <UPDI::runtime(unsigned char)+0x226>
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:118
    switch (mem_type) {
      /* Flash 領域 */
      /* 奇数量指定は Data領域絶対アドレス指定になる */
      case JTAG2::MTYPE_XMEGA_FLASH :   // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {  // 0xC1
        start_addr += NVM::nvm_flash_offset;
     bdc:	84 3c       	cpi	r24, 0xC4	; 196
     bde:	09 f4       	brne	.+2      	; 0xbe2 <UPDI::runtime(unsigned char)+0x30a>
     be0:	b5 cf       	rjmp	.-150    	; 0xb4c <UPDI::runtime(unsigned char)+0x274>
     be2:	85 3c       	cpi	r24, 0xC5	; 197
     be4:	09 f4       	brne	.+2      	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     be6:	68 c0       	rjmp	.+208    	; 0xcb8 <UPDI::runtime(unsigned char)+0x3e0>
_ZN4UPDI7runtimeEh():
     be8:	10 e0       	ldi	r17, 0x00	; 0
     bea:	f3 c0       	rjmp	.+486    	; 0xdd2 <UPDI::runtime(unsigned char)+0x4fa>
write_memory():
     bec:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:119
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     bf0:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:150
          /* 書く前にページ消去 */
            NVM::nvm_wait_v3();
          if (!UPDI::st8(start_addr, 0xFF)) return false;
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
     bf4:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
     bf8:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:425
  do {
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     bfc:	c8 0e       	add	r12, r24
     bfe:	d9 1e       	adc	r13, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:121
      case JTAG2::MTYPE_XMEGA_FLASH :   // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {  // 0xC1
        start_addr += NVM::nvm_flash_offset;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_flash_v3(start_addr, byte_count);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     c00:	ea 1e       	adc	r14, r26
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:159
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
          /* 書く前にページ消去 */
          if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
          if (!UPDI::st8(start_addr, 0xFF)) return false;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v2(start_addr, byte_count);
     c02:	fb 1e       	adc	r15, r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:233
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v2(start_addr, byte_count);
     c04:	ef 9b       	sbis	0x1d, 7	; 29
     c06:	06 c0       	rjmp	.+12     	; 0xc14 <UPDI::runtime(unsigned char)+0x33c>
     c08:	a8 01       	movw	r20, r16
     c0a:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:457
 * Flash領域ワード書込
 */

/* NVMCTRL v0 */
bool NVM::write_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
     c0c:	b6 01       	movw	r22, r12
     c0e:	6a dd       	rcall	.-1324   	; 0x6e4 <NVM::write_flash_v3(unsigned long, unsigned int)>
write_eeprom_v2():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:458
  if (byte_count == 0 || byte_count > 256) return false;
     c10:	18 2f       	mov	r17, r24
     c12:	df c0       	rjmp	.+446    	; 0xdd2 <UPDI::runtime(unsigned char)+0x4fa>
write_memory():
     c14:	ee 9b       	sbis	0x1d, 6	; 29
     c16:	05 c0       	rjmp	.+10     	; 0xc22 <UPDI::runtime(unsigned char)+0x34a>
     c18:	a8 01       	movw	r20, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:462

  /* この系統ではページ消去を書込と同時に行える */
  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
     c1a:	c7 01       	movw	r24, r14
     c1c:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:463
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
     c1e:	ea dd       	rcall	.-1068   	; 0x7f4 <NVM::write_flash_v2(unsigned long, unsigned int)>
     c20:	f7 cf       	rjmp	.-18     	; 0xc10 <UPDI::runtime(unsigned char)+0x338>
write_flash():
     c22:	16 95       	lsr	r17
     c24:	07 95       	ror	r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:464
  NVM::nvm_wait();
     c26:	c8 01       	movw	r24, r16
     c28:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:467

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     c2a:	8f 3f       	cpi	r24, 0xFF	; 255
     c2c:	91 05       	cpc	r25, r1
     c2e:	09 f0       	breq	.+2      	; 0xc32 <UPDI::runtime(unsigned char)+0x35a>
     c30:	d8 f6       	brcc	.-74     	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     c32:	cc dd       	rcall	.-1128   	; 0x7cc <NVM::nvm_wait()>
     c34:	84 e0       	ldi	r24, 0x04	; 4
     c36:	c7 db       	rcall	.-2162   	; 0x3c6 <NVM::nvm_ctrl(unsigned char)>
     c38:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:468
  set_repeat_rsd[5] = byte_count - 1;
     c3a:	b1 f2       	breq	.-84     	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     c3c:	c7 dd       	rcall	.-1138   	; 0x7cc <NVM::nvm_wait()>
     c3e:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:469
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     c42:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     c46:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
     c4a:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     c4e:	8f ef       	ldi	r24, 0xFF	; 255
     c50:	80 0f       	add	r24, r16
     c52:	80 93 23 38 	sts	0x3823, r24	; 0x803823 <NVM::set_repeat_rsd+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:470
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     c56:	65 e0       	ldi	r22, 0x05	; 5
     c58:	70 e0       	ldi	r23, 0x00	; 0
     c5a:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:471
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     c5c:	98 e3       	ldi	r25, 0x38	; 56
     c5e:	7a da       	rcall	.-2828   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c60:	88 23       	and	r24, r24
     c62:	09 f4       	brne	.+2      	; 0xc66 <UPDI::runtime(unsigned char)+0x38e>
     c64:	c1 cf       	rjmp	.-126    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     c66:	52 da       	rcall	.-2908   	; 0x10c <UPDI::RECV()>
     c68:	80 34       	cpi	r24, 0x40	; 64
     c6a:	09 f0       	breq	.+2      	; 0xc6e <UPDI::runtime(unsigned char)+0x396>
     c6c:	bd cf       	rjmp	.-134    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     c6e:	68 e0       	ldi	r22, 0x08	; 8
     c70:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:476

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     c72:	8e e1       	ldi	r24, 0x1E	; 30
     c74:	98 e3       	ldi	r25, 0x38	; 56
     c76:	6e da       	rcall	.-2852   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     c78:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:477
    UPDI::SEND(*p++);
     c7a:	09 f4       	brne	.+2      	; 0xc7e <UPDI::runtime(unsigned char)+0x3a6>
     c7c:	b5 cf       	rjmp	.-150    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     c7e:	43 e6       	ldi	r20, 0x63	; 99
     c80:	e4 2e       	mov	r14, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:478
  } while (--byte_count);
     c82:	48 e3       	ldi	r20, 0x38	; 56
     c84:	f4 2e       	mov	r15, r20
     c86:	f7 01       	movw	r30, r14
     c88:	82 89       	ldd	r24, Z+18	; 0x12
     c8a:	4c da       	rcall	.-2920   	; 0x124 <UPDI::SEND(unsigned char)>
     c8c:	f7 01       	movw	r30, r14
     c8e:	83 89       	ldd	r24, Z+19	; 0x13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:482
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
     c90:	49 da       	rcall	.-2926   	; 0x124 <UPDI::SEND(unsigned char)>
     c92:	01 50       	subi	r16, 0x01	; 1
     c94:	11 09       	sbc	r17, r1
     c96:	f2 e0       	ldi	r31, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:401
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  /* NVMCTRL write page and complete */
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
     c98:	ef 0e       	add	r14, r31
     c9a:	f1 1c       	adc	r15, r1
     c9c:	01 15       	cp	r16, r1
     c9e:	11 05       	cpc	r17, r1
     ca0:	91 f7       	brne	.-28     	; 0xc86 <UPDI::runtime(unsigned char)+0x3ae>
     ca2:	6f da       	rcall	.-2850   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:402
  return NVM::nvm_wait() == 0;
     ca4:	88 23       	and	r24, r24
     ca6:	09 f4       	brne	.+2      	; 0xcaa <UPDI::runtime(unsigned char)+0x3d2>
     ca8:	9f cf       	rjmp	.-194    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
write_eeprom():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:136
      }
      /* USERROW/USERSIG 領域 */
      case JTAG2::MTYPE_USERSIG : {     // 0xC5

        /* デバイス施錠されている場合 */
        if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp))
     caa:	83 e0       	ldi	r24, 0x03	; 3
     cac:	8c db       	rcall	.-2280   	; 0x3c6 <NVM::nvm_ctrl(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:258
/*
 * USERROW/USERSIG 特殊書込準備
 */
bool UPDI::enter_userrow (void) {
  /* send urowwrite_key */
  if (!UPDI::send_bytes(UPDI::urowwrite_key, sizeof(UPDI::urowwrite_key))) return false;
     cae:	88 23       	and	r24, r24
     cb0:	09 f4       	brne	.+2      	; 0xcb4 <UPDI::runtime(unsigned char)+0x3dc>
     cb2:	9a cf       	rjmp	.-204    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     cb4:	8b dd       	rcall	.-1258   	; 0x7cc <NVM::nvm_wait()>
     cb6:	25 c1       	rjmp	.+586    	; 0xf02 <UPDI::runtime(unsigned char)+0x62a>
write_memory():
     cb8:	e1 99       	sbic	0x1c, 1	; 28
     cba:	8d c0       	rjmp	.+282    	; 0xdd6 <UPDI::runtime(unsigned char)+0x4fe>
enter_userrow():
     cbc:	6a e0       	ldi	r22, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:260
  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	8e e1       	ldi	r24, 0x1E	; 30
     cc2:	99 e9       	ldi	r25, 0x99	; 153
     cc4:	47 da       	rcall	.-2930   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     cc6:	88 23       	and	r24, r24
     cc8:	09 f4       	brne	.+2      	; 0xccc <UPDI::runtime(unsigned char)+0x3f4>
     cca:	8e cf       	rjmp	.-228    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	a9 da       	rcall	.-2734   	; 0x222 <UPDI::updi_reset(bool)>
     cd0:	88 23       	and	r24, r24
     cd2:	09 f4       	brne	.+2      	; 0xcd6 <UPDI::runtime(unsigned char)+0x3fe>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     cd4:	89 cf       	rjmp	.-238    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     cd6:	80 e0       	ldi	r24, 0x00	; 0
     cd8:	a4 da       	rcall	.-2744   	; 0x222 <UPDI::updi_reset(bool)>
     cda:	88 23       	and	r24, r24
     cdc:	09 f4       	brne	.+2      	; 0xce0 <UPDI::runtime(unsigned char)+0x408>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     cde:	84 cf       	rjmp	.-248    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
delay_micros():
     ce0:	89 ef       	ldi	r24, 0xF9	; 249
     ce2:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:261
bool UPDI::enter_userrow (void) {
  /* send urowwrite_key */
  if (!UPDI::send_bytes(UPDI::urowwrite_key, sizeof(UPDI::urowwrite_key))) return false;
  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
  do{ delay_micros(100); } while (!UPDI::is_sys_stat(UPDI::UPDI_SYS_UROWPROG));
     ce4:	01 97       	sbiw	r24, 0x01	; 1
     ce6:	f1 f7       	brne	.-4      	; 0xce4 <UPDI::runtime(unsigned char)+0x40c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:572

bool NVM::write_userrow (size_t byte_count) {
  if (!UPDI::enter_userrow()) return false;

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = NVM::nvm_data_offset;
     ce8:	00 c0       	rjmp	.+0      	; 0xcea <UPDI::runtime(unsigned char)+0x412>
     cea:	00 00       	nop
is_sys_stat():
     cec:	64 e0       	ldi	r22, 0x04	; 4
     cee:	8b e0       	ldi	r24, 0x0B	; 11
     cf0:	f5 da       	rcall	.-2582   	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
enter_userrow():
     cf2:	88 23       	and	r24, r24
     cf4:	a9 f3       	breq	.-22     	; 0xce0 <UPDI::runtime(unsigned char)+0x408>
write_userrow():
     cf6:	80 91 57 38 	lds	r24, 0x3857	; 0x803857 <NVM::nvm_data_offset>
     cfa:	90 91 58 38 	lds	r25, 0x3858	; 0x803858 <NVM::nvm_data_offset+0x1>
     cfe:	a0 91 59 38 	lds	r26, 0x3859	; 0x803859 <NVM::nvm_data_offset+0x2>
     d02:	b0 91 5a 38 	lds	r27, 0x385A	; 0x80385a <NVM::nvm_data_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:573
  set_repeat[2] = (uint8_t)byte_count - 1;
     d06:	80 93 2d 38 	sts	0x382D, r24	; 0x80382d <NVM::set_ptr+0x2>
     d0a:	90 93 2e 38 	sts	0x382E, r25	; 0x80382e <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:574
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     d0e:	a0 93 2f 38 	sts	0x382F, r26	; 0x80382f <NVM::set_ptr+0x4>
     d12:	b0 93 30 38 	sts	0x3830, r27	; 0x803830 <NVM::set_ptr+0x5>
     d16:	8f ef       	ldi	r24, 0xFF	; 255
     d18:	80 0f       	add	r24, r16
     d1a:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:575
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     d1e:	65 e0       	ldi	r22, 0x05	; 5
     d20:	70 e0       	ldi	r23, 0x00	; 0
     d22:	8b e2       	ldi	r24, 0x2B	; 43
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:576
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     d24:	98 e3       	ldi	r25, 0x38	; 56
     d26:	16 da       	rcall	.-3028   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     d28:	88 23       	and	r24, r24
     d2a:	09 f4       	brne	.+2      	; 0xd2e <UPDI::runtime(unsigned char)+0x456>
     d2c:	5d cf       	rjmp	.-326    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     d2e:	ee d9       	rcall	.-3108   	; 0x10c <UPDI::RECV()>
     d30:	80 34       	cpi	r24, 0x40	; 64
     d32:	09 f0       	breq	.+2      	; 0xd36 <UPDI::runtime(unsigned char)+0x45e>
     d34:	59 cf       	rjmp	.-334    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     d36:	65 e0       	ldi	r22, 0x05	; 5
     d38:	70 e0       	ldi	r23, 0x00	; 0
     d3a:	86 e2       	ldi	r24, 0x26	; 38
     d3c:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:582

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  uint8_t* q = &JTAG2::packet.body[266];
  do {
    *q++ = *p;
     d3e:	0a da       	rcall	.-3052   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     d40:	88 23       	and	r24, r24
     d42:	09 f4       	brne	.+2      	; 0xd46 <UPDI::runtime(unsigned char)+0x46e>
     d44:	51 cf       	rjmp	.-350    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     d46:	33 e6       	ldi	r19, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:583
    if (!UPDI::SEND(*p++)) return false;
     d48:	e3 2e       	mov	r14, r19
     d4a:	38 e3       	ldi	r19, 0x38	; 56
     d4c:	f3 2e       	mov	r15, r19
     d4e:	0d 59       	subi	r16, 0x9D	; 157
     d50:	17 4c       	sbci	r17, 0xC7	; 199
     d52:	f7 01       	movw	r30, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:584
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     d54:	82 89       	ldd	r24, Z+18	; 0x12
     d56:	ee 5e       	subi	r30, 0xEE	; 238
     d58:	fe 4f       	sbci	r31, 0xFE	; 254
     d5a:	80 83       	st	Z, r24
     d5c:	f7 01       	movw	r30, r14
     d5e:	82 89       	ldd	r24, Z+18	; 0x12
     d60:	e1 d9       	rcall	.-3134   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:585
  } while (--byte_count);
     d62:	88 23       	and	r24, r24
     d64:	09 f4       	brne	.+2      	; 0xd68 <UPDI::runtime(unsigned char)+0x490>
     d66:	40 cf       	rjmp	.-384    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     d68:	d1 d9       	rcall	.-3166   	; 0x10c <UPDI::RECV()>
     d6a:	80 34       	cpi	r24, 0x40	; 64
     d6c:	09 f0       	breq	.+2      	; 0xd70 <UPDI::runtime(unsigned char)+0x498>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     d6e:	3c cf       	rjmp	.-392    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     d70:	ff ef       	ldi	r31, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     d72:	ef 1a       	sub	r14, r31
     d74:	ff 0a       	sbc	r15, r31
     d76:	0e 15       	cp	r16, r14
     d78:	1f 05       	cpc	r17, r15
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
     d7a:	59 f7       	brne	.-42     	; 0xd52 <UPDI::runtime(unsigned char)+0x47a>
set_cs_stat():
     d7c:	e5 e3       	ldi	r30, 0x35	; 53
     d7e:	f8 e3       	ldi	r31, 0x38	; 56
     d80:	8a ec       	ldi	r24, 0xCA	; 202
     d82:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
     d84:	82 e0       	ldi	r24, 0x02	; 2
     d86:	82 83       	std	Z+2, r24	; 0x02
     d88:	63 e0       	ldi	r22, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:588

  UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_SYS_CTRLA, UPDI::UPDI_SET_UROWDONE);
  do{ delay_micros(100); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_UROWPROG));
     d8a:	70 e0       	ldi	r23, 0x00	; 0
     d8c:	cf 01       	movw	r24, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:215
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     d8e:	e2 d9       	rcall	.-3132   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
delay_micros():
     d90:	89 ef       	ldi	r24, 0xF9	; 249
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:216
  set_ptr[2] = data;
     d96:	f1 f7       	brne	.-4      	; 0xd94 <UPDI::runtime(unsigned char)+0x4bc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:217
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     d98:	00 c0       	rjmp	.+0      	; 0xd9a <UPDI::runtime(unsigned char)+0x4c2>
     d9a:	00 00       	nop
is_sys_stat():
     d9c:	64 e0       	ldi	r22, 0x04	; 4
     d9e:	8b e0       	ldi	r24, 0x0B	; 11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:590
  UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, UPDI::UPDI_KEY_UROWWRITE);
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     da0:	9d da       	rcall	.-2758   	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
write_userrow():
     da2:	81 11       	cpse	r24, r1
     da4:	f5 cf       	rjmp	.-22     	; 0xd90 <UPDI::runtime(unsigned char)+0x4b8>
set_cs_stat():
     da6:	e5 e3       	ldi	r30, 0x35	; 53
     da8:	f8 e3       	ldi	r31, 0x38	; 56
     daa:	87 ec       	ldi	r24, 0xC7	; 199
     dac:	81 83       	std	Z+1, r24	; 0x01
     dae:	80 e2       	ldi	r24, 0x20	; 32
     db0:	82 83       	std	Z+2, r24	; 0x02
     db2:	63 e0       	ldi	r22, 0x03	; 3
     db4:	70 e0       	ldi	r23, 0x00	; 0
     db6:	cf 01       	movw	r24, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:591
  UPDI_CONTROL |= _BV(UPDI::UPDI_URWR_bp);
     db8:	cd d9       	rcall	.-3174   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
write_userrow():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:453
        }
        else {
          if (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS)) break;
          if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
        }
        _result = NVM::write_memory();
     dba:	81 e0       	ldi	r24, 0x01	; 1
     dbc:	32 da       	rcall	.-2972   	; 0x222 <UPDI::updi_reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:139

        /* デバイス施錠されている場合 */
        if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp))
          return NVM::write_userrow(byte_count);

        start_addr += NVM::nvm_user_sig_offset;
     dbe:	88 23       	and	r24, r24
     dc0:	09 f4       	brne	.+2      	; 0xdc4 <UPDI::runtime(unsigned char)+0x4ec>
     dc2:	12 cf       	rjmp	.-476    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	2d da       	rcall	.-2982   	; 0x222 <UPDI::updi_reset(bool)>
     dc8:	18 2f       	mov	r17, r24
     dca:	88 23       	and	r24, r24
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <UPDI::runtime(unsigned char)+0x4f8>
     dce:	0c cf       	rjmp	.-488    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     dd0:	e5 9a       	sbi	0x1c, 5	; 28
_ZN4UPDI7runtimeEh():
     dd2:	1d 83       	std	Y+5, r17	; 0x05
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:144
        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     dd4:	9d ce       	rjmp	.-710    	; 0xb10 <UPDI::runtime(unsigned char)+0x238>
write_memory():
     dd6:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:146
          /* 書く前にページ消去 */
            NVM::nvm_wait_v3();
     dda:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:147
          if (!UPDI::st8(start_addr, 0xFF)) return false;
     dde:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
     de2:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
     de6:	c8 0e       	add	r12, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:148
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
     de8:	d9 1e       	adc	r13, r25
     dea:	ea 1e       	adc	r14, r26
     dec:	fb 1e       	adc	r15, r27
     dee:	ef 9b       	sbis	0x1d, 7	; 29
     df0:	0f c0       	rjmp	.+30     	; 0xe10 <UPDI::runtime(unsigned char)+0x538>
     df2:	64 dc       	rcall	.-1848   	; 0x6bc <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:149
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     df4:	4f ef       	ldi	r20, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:154
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     df6:	c7 01       	movw	r24, r14
     df8:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:156
          /* 書く前にページ消去 */
          if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     dfa:	1f da       	rcall	.-3010   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
     dfc:	88 23       	and	r24, r24
     dfe:	09 f4       	brne	.+2      	; 0xe02 <UPDI::runtime(unsigned char)+0x52a>
     e00:	f3 ce       	rjmp	.-538    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     e02:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:157
          if (!UPDI::st8(start_addr, 0xFF)) return false;
     e04:	69 dc       	rcall	.-1838   	; 0x6d8 <NVM::nvm_ctrl_v3(unsigned char)>
     e06:	88 23       	and	r24, r24
     e08:	09 f4       	brne	.+2      	; 0xe0c <UPDI::runtime(unsigned char)+0x534>
     e0a:	ee ce       	rjmp	.-548    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     e0c:	e2 9a       	sbi	0x1c, 2	; 28
     e0e:	fc ce       	rjmp	.-520    	; 0xc08 <UPDI::runtime(unsigned char)+0x330>
     e10:	ee 9b       	sbis	0x1d, 6	; 29
     e12:	a8 ce       	rjmp	.-688    	; 0xb64 <UPDI::runtime(unsigned char)+0x28c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:158
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     e14:	88 e0       	ldi	r24, 0x08	; 8
     e16:	e8 dc       	rcall	.-1584   	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:176
    switch (mem_type) {
      /* FUSES/LOCKBITS 領域 */
      /* 常に奇数量絶対アドレス指定の特殊書込 */
      case JTAG2::MTYPE_LOCK_BITS :     // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {   // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
     e18:	88 23       	and	r24, r24
     e1a:	09 f4       	brne	.+2      	; 0xe1e <UPDI::runtime(unsigned char)+0x546>
     e1c:	e5 ce       	rjmp	.-566    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     e1e:	4f ef       	ldi	r20, 0xFF	; 255
     e20:	c7 01       	movw	r24, r14
     e22:	b6 01       	movw	r22, r12
     e24:	0a da       	rcall	.-3052   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
     e26:	88 23       	and	r24, r24
     e28:	09 f4       	brne	.+2      	; 0xe2c <UPDI::runtime(unsigned char)+0x554>
     e2a:	de ce       	rjmp	.-580    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:177
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     e2c:	e2 9a       	sbi	0x1c, 2	; 28
     e2e:	f4 ce       	rjmp	.-536    	; 0xc18 <UPDI::runtime(unsigned char)+0x340>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:366
  return _r;
}

/* NVMCTRL v3 */
bool NVM::write_fuse_v3 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     e30:	c7 01       	movw	r24, r14
     e32:	b6 01       	movw	r22, r12
     e34:	69 da       	rcall	.-2862   	; 0x308 <UPDI::ld8(unsigned long)>
     e36:	b8 12       	cpse	r11, r24
     e38:	04 c0       	rjmp	.+8      	; 0xe42 <UPDI::runtime(unsigned char)+0x56a>
     e3a:	8f b3       	in	r24, 0x1f	; 31
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:367
  if (!UPDI::st8(addr, data)) return false;
     e3c:	11 e0       	ldi	r17, 0x01	; 1
write_memory():
     e3e:	88 23       	and	r24, r24
     e40:	41 f2       	breq	.-112    	; 0xdd2 <UPDI::runtime(unsigned char)+0x4fa>
     e42:	ef 9b       	sbis	0x1d, 7	; 29
     e44:	18 c0       	rjmp	.+48     	; 0xe76 <UPDI::runtime(unsigned char)+0x59e>
write_fuse_v3():
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	cf dc       	rcall	.-1634   	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     e4a:	88 23       	and	r24, r24
     e4c:	09 f4       	brne	.+2      	; 0xe50 <UPDI::runtime(unsigned char)+0x578>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:368
  bool _r = (NVM::nvm_wait_v3() & 0x70) == 0;
     e4e:	cc ce       	rjmp	.-616    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     e50:	c7 01       	movw	r24, r14
     e52:	b6 01       	movw	r22, r12
     e54:	88 27       	eor	r24, r24
     e56:	99 27       	eor	r25, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:369
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW)) return false;
     e58:	4b 2d       	mov	r20, r11
     e5a:	ef d9       	rcall	.-3106   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
     e5c:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:360
/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
  if (!UPDI::st8(addr, data)) return false;
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     e5e:	09 f4       	brne	.+2      	; 0xe62 <UPDI::runtime(unsigned char)+0x58a>
     e60:	c3 ce       	rjmp	.-634    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     e62:	2c dc       	rcall	.-1960   	; 0x6bc <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:179
      case JTAG2::MTYPE_LOCK_BITS :     // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {   // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     e64:	80 77       	andi	r24, 0x70	; 112
     e66:	11 e0       	ldi	r17, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:357
  return ((NVM::nvm_wait() & 7) == 0);
}

/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
     e68:	09 f0       	breq	.+2      	; 0xe6c <UPDI::runtime(unsigned char)+0x594>
     e6a:	10 e0       	ldi	r17, 0x00	; 0
     e6c:	85 e1       	ldi	r24, 0x15	; 21
     e6e:	34 dc       	rcall	.-1944   	; 0x6d8 <NVM::nvm_ctrl_v3(unsigned char)>
write_fuse_v2():
     e70:	81 11       	cpse	r24, r1
     e72:	af cf       	rjmp	.-162    	; 0xdd2 <UPDI::runtime(unsigned char)+0x4fa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:358
  if (!UPDI::st8(addr, data)) return false;
     e74:	b9 ce       	rjmp	.-654    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
write_memory():
     e76:	ee 9b       	sbis	0x1d, 6	; 29
     e78:	16 c0       	rjmp	.+44     	; 0xea6 <UPDI::runtime(unsigned char)+0x5ce>
write_fuse_v2():
     e7a:	83 e1       	ldi	r24, 0x13	; 19
     e7c:	b5 dc       	rcall	.-1686   	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     e7e:	88 23       	and	r24, r24
     e80:	09 f4       	brne	.+2      	; 0xe84 <UPDI::runtime(unsigned char)+0x5ac>
     e82:	b2 ce       	rjmp	.-668    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     e84:	c7 01       	movw	r24, r14
     e86:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:359
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
     e88:	88 27       	eor	r24, r24
     e8a:	99 27       	eor	r25, r25
     e8c:	4b 2d       	mov	r20, r11
     e8e:	d5 d9       	rcall	.-3158   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
     e90:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:360
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     e92:	09 f4       	brne	.+2      	; 0xe96 <UPDI::runtime(unsigned char)+0x5be>
     e94:	a9 ce       	rjmp	.-686    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     e96:	9a dc       	rcall	.-1740   	; 0x7cc <NVM::nvm_wait()>
     e98:	80 77       	andi	r24, 0x70	; 112
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:346
 */

/* NVMCTRL v0 */
bool NVM::write_fuse (uint16_t addr, uint8_t data) {
  fuse_packet_t fuse_packet;
  fuse_packet.data = data;
     e9a:	11 e0       	ldi	r17, 0x01	; 1
     e9c:	09 f0       	breq	.+2      	; 0xea0 <UPDI::runtime(unsigned char)+0x5c8>
     e9e:	10 e0       	ldi	r17, 0x00	; 0
     ea0:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:181
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
          return NVM::write_fuse_v2(start_addr, data);
        return NVM::write_fuse(start_addr, data);
     ea2:	a2 dc       	rcall	.-1724   	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     ea4:	e5 cf       	rjmp	.-54     	; 0xe70 <UPDI::runtime(unsigned char)+0x598>
write_fuse():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:348
/* NVMCTRL v0 */
bool NVM::write_fuse (uint16_t addr, uint8_t data) {
  fuse_packet_t fuse_packet;
  fuse_packet.data = data;
  fuse_packet.addr = addr;
  NVM::nvm_wait();
     ea6:	4b 2d       	mov	r20, r11
     ea8:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:165
/*
 * 複バイト送信
 */

bool UPDI::sts8 (uint32_t addr, uint8_t *data, size_t len) {
  if (UPDI::send_repeat_header((UPDI::UPDI_ST | UPDI::UPDI_DATA1), addr, len)) {
     eaa:	49 83       	std	Y+1, r20	; 0x01
     eac:	5a 83       	std	Y+2, r21	; 0x02
write_memory():
     eae:	cb 82       	std	Y+3, r12	; 0x03
     eb0:	dc 82       	std	Y+4, r13	; 0x04
write_fuse():
     eb2:	8c dc       	rcall	.-1768   	; 0x7cc <NVM::nvm_wait()>
sts8():
     eb4:	24 e0       	ldi	r18, 0x04	; 4
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	46 e0       	ldi	r20, 0x06	; 6
     eba:	50 e1       	ldi	r21, 0x10	; 16
     ebc:	60 e0       	ldi	r22, 0x00	; 0
     ebe:	70 e0       	ldi	r23, 0x00	; 0
     ec0:	80 e6       	ldi	r24, 0x60	; 96
     ec2:	dc d9       	rcall	.-3144   	; 0x27c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     ec4:	88 23       	and	r24, r24
     ec6:	09 f4       	brne	.+2      	; 0xeca <UPDI::runtime(unsigned char)+0x5f2>
     ec8:	8f ce       	rjmp	.-738    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:167
    do {
      if (!UPDI::SEND(*data++)) break;
     eca:	8e 01       	movw	r16, r28
     ecc:	0f 5f       	subi	r16, 0xFF	; 255
     ece:	1f 4f       	sbci	r17, 0xFF	; 255
     ed0:	7e 01       	movw	r14, r28
     ed2:	95 e0       	ldi	r25, 0x05	; 5
     ed4:	e9 0e       	add	r14, r25
     ed6:	f1 1c       	adc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:168
      if (UPDI::UPDI_ACK != RECV()) break;
     ed8:	f8 01       	movw	r30, r16
     eda:	81 91       	ld	r24, Z+
     edc:	8f 01       	movw	r16, r30
     ede:	22 d9       	rcall	.-3516   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:169
    } while (--len);
     ee0:	88 23       	and	r24, r24
     ee2:	09 f4       	brne	.+2      	; 0xee6 <UPDI::runtime(unsigned char)+0x60e>
     ee4:	81 ce       	rjmp	.-766    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:351
  if (!UPDI::sts8(NVM::NVMCTRL_REG_DATA,
    (uint8_t*)&fuse_packet, sizeof(fuse_packet))) return false;
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_WFU)) return false;
     ee6:	12 d9       	rcall	.-3548   	; 0x10c <UPDI::RECV()>
     ee8:	80 34       	cpi	r24, 0x40	; 64
     eea:	09 f0       	breq	.+2      	; 0xeee <UPDI::runtime(unsigned char)+0x616>
     eec:	7d ce       	rjmp	.-774    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     eee:	e0 16       	cp	r14, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:352
  return ((NVM::nvm_wait() & 7) == 0);
     ef0:	f1 06       	cpc	r15, r17
     ef2:	91 f7       	brne	.-28     	; 0xed8 <UPDI::runtime(unsigned char)+0x600>
write_fuse():
     ef4:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:402
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  /* NVMCTRL write page and complete */
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
  return NVM::nvm_wait() == 0;
     ef6:	67 da       	rcall	.-2866   	; 0x3c6 <NVM::nvm_ctrl(unsigned char)>
     ef8:	88 23       	and	r24, r24
     efa:	09 f4       	brne	.+2      	; 0xefe <UPDI::runtime(unsigned char)+0x626>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:200
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
     efc:	75 ce       	rjmp	.-790    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:201
            JTAG2::packet.body[11] = data;
     efe:	66 dc       	rcall	.-1844   	; 0x7cc <NVM::nvm_wait()>
     f00:	87 70       	andi	r24, 0x07	; 7
write_eeprom():
     f02:	11 e0       	ldi	r17, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:202
            JTAG2::packet.body[10] = 0xFF;
     f04:	88 23       	and	r24, r24
     f06:	09 f4       	brne	.+2      	; 0xf0a <UPDI::runtime(unsigned char)+0x632>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:203
            (uint8_t)start_addr--;
     f08:	64 cf       	rjmp	.-312    	; 0xdd2 <UPDI::runtime(unsigned char)+0x4fa>
     f0a:	6e ce       	rjmp	.-804    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
write_memory():
     f0c:	80 ff       	sbrs	r24, 0
     f0e:	0e c0       	rjmp	.+28     	; 0xf2c <UPDI::runtime(unsigned char)+0x654>
     f10:	e3 e6       	ldi	r30, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:209
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     f12:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:210
          return NVM::write_flash_v3(start_addr, byte_count);
     f14:	b3 8a       	std	Z+19, r11	; 0x13
     f16:	8f ef       	ldi	r24, 0xFF	; 255
     f18:	82 8b       	std	Z+18, r24	; 0x12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:206
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
     f1a:	81 e0       	ldi	r24, 0x01	; 1
     f1c:	c8 1a       	sub	r12, r24
     f1e:	d1 08       	sbc	r13, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:214
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     f20:	e1 08       	sbc	r14, r1
     f22:	f1 08       	sbc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:216
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
     f24:	e2 9a       	sbi	0x1c, 2	; 28
     f26:	42 e0       	ldi	r20, 0x02	; 2
     f28:	50 e0       	ldi	r21, 0x00	; 0
     f2a:	6f ce       	rjmp	.-802    	; 0xc0a <UPDI::runtime(unsigned char)+0x332>
     f2c:	8f ef       	ldi	r24, 0xFF	; 255
     f2e:	80 93 76 38 	sts	0x3876, r24	; 0x803876 <JTAG2::packet+0x13>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:217
            if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     f32:	f8 cf       	rjmp	.-16     	; 0xf24 <UPDI::runtime(unsigned char)+0x64c>
     f34:	ee 9b       	sbis	0x1d, 6	; 29
     f36:	16 ce       	rjmp	.-980    	; 0xb64 <UPDI::runtime(unsigned char)+0x28c>
     f38:	8c 2d       	mov	r24, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:218
            if (!UPDI::st8(start_addr, 0xFF)) return false;
     f3a:	9c 2d       	mov	r25, r12
     f3c:	9f 73       	andi	r25, 0x3F	; 63
     f3e:	69 f4       	brne	.+26     	; 0xf5a <UPDI::runtime(unsigned char)+0x682>
     f40:	9f ef       	ldi	r25, 0xFF	; 255
     f42:	b9 12       	cpse	r11, r25
     f44:	0a c0       	rjmp	.+20     	; 0xf5a <UPDI::runtime(unsigned char)+0x682>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:223
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
     f46:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:224
            JTAG2::packet.body[11] = data;
     f48:	4f dc       	rcall	.-1890   	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     f4a:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:225
            JTAG2::packet.body[10] = 0xFF;
     f4c:	09 f4       	brne	.+2      	; 0xf50 <UPDI::runtime(unsigned char)+0x678>
     f4e:	4c ce       	rjmp	.-872    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:226
            (uint8_t)start_addr--;
     f50:	4f ef       	ldi	r20, 0xFF	; 255
     f52:	c7 01       	movw	r24, r14
     f54:	b6 01       	movw	r22, r12
     f56:	71 d9       	rcall	.-3358   	; 0x23a <UPDI::st8(unsigned long, unsigned char)>
     f58:	5b ce       	rjmp	.-842    	; 0xc10 <UPDI::runtime(unsigned char)+0x338>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:232
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     f5a:	80 ff       	sbrs	r24, 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:233
          return NVM::write_flash_v2(start_addr, byte_count);
     f5c:	0e c0       	rjmp	.+28     	; 0xf7a <UPDI::runtime(unsigned char)+0x6a2>
     f5e:	e3 e6       	ldi	r30, 0x63	; 99
     f60:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:229
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
     f62:	b3 8a       	std	Z+19, r11	; 0x13
     f64:	8f ef       	ldi	r24, 0xFF	; 255
     f66:	82 8b       	std	Z+18, r24	; 0x12
     f68:	e1 e0       	ldi	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:242
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
    return NVM::write_eeprom_v3(start_addr, byte_count);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     f6a:	ce 1a       	sub	r12, r30
     f6c:	d1 08       	sbc	r13, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:407
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_eeprom_v2 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     f6e:	e1 08       	sbc	r14, r1
     f70:	f1 08       	sbc	r15, r1
     f72:	e2 9a       	sbi	0x1c, 2	; 28
     f74:	42 e0       	ldi	r20, 0x02	; 2
     f76:	50 e0       	ldi	r21, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:409

  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
     f78:	50 ce       	rjmp	.-864    	; 0xc1a <UPDI::runtime(unsigned char)+0x342>
     f7a:	8f ef       	ldi	r24, 0xFF	; 255
     f7c:	80 93 76 38 	sts	0x3876, r24	; 0x803876 <JTAG2::packet+0x13>
     f80:	f8 cf       	rjmp	.-16     	; 0xf72 <UPDI::runtime(unsigned char)+0x69a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:412

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     f82:	ee 9b       	sbis	0x1d, 6	; 29
     f84:	3f c0       	rjmp	.+126    	; 0x1004 <UPDI::runtime(unsigned char)+0x72c>
write_eeprom_v2():
     f86:	8f 3f       	cpi	r24, 0xFF	; 255
     f88:	91 05       	cpc	r25, r1
     f8a:	11 f0       	breq	.+4      	; 0xf90 <UPDI::runtime(unsigned char)+0x6b8>
     f8c:	08 f0       	brcs	.+2      	; 0xf90 <UPDI::runtime(unsigned char)+0x6b8>
     f8e:	2c ce       	rjmp	.-936    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:413
  set_repeat[2] = (uint8_t)byte_count - 1;
     f90:	83 e1       	ldi	r24, 0x13	; 19
     f92:	2a dc       	rcall	.-1964   	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
     f94:	88 23       	and	r24, r24
     f96:	09 f4       	brne	.+2      	; 0xf9a <UPDI::runtime(unsigned char)+0x6c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:414
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     f98:	27 ce       	rjmp	.-946    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     f9a:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
     f9e:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
     fa2:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:415
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     fa6:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
     faa:	8f ef       	ldi	r24, 0xFF	; 255
     fac:	80 0f       	add	r24, r16
     fae:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:416
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     fb2:	65 e0       	ldi	r22, 0x05	; 5
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	8b e2       	ldi	r24, 0x2B	; 43
     fb8:	98 e3       	ldi	r25, 0x38	; 56
     fba:	cc d8       	rcall	.-3688   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     fbc:	88 23       	and	r24, r24
     fbe:	09 f4       	brne	.+2      	; 0xfc2 <UPDI::runtime(unsigned char)+0x6ea>
     fc0:	13 ce       	rjmp	.-986    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     fc2:	a4 d8       	rcall	.-3768   	; 0x10c <UPDI::RECV()>
     fc4:	80 34       	cpi	r24, 0x40	; 64
     fc6:	09 f0       	breq	.+2      	; 0xfca <UPDI::runtime(unsigned char)+0x6f2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:421

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     fc8:	0f ce       	rjmp	.-994    	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     fca:	65 e0       	ldi	r22, 0x05	; 5
     fcc:	70 e0       	ldi	r23, 0x00	; 0
     fce:	86 e2       	ldi	r24, 0x26	; 38
     fd0:	98 e3       	ldi	r25, 0x38	; 56
     fd2:	c0 d8       	rcall	.-3712   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:422
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     fd4:	88 23       	and	r24, r24
     fd6:	09 f4       	brne	.+2      	; 0xfda <UPDI::runtime(unsigned char)+0x702>
     fd8:	07 ce       	rjmp	.-1010   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     fda:	95 e7       	ldi	r25, 0x75	; 117
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:423
  } while (--byte_count);
     fdc:	e9 2e       	mov	r14, r25
     fde:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:425

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     fe0:	f9 2e       	mov	r15, r25
     fe2:	f7 01       	movw	r30, r14
     fe4:	81 91       	ld	r24, Z+
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:379
 * EEPROM領域バイト書込
 */

/* NVMCTRL v0 */
bool NVM::write_eeprom (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     fe6:	7f 01       	movw	r14, r30
     fe8:	9d d8       	rcall	.-3782   	; 0x124 <UPDI::SEND(unsigned char)>
     fea:	88 23       	and	r24, r24
     fec:	09 f4       	brne	.+2      	; 0xff0 <UPDI::runtime(unsigned char)+0x718>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:382

  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
     fee:	fc cd       	rjmp	.-1032   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     ff0:	8d d8       	rcall	.-3814   	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:383
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
     ff2:	80 34       	cpi	r24, 0x40	; 64
     ff4:	09 f0       	breq	.+2      	; 0xff8 <UPDI::runtime(unsigned char)+0x720>
     ff6:	f8 cd       	rjmp	.-1040   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
     ff8:	01 50       	subi	r16, 0x01	; 1
     ffa:	11 09       	sbc	r17, r1
     ffc:	91 f7       	brne	.-28     	; 0xfe2 <UPDI::runtime(unsigned char)+0x70a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:384
  NVM::nvm_wait();
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	f3 db       	rcall	.-2074   	; 0x7e8 <NVM::nvm_ctrl_v2(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:387

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
    1002:	06 ce       	rjmp	.-1012   	; 0xc10 <UPDI::runtime(unsigned char)+0x338>
write_eeprom():
    1004:	8f 3f       	cpi	r24, 0xFF	; 255
    1006:	91 05       	cpc	r25, r1
    1008:	11 f0       	breq	.+4      	; 0x100e <UPDI::runtime(unsigned char)+0x736>
    100a:	08 f0       	brcs	.+2      	; 0x100e <UPDI::runtime(unsigned char)+0x736>
    100c:	ed cd       	rjmp	.-1062   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
    100e:	de db       	rcall	.-2116   	; 0x7cc <NVM::nvm_wait()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:388
  set_repeat[2] = (uint8_t)byte_count - 1;
    1010:	84 e0       	ldi	r24, 0x04	; 4
    1012:	d9 d9       	rcall	.-3150   	; 0x3c6 <NVM::nvm_ctrl(unsigned char)>
    1014:	88 23       	and	r24, r24
    1016:	09 f4       	brne	.+2      	; 0x101a <UPDI::runtime(unsigned char)+0x742>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:389
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
    1018:	e7 cd       	rjmp	.-1074   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
    101a:	d8 db       	rcall	.-2128   	; 0x7cc <NVM::nvm_wait()>
    101c:	c0 92 2d 38 	sts	0x382D, r12	; 0x80382d <NVM::set_ptr+0x2>
    1020:	d0 92 2e 38 	sts	0x382E, r13	; 0x80382e <NVM::set_ptr+0x3>
    1024:	e0 92 2f 38 	sts	0x382F, r14	; 0x80382f <NVM::set_ptr+0x4>
    1028:	f0 92 30 38 	sts	0x3830, r15	; 0x803830 <NVM::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:390
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
    102c:	8f ef       	ldi	r24, 0xFF	; 255
    102e:	80 0f       	add	r24, r16
    1030:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:391
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
    1034:	65 e0       	ldi	r22, 0x05	; 5
    1036:	70 e0       	ldi	r23, 0x00	; 0
    1038:	8b e2       	ldi	r24, 0x2B	; 43
    103a:	98 e3       	ldi	r25, 0x38	; 56
    103c:	8b d8       	rcall	.-3818   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    103e:	88 23       	and	r24, r24
    1040:	09 f4       	brne	.+2      	; 0x1044 <UPDI::runtime(unsigned char)+0x76c>
    1042:	d2 cd       	rjmp	.-1116   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
    1044:	63 d8       	rcall	.-3898   	; 0x10c <UPDI::RECV()>
    1046:	80 34       	cpi	r24, 0x40	; 64
    1048:	09 f0       	breq	.+2      	; 0x104c <UPDI::runtime(unsigned char)+0x774>
    104a:	ce cd       	rjmp	.-1124   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
    104c:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:396

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
    104e:	70 e0       	ldi	r23, 0x00	; 0
    1050:	86 e2       	ldi	r24, 0x26	; 38
    1052:	98 e3       	ldi	r25, 0x38	; 56
    1054:	7f d8       	rcall	.-3842   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    1056:	88 23       	and	r24, r24
    1058:	09 f4       	brne	.+2      	; 0x105c <UPDI::runtime(unsigned char)+0x784>
    105a:	c6 cd       	rjmp	.-1140   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:397
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
    105c:	85 e7       	ldi	r24, 0x75	; 117
    105e:	e8 2e       	mov	r14, r24
    1060:	88 e3       	ldi	r24, 0x38	; 56
    1062:	f8 2e       	mov	r15, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:398
  } while (--byte_count);
    1064:	f7 01       	movw	r30, r14
    1066:	81 91       	ld	r24, Z+
    1068:	7f 01       	movw	r14, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:457
        }
        _result = NVM::write_memory();
        break;
      }
      case UPDI::UPDI_CMD_ERASE : {
        if (JTAG2::packet.body[1] == JTAG2::XMEGA_ERASE_CHIP
    106a:	5c d8       	rcall	.-3912   	; 0x124 <UPDI::SEND(unsigned char)>
    106c:	88 23       	and	r24, r24
    106e:	09 f4       	brne	.+2      	; 0x1072 <UPDI::runtime(unsigned char)+0x79a>
    1070:	bb cd       	rjmp	.-1162   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:458
          && _CAPS32(JTAG2::packet.body[2])->dword == 0) {
    1072:	4c d8       	rcall	.-3944   	; 0x10c <UPDI::RECV()>
    1074:	80 34       	cpi	r24, 0x40	; 64
    1076:	09 f0       	breq	.+2      	; 0x107a <UPDI::runtime(unsigned char)+0x7a2>
    1078:	b7 cd       	rjmp	.-1170   	; 0xbe8 <UPDI::runtime(unsigned char)+0x310>
    107a:	01 50       	subi	r16, 0x01	; 1
    107c:	11 09       	sbc	r17, r1
    107e:	91 f7       	brne	.-28     	; 0x1064 <UPDI::runtime(unsigned char)+0x78c>
    1080:	14 ce       	rjmp	.-984    	; 0xcaa <UPDI::runtime(unsigned char)+0x3d2>
_ZN4UPDI7runtimeEh():
    1082:	e3 e6       	ldi	r30, 0x63	; 99
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:300
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();
    1084:	f8 e3       	ldi	r31, 0x38	; 56
    1086:	81 85       	ldd	r24, Z+9	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:303

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
    1088:	81 11       	cpse	r24, r1
    108a:	42 cd       	rjmp	.-1404   	; 0xb10 <UPDI::runtime(unsigned char)+0x238>
    108c:	82 85       	ldd	r24, Z+10	; 0x0a
    108e:	93 85       	ldd	r25, Z+11	; 0x0b
    1090:	a4 85       	ldd	r26, Z+12	; 0x0c
    1092:	b5 85       	ldd	r27, Z+13	; 0x0d
    1094:	89 2b       	or	r24, r25
    1096:	8a 2b       	or	r24, r26
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:306

  /* send erase_key */
  if (!UPDI::send_bytes(UPDI::erase_key, sizeof(UPDI::erase_key))) return false;
    1098:	8b 2b       	or	r24, r27
    109a:	09 f0       	breq	.+2      	; 0x109e <UPDI::runtime(unsigned char)+0x7c6>
    109c:	39 cd       	rjmp	.-1422   	; 0xb10 <UPDI::runtime(unsigned char)+0x238>
chip_erase():
    109e:	e0 9b       	sbis	0x1c, 0	; 28
    10a0:	31 c0       	rjmp	.+98     	; 0x1104 <UPDI::runtime(unsigned char)+0x82c>
    10a2:	6a e0       	ldi	r22, 0x0A	; 10
    10a4:	70 e0       	ldi	r23, 0x00	; 0
    10a6:	82 e3       	ldi	r24, 0x32	; 50
    10a8:	99 e9       	ldi	r25, 0x99	; 153
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:309

  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
    10aa:	54 d8       	rcall	.-3928   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    10ac:	88 23       	and	r24, r24
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <UPDI::runtime(unsigned char)+0x7da>
    10b0:	67 cc       	rjmp	.-1842   	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
    10b2:	6a e0       	ldi	r22, 0x0A	; 10
    10b4:	70 e0       	ldi	r23, 0x00	; 0
    10b6:	88 e2       	ldi	r24, 0x28	; 40
    10b8:	99 e9       	ldi	r25, 0x99	; 153
    10ba:	4c d8       	rcall	.-3944   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    10bc:	88 23       	and	r24, r24
    10be:	09 f4       	brne	.+2      	; 0x10c2 <UPDI::runtime(unsigned char)+0x7ea>
    10c0:	5f cc       	rjmp	.-1858   	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:40
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	ae d8       	rcall	.-3748   	; 0x222 <UPDI::updi_reset(bool)>
    10c6:	88 23       	and	r24, r24
    10c8:	09 f4       	brne	.+2      	; 0x10cc <UPDI::runtime(unsigned char)+0x7f4>
    10ca:	5a cc       	rjmp	.-1868   	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
    10cc:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
    10ce:	a9 d8       	rcall	.-3758   	; 0x222 <UPDI::updi_reset(bool)>
    10d0:	88 23       	and	r24, r24
    10d2:	09 f4       	brne	.+2      	; 0x10d6 <UPDI::runtime(unsigned char)+0x7fe>
    10d4:	55 cc       	rjmp	.-1878   	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
delay_millis():
    10d6:	87 ea       	ldi	r24, 0xA7	; 167
    10d8:	91 e6       	ldi	r25, 0x61	; 97
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:200
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return check == (UPDI::RECV() & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
    10da:	01 97       	sbiw	r24, 0x01	; 1
    10dc:	f1 f7       	brne	.-4      	; 0x10da <UPDI::runtime(unsigned char)+0x802>
    10de:	00 c0       	rjmp	.+0      	; 0x10e0 <UPDI::runtime(unsigned char)+0x808>
    10e0:	00 00       	nop
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:314
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;

  /* wait enable : chip erase mode success */
  delay_millis(10);

  do{ delay_micros(100); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS));
    10e2:	e9 ef       	ldi	r30, 0xF9	; 249
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:315
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
    10e6:	31 97       	sbiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:317

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    10e8:	f1 f7       	brne	.-4      	; 0x10e6 <UPDI::runtime(unsigned char)+0x80e>
    10ea:	00 c0       	rjmp	.+0      	; 0x10ec <UPDI::runtime(unsigned char)+0x814>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:318
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
    10ec:	00 00       	nop
is_sys_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:321
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
    10ee:	61 e0       	ldi	r22, 0x01	; 1
    10f0:	8b e0       	ldi	r24, 0x0B	; 11
    10f2:	f4 d8       	rcall	.-3608   	; 0x2dc <UPDI::is_cs_stat(unsigned char, unsigned char)>
chip_erase():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:300
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();
    10f4:	81 11       	cpse	r24, r1
    10f6:	f5 cf       	rjmp	.-22     	; 0x10e2 <UPDI::runtime(unsigned char)+0x80a>
    10f8:	e2 9a       	sbi	0x1c, 2	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:349
      delay_millis(50);
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    10fa:	e0 9b       	sbis	0x1c, 0	; 28
    10fc:	05 c0       	rjmp	.+10     	; 0x1108 <UPDI::runtime(unsigned char)+0x830>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:350
    if (!UPDI::set_cs_ctra(UPDI::UPDI_SET_GTVAL_2)) return false;
    10fe:	e1 98       	cbi	0x1c, 1	; 28
    1100:	02 da       	rcall	.-3068   	; 0x506 <UPDI::enter_prog()>
    1102:	73 cc       	rjmp	.-1818   	; 0x9ea <UPDI::runtime(unsigned char)+0x112>
    1104:	3d da       	rcall	.-2950   	; 0x580 <HV_Pulse()>
    1106:	cd cf       	rjmp	.-102    	; 0x10a2 <UPDI::runtime(unsigned char)+0x7ca>
enter_updi():
    1108:	e0 99       	sbic	0x1c, 0	; 28
    110a:	fa cf       	rjmp	.-12     	; 0x1100 <UPDI::runtime(unsigned char)+0x828>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:321

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
    110c:	3a d8       	rcall	.-3980   	; 0x182 <UPDI::set_cs_ctra(unsigned char) [clone .constprop.1]>
    110e:	88 23       	and	r24, r24
    1110:	09 f4       	brne	.+2      	; 0x1114 <UPDI::runtime(unsigned char)+0x83c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:464
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
    1112:	36 cc       	rjmp	.-1940   	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
    1114:	40 d8       	rcall	.-3968   	; 0x196 <UPDI::enter_updi(bool) [clone .part.4]>
chip_erase():
    1116:	81 11       	cpse	r24, r1
    1118:	f3 cf       	rjmp	.-26     	; 0x1100 <UPDI::runtime(unsigned char)+0x828>
    111a:	32 cc       	rjmp	.-1948   	; 0x980 <UPDI::runtime(unsigned char)+0xa8>
_ZN4UPDI7runtimeEh():
    111c:	81 e0       	ldi	r24, 0x01	; 1
    111e:	02 d9       	rcall	.-3580   	; 0x324 <UPDI::Target_Reset(bool)>
    1120:	88 23       	and	r24, r24
    1122:	09 f4       	brne	.+2      	; 0x1126 <UPDI::runtime(unsigned char)+0x84e>
    1124:	62 cc       	rjmp	.-1852   	; 0x9ea <UPDI::runtime(unsigned char)+0x112>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:280
 *
 * ここから割込元に戻ることはない
 */

ISR(TCB0_INT_vect, ISR_NAKED) {
  __asm__ __volatile__ ("EOR R1,R1");
    1126:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:281
  TCB0_CTRLA = 0;
    1128:	fd d8       	rcall	.-3590   	; 0x324 <UPDI::Target_Reset(bool)>
    112a:	5f cc       	rjmp	.-1858   	; 0x9ea <UPDI::runtime(unsigned char)+0x112>

0000112c <__vector_13>:
__vector_13():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:282
  TCB0_INTFLAGS = TCB_CAPT_bm;
    112c:	11 24       	eor	r1, r1
    112e:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f714e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:283
  longjmp(TIM::CONTEXT, 2);
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f7154>
    1138:	62 e0       	ldi	r22, 0x02	; 2
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:248
 *
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
    113e:	98 e3       	ldi	r25, 0x38	; 56
    1140:	cc d3       	rcall	.+1944   	; 0x18da <longjmp>

00001142 <__vector_6>:
__vector_6():
    1142:	1f 92       	push	r1
    1144:	0f 92       	push	r0
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	0f 92       	push	r0
    114a:	11 24       	eor	r1, r1
    114c:	2f 93       	push	r18
    114e:	3f 93       	push	r19
    1150:	4f 93       	push	r20
    1152:	5f 93       	push	r21
    1154:	6f 93       	push	r22
    1156:	7f 93       	push	r23
    1158:	8f 93       	push	r24
    115a:	9f 93       	push	r25
    115c:	af 93       	push	r26
    115e:	bf 93       	push	r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:250
  portRegister(RTS_SENSE_PIN).INTFLAGS =
  portRegister(RTS_SENSE_PIN).INTFLAGS;
    1160:	ef 93       	push	r30
    1162:	ff 93       	push	r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:249
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
  portRegister(RTS_SENSE_PIN).INTFLAGS =
    1164:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <UPDI::nvmprog_key+0x7f6ad7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:252
  portRegister(RTS_SENSE_PIN).INTFLAGS;

  if ( digitalRead(RTS_SENSE_PIN) ) {
    1168:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6ad7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
/*
 * 本体リセット
 */

void SYS::System_Reset (void) {
  _PROTECTED_WRITE(RSTCTRL_SWRR, RSTCTRL_SWRE_bm);
    116c:	12 9b       	sbis	0x02, 2	; 2
    116e:	16 c0       	rjmp	.+44     	; 0x119c <__vector_6+0x5a>
System_Reset():
    1170:	88 ed       	ldi	r24, 0xD8	; 216
    1172:	91 e0       	ldi	r25, 0x01	; 1
    1174:	84 bf       	out	0x34, r24	; 52
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:271
    openDrainWrite(TRST_PIN, HIGH);

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
  }
}
    1176:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f670f>
__vector_6():
    117a:	ff 91       	pop	r31
    117c:	ef 91       	pop	r30
    117e:	bf 91       	pop	r27
    1180:	af 91       	pop	r26
    1182:	9f 91       	pop	r25
    1184:	8f 91       	pop	r24
    1186:	7f 91       	pop	r23
    1188:	6f 91       	pop	r22
    118a:	5f 91       	pop	r21
    118c:	4f 91       	pop	r20
    118e:	3f 91       	pop	r19
    1190:	2f 91       	pop	r18
    1192:	0f 90       	pop	r0
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	0f 90       	pop	r0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:258
    /* RTS 開放で本体リセット */
    SYS::System_Reset();
  }
  else {
    /* LED は点滅 */
    TIM::LED_Flash();
    1198:	1f 90       	pop	r1
    119a:	18 95       	reti
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:261

    /* ターゲット再起動 */
    UPDI::Target_Reset(true);
    119c:	e9 d8       	rcall	.-3630   	; 0x370 <TIM::LED_Flash()>
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	c1 d8       	rcall	.-3710   	; 0x324 <UPDI::Target_Reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:264

    /* ターゲットリセットパルス */
    openDrainWrite(TRST_PIN, LOW);
    11a2:	21 9a       	sbi	0x04, 1	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:265
    nop();
    11a4:	00 00       	nop
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:266
    openDrainWrite(TRST_PIN, HIGH);
    11a6:	21 98       	cbi	0x04, 1	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:269

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	bc d8       	rcall	.-3720   	; 0x324 <UPDI::Target_Reset(bool)>
    11ac:	e6 cf       	rjmp	.-52     	; 0x117a <__vector_6+0x38>

000011ae <__vector_7>:
__vector_7():
    11ae:	e0 d8       	rcall	.-3648   	; 0x370 <TIM::LED_Flash()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:217
 * このハンドラから主処理に戻ることはない
 */

ISR(portIntrruptVector(SW_SENSE_PIN), ISR_NAKED) {
  /* LED は点滅 */
  TIM::LED_Flash();
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	b8 d8       	rcall	.-3728   	; 0x324 <UPDI::Target_Reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:220

  /* ターゲットリセットON */
  UPDI::Target_Reset(true);
    11b4:	88 e0       	ldi	r24, 0x08	; 8
    11b6:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6ed4>
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:221
  UPDI_USART.CTRLB = UPDI_USART_OFF;
    11ba:	83 ec       	ldi	r24, 0xC3	; 195
    11bc:	99 e0       	ldi	r25, 0x09	; 9
    11be:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/delay_busywait.h:31
    11c0:	f1 f7       	brne	.-4      	; 0x11be <__vector_7+0x10>
    11c2:	00 c0       	rjmp	.+0      	; 0x11c4 <__vector_7+0x16>
    11c4:	00 00       	nop
__vector_7():
    11c6:	01 9a       	sbi	0x00, 1	; 0
    11c8:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <UPDI::nvmprog_key+0x7f6adf>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:227

  /* チャタリング抑制 */
  delay_micros(1000);

  /* ターゲットリセット維持 */
  pinMode(UPDI_TDAT_PIN, OUTPUT);
    11cc:	09 98       	cbi	0x01, 1	; 1
    11ce:	21 9a       	sbi	0x04, 1	; 4
    11d0:	b7 d8       	rcall	.-3730   	; 0x340 <TIM::LED_Blink()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:228
  digitalWrite(UPDI_TDAT_PIN, LOW);
    11d2:	30 9b       	sbis	0x06, 0	; 6
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:229
  openDrainWrite(TRST_PIN, LOW);
    11d4:	fe cf       	rjmp	.-4      	; 0x11d2 <__vector_7+0x24>
System_Reset():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:232

  /* LEDは 交互点滅 */
  TIM::LED_Blink();
    11d6:	88 ed       	ldi	r24, 0xD8	; 216
    11d8:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:235

  /* 押している間は待機 */
  while (!digitalRead(SW_SENSE_PIN));
    11da:	84 bf       	out	0x34, r24	; 52
    11dc:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f670f>

000011e0 <main>:
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
    11e0:	f8 94       	cli
initVariant():
    11e2:	24 e0       	ldi	r18, 0x04	; 4
    11e4:	e0 e1       	ldi	r30, 0x10	; 16
    11e6:	f4 e0       	ldi	r31, 0x04	; 4
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/variants/tinyAVR2_20/variant.h:281
    "   DEC  R24     \n"
    "   BRNE 2b        " /* 3 loop PORTA to PORTC */
    : : "z" ((register8_t*)&PORTA_PIN0CTRL),
        "r" ((uint8_t)PORT_ISC_INPUT_DISABLE_gc)
      : "r24", "r25"
  );
    11e8:	83 e0       	ldi	r24, 0x03	; 3
    11ea:	98 e0       	ldi	r25, 0x08	; 8
    11ec:	21 93       	st	Z+, r18
    11ee:	9a 95       	dec	r25
    11f0:	e9 f7       	brne	.-6      	; 0x11ec <main+0xc>
    11f2:	78 96       	adiw	r30, 0x18	; 24
    11f4:	8a 95       	dec	r24
    11f6:	c9 f7       	brne	.-14     	; 0x11ea <main+0xa>
_CLKCTRL_SETUP():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.0/cores/megaAVR/api/CLKCTRL_megaAVR.h:127
  // _PROTECTED_WRITE(CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc);

#else

  #if defined(_CLKCTRL_PDIV_)
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, _CLKCTRL_PDIV_ | CLKCTRL_PEN_bm);
    11f8:	88 ed       	ldi	r24, 0xD8	; 216
    11fa:	41 e0       	ldi	r20, 0x01	; 1
    11fc:	50 e0       	ldi	r21, 0x00	; 0
    11fe:	84 bf       	out	0x34, r24	; 52
    1200:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <UPDI::nvmprog_key+0x7f672f>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:17
#include <avr/io.h>

void SYS::setup (void) {

  /* ターゲットリセット開放 */
  pinControlRegister(TRST_PIN) = TRST_PIN_CONFIG;
    1204:	8c e0       	ldi	r24, 0x0C	; 12
    1206:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <UPDI::nvmprog_key+0x7f6aff>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:20

  /* 出力方向ポート */
  PORTA_DIRSET = _BV(pinPosition(HVP1_PIN))
    120a:	88 ef       	ldi	r24, 0xF8	; 248
    120c:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <UPDI::nvmprog_key+0x7f6acf>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:25
               | _BV(pinPosition(HVP2_PIN))
               | _BV(pinPosition(HV12_PIN))
               | _BV(pinPosition(LEDG_PIN))
               | _BV(pinPosition(LEDY_PIN));
  PORTB_DIRSET = _BV(pinPosition(HV8_PIN));
    1210:	80 e2       	ldi	r24, 0x20	; 32
    1212:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <UPDI::nvmprog_key+0x7f6aef>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:28

  /* USART 切替 LOW=ターゲット開通（PG_Disable） */
  PORTC_DIRSET = _BV(pinPosition(PGEN_PIN));
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <UPDI::nvmprog_key+0x7f6b0f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:31

  /* LED 出力 */
  LEDG_EVOUT_MUX = LEDG_EVOUT_ALT;          /* OUT:PA7 */
    121c:	80 93 e0 05 	sts	0x05E0, r24	; 0x8005e0 <UPDI::nvmprog_key+0x7f6cae>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:32
  PORTMUX_CCLROUTEA = PORTMUX_LUT3_ALT1_gc; /* OUT:PA5 IN:PC0,PC1,PC2 */
    1220:	98 e0       	ldi	r25, 0x08	; 8
    1222:	90 93 e1 05 	sts	0x05E1, r25	; 0x8005e1 <UPDI::nvmprog_key+0x7f6caf>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:33
  PORTA_OUTSET = _BV(pinPosition(LEDG_PIN))
    1226:	30 ea       	ldi	r19, 0xA0	; 160
    1228:	30 93 05 04 	sts	0x0405, r19	; 0x800405 <UPDI::nvmprog_key+0x7f6ad3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:37
               | _BV(pinPosition(LEDY_PIN));

  /* USART代替選択 */
  PORTMUX_USARTROUTEA = JTAG_PMUX_ALT | UPDI_PMUX_ALT;
    122c:	35 e0       	ldi	r19, 0x05	; 5
    122e:	30 93 e2 05 	sts	0x05E2, r19	; 0x8005e2 <UPDI::nvmprog_key+0x7f6cb0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:40

  /* JTAG ポート */
  pinControlRegister(JTAG_TXD_PIN) = JTAG_TXD_CONFIG;
    1232:	90 93 52 04 	sts	0x0452, r25	; 0x800452 <UPDI::nvmprog_key+0x7f6b20>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:41
  pinControlRegister(JTAG_RXD_PIN) = JTAG_RXD_CONFIG;
    1236:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <UPDI::nvmprog_key+0x7f6b1f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:44

  /* UPDI ポート */
  pinControlRegister(UPDI_TDAT_PIN) = UPDI_TDAT_CONFIG;
    123a:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <UPDI::nvmprog_key+0x7f6adf>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:47

  /* HV 発生器 */
  pinControlRegister(HVP1_PIN) = HVP1_PIN_CONFIG;
    123e:	20 93 13 04 	sts	0x0413, r18	; 0x800413 <UPDI::nvmprog_key+0x7f6ae1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:48
  pinControlRegister(HVP2_PIN) = HVP2_PIN_CONFIG;
    1242:	44 e8       	ldi	r20, 0x84	; 132
    1244:	40 93 14 04 	sts	0x0414, r20	; 0x800414 <UPDI::nvmprog_key+0x7f6ae2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:51

  /* SW1 割込許可 */
  pinControlRegister(SW_SENSE_PIN) = SW_SENSE_CONFIG;
    1248:	4d e0       	ldi	r20, 0x0D	; 13
    124a:	40 93 30 04 	sts	0x0430, r20	; 0x800430 <UPDI::nvmprog_key+0x7f6afe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:54

  /* RTS 認識 */
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
    124e:	49 e0       	ldi	r20, 0x09	; 9
    1250:	40 93 12 04 	sts	0x0412, r20	; 0x800412 <UPDI::nvmprog_key+0x7f6ae0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:57

  /* JP1 認識 */
  pinControlRegister(JP_SENSE_PIN) = JP_SENSE_CONFIG;
    1254:	90 93 53 04 	sts	0x0453, r25	; 0x800453 <UPDI::nvmprog_key+0x7f6b21>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:60

  /* 状態変数初期化 */
  UPDI_CONTROL = 0;
    1258:	1c ba       	out	0x1c, r1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:61
  UPDI_NVMCTRL = 0;
    125a:	1d ba       	out	0x1d, r1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:47

  /*
   * EVSYS信号分配
   */

  EVSYS_CHANNEL0 = EVSYS_CHANNEL0_CCL_LUT0_gc;
    125c:	90 e1       	ldi	r25, 0x10	; 16
    125e:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <UPDI::nvmprog_key+0x7f685e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:48
  EVSYS_CHANNEL1 = EVSYS_CHANNEL1_RTC_PIT_DIV128_gc;
    1262:	9a e0       	ldi	r25, 0x0A	; 10
    1264:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <UPDI::nvmprog_key+0x7f685f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:49
  EVSYS_CHANNEL2 = EVSYS_CHANNEL2_CCL_LUT1_gc;
    1268:	91 e1       	ldi	r25, 0x11	; 17
    126a:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <UPDI::nvmprog_key+0x7f6860>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:50
  EVSYS_CHANNEL3 = EVSYS_CHANNEL3_PORTA_PIN5_gc;
    126e:	9d e4       	ldi	r25, 0x4D	; 77
    1270:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <UPDI::nvmprog_key+0x7f6861>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:51
  EVSYS_USERTCB0COUNT = EVSYS_USER_CHANNEL1_gc;
    1274:	92 e0       	ldi	r25, 0x02	; 2
    1276:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <UPDI::nvmprog_key+0x7f687f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:52
  EVSYS_USERTCB1COUNT = EVSYS_USER_CHANNEL1_gc;
    127a:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <UPDI::nvmprog_key+0x7f6881>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:53
  EVSYS_USERCCLLUT0A  = EVSYS_USER_CHANNEL3_gc;
    127e:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <UPDI::nvmprog_key+0x7f686e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:54
  EVSYS_USERCCLLUT1A  = EVSYS_USER_CHANNEL3_gc;
    1282:	20 93 a2 01 	sts	0x01A2, r18	; 0x8001a2 <UPDI::nvmprog_key+0x7f6870>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:61
  /*
   * CCL/LUT構築
   */

  /* TRUTH0: 010 is ON */
  CCL_TRUTH0    = CCL_TRUTH_2_bm;
    1286:	20 93 cb 01 	sts	0x01CB, r18	; 0x8001cb <UPDI::nvmprog_key+0x7f6899>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:62
  CCL_LUT0CTRLC = CCL_INSEL0_EVENTA_gc;
    128a:	93 e0       	ldi	r25, 0x03	; 3
    128c:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <UPDI::nvmprog_key+0x7f6898>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:63
  CCL_LUT0CTRLB = CCL_INSEL1_TCB1_gc;                       /* IN1:POS */
    1290:	20 ec       	ldi	r18, 0xC0	; 192
    1292:	20 93 c9 01 	sts	0x01C9, r18	; 0x8001c9 <UPDI::nvmprog_key+0x7f6897>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:64
  CCL_LUT0CTRLA = CCL_ENABLE_bm;
    1296:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <UPDI::nvmprog_key+0x7f6896>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:67

  /* TRUTH1: 001 010 is ON */
  CCL_TRUTH1    = CCL_TRUTH_1_bm | CCL_TRUTH_2_bm;
    129a:	26 e0       	ldi	r18, 0x06	; 6
    129c:	20 93 cf 01 	sts	0x01CF, r18	; 0x8001cf <UPDI::nvmprog_key+0x7f689d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:68
  CCL_LUT1CTRLC = CCL_INSEL0_EVENTA_gc;
    12a0:	90 93 ce 01 	sts	0x01CE, r25	; 0x8001ce <UPDI::nvmprog_key+0x7f689c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:69
  CCL_LUT1CTRLB = CCL_INSEL0_TCA0_gc | CCL_INSEL1_TCB1_gc;  /* IN0:POS IN1:POS */
    12a4:	2a ec       	ldi	r18, 0xCA	; 202
    12a6:	20 93 cd 01 	sts	0x01CD, r18	; 0x8001cd <UPDI::nvmprog_key+0x7f689b>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:70
  CCL_LUT1CTRLA = CCL_ENABLE_bm;
    12aa:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <UPDI::nvmprog_key+0x7f689a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:76

  /* TRUTH3: 001 010 is ON */
  /* CCL_INSEL0_USART0_gc : USART0TX normal HIGH */
  /* CCL_INSEL1_IO_gc     : USART1RX normal HIGH */
  /* CCL_INSEL2_IO_gc     : USART1TX normal HIGH */
  CCL_TRUTH3    = (uint8_t) ~CCL_TRUTH_7_bm;
    12ae:	2f e7       	ldi	r18, 0x7F	; 127
    12b0:	20 93 d7 01 	sts	0x01D7, r18	; 0x8001d7 <UPDI::nvmprog_key+0x7f68a5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:77
  CCL_LUT3CTRLC = CCL_INSEL2_IO_gc;
    12b4:	30 93 d6 01 	sts	0x01D6, r19	; 0x8001d6 <UPDI::nvmprog_key+0x7f68a4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:78
  CCL_LUT3CTRLB = CCL_INSEL0_USART0_gc | CCL_INSEL1_IO_gc;
    12b8:	28 e5       	ldi	r18, 0x58	; 88
    12ba:	20 93 d5 01 	sts	0x01D5, r18	; 0x8001d5 <UPDI::nvmprog_key+0x7f68a3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:79
  CCL_LUT3CTRLA = CCL_ENABLE_bm | CCL_OUTEN_bm;
    12be:	21 e4       	ldi	r18, 0x41	; 65
    12c0:	20 93 d4 01 	sts	0x01D4, r18	; 0x8001d4 <UPDI::nvmprog_key+0x7f68a2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:82

  /* CCL 有効化 */
  CCL_CTRLA = CCL_RUNSTDBY_bm | CCL_ENABLE_bm;
    12c4:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <UPDI::nvmprog_key+0x7f688e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:85

  /* RTC_PIT 有効化 */
  RTC_PITCTRLA = RTC_PITEN_bm;
    12c8:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <UPDI::nvmprog_key+0x7f681e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:92
  /*
   * タイマー
   */

  /* TCA0 */
  TCA0_SPLIT_CTRLD = TCA_SPLIT_SPLITM_bm;
    12cc:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <UPDI::nvmprog_key+0x7f70d1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:93
  TCA0_SPLIT_LPER  = TCA0_STEP - 2;
    12d0:	29 e8       	ldi	r18, 0x89	; 137
    12d2:	20 93 26 0a 	sts	0x0A26, r18	; 0x800a26 <UPDI::nvmprog_key+0x7f70f4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:94
  TCA0_SPLIT_LCMP0 = TCA0_STEP / 2;
    12d6:	25 e4       	ldi	r18, 0x45	; 69
    12d8:	20 93 28 0a 	sts	0x0A28, r18	; 0x800a28 <UPDI::nvmprog_key+0x7f70f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:95
  TCA0_SPLIT_HPER  = 1;
    12dc:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <UPDI::nvmprog_key+0x7f70f5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:96
  TCA0_SPLIT_HCMP0 = 1;     /* WOA3=PA3 */
    12e0:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <UPDI::nvmprog_key+0x7f70f7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:97
  TCA0_SPLIT_HCMP1 = 1;     /* WOA4=PA4 */
    12e4:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <UPDI::nvmprog_key+0x7f70f9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:98
  TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1024_gc;
    12e8:	3f e8       	ldi	r19, 0x8F	; 143
    12ea:	30 93 00 0a 	sts	0x0A00, r19	; 0x800a00 <UPDI::nvmprog_key+0x7f70ce>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:101

  /* TCB1 */
  TCB1_CTRLB = TCB_CNTMODE_PWM8_gc;
    12ee:	37 e0       	ldi	r19, 0x07	; 7
    12f0:	30 93 91 0a 	sts	0x0A91, r19	; 0x800a91 <UPDI::nvmprog_key+0x7f715f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:110
   *
   * RTS Deactive なら ハートビート
   * RTS Active なら フラッシュ
   */

  if ( digitalRead(RTS_SENSE_PIN) ) {
    12f4:	12 9b       	sbis	0x02, 2	; 2
    12f6:	90 c0       	rjmp	.+288    	; 0x1418 <main+0x238>
LED_HeartBeat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:150
 * LED動作切替
 */

/* ハートビート（待機中）*/
void TIM::LED_HeartBeat (void) {
  if (TIM::mode != 1) {
    12f8:	30 91 50 38 	lds	r19, 0x3850	; 0x803850 <TIM::mode>
    12fc:	31 30       	cpi	r19, 0x01	; 1
    12fe:	81 f0       	breq	.+32     	; 0x1320 <main+0x140>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:151
    TIM::mode = 1;
    1300:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:152
    TCB1_CCMP = TCB1_HBEAT;
    1304:	4a e8       	ldi	r20, 0x8A	; 138
    1306:	55 e4       	ldi	r21, 0x45	; 69
    1308:	40 93 9c 0a 	sts	0x0A9C, r20	; 0x800a9c <UPDI::nvmprog_key+0x7f716a>
    130c:	50 93 9d 0a 	sts	0x0A9D, r21	; 0x800a9d <UPDI::nvmprog_key+0x7f716b>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:153
    TCB1_CNT = 0;
    1310:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7168>
    1314:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7169>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:154
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;
    1318:	20 93 90 0a 	sts	0x0A90, r18	; 0x800a90 <UPDI::nvmprog_key+0x7f715e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:155
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
    131c:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <UPDI::nvmprog_key+0x7f6877>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:82
  };
}

/* 初期化 */
void JTAG2::setup (void) {
  JTAG_USART.BAUD = pgm_read_word( &BAUD_TABLE[JTAG2::BAUD_19200] );
    1320:	ed e9       	ldi	r30, 0x9D	; 157
    1322:	f0 e0       	ldi	r31, 0x00	; 0
    1324:	85 91       	lpm	r24, Z+
    1326:	94 91       	lpm	r25, Z
    1328:	80 93 28 08 	sts	0x0828, r24	; 0x800828 <UPDI::nvmprog_key+0x7f6ef6>
    132c:	90 93 29 08 	sts	0x0829, r25	; 0x800829 <UPDI::nvmprog_key+0x7f6ef7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:83
  JTAG_USART.CTRLA = JTAG_USART_CTRLA;
    1330:	10 92 25 08 	sts	0x0825, r1	; 0x800825 <UPDI::nvmprog_key+0x7f6ef3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:84
  JTAG_USART.CTRLC = JTAG_USART_CTRLC;
    1334:	83 e0       	ldi	r24, 0x03	; 3
    1336:	80 93 27 08 	sts	0x0827, r24	; 0x800827 <UPDI::nvmprog_key+0x7f6ef5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:85
  JTAG_USART.CTRLB = JTAG_USART_OFF;
    133a:	88 e8       	ldi	r24, 0x88	; 136
    133c:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6ef4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:29
void UPDI::guardtime (void) {
  delay_micros(UPDI_GUARDTIME);
}

void UPDI::setup (void) {
  UPDI_USART.BAUD  = UPDI_BAUD_CALC;
    1340:	80 eb       	ldi	r24, 0xB0	; 176
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6ed6>
    1348:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6ed7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:30
  UPDI_USART.CTRLA = UPDI_USART_CTRLA;
    134c:	8a e0       	ldi	r24, 0x0A	; 10
    134e:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <UPDI::nvmprog_key+0x7f6ed3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:31
  UPDI_USART.CTRLC = UPDI_USART_CTRLC;
    1352:	8b e2       	ldi	r24, 0x2B	; 43
    1354:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <UPDI::nvmprog_key+0x7f6ed5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:32
  UPDI_USART.CTRLB = UPDI_USART_ON;
    1358:	88 ec       	ldi	r24, 0xC8	; 200
    135a:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6ed4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:35

  /* ソフトリセット後は ターゲットのリセットを解除 */
  if ( bit_is_set(RSTCTRL_RSTFR, RSTCTRL_SWRF_bp) ) UPDI::Target_Reset(false);
    135e:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <UPDI::nvmprog_key+0x7f670e>
    1362:	84 ff       	sbrs	r24, 4
    1364:	03 c0       	rjmp	.+6      	; 0x136c <main+0x18c>
    1366:	80 e0       	ldi	r24, 0x00	; 0
    1368:	0e 94 92 01 	call	0x324	; 0x324 <UPDI::Target_Reset(bool)>
ready():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:119
/*
 * 起動シーケンスの最後に実行
 */

void SYS::ready (void) {
  RSTCTRL_RSTFR = 0xFF;
    136c:	8f ef       	ldi	r24, 0xFF	; 255
    136e:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <UPDI::nvmprog_key+0x7f670e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:122

  /* 初期化中に検出された非同期割込をクリアする */
  portRegister(RTS_SENSE_PIN).INTFLAGS = 0xFF;
    1372:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6ad7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:125

  /* 割込許可 */
  sei();
    1376:	78 94       	sei
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:251
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
    1378:	e2 e0       	ldi	r30, 0x02	; 2
    137a:	2e 2e       	mov	r2, r30
    137c:	31 2c       	mov	r3, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    137e:	f3 e0       	ldi	r31, 0x03	; 3
    1380:	cf 2e       	mov	r12, r31
    1382:	d1 2c       	mov	r13, r1
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:246
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? '2' : '0';
    else return false;
    JTAG2::packet.size = 2;
    1384:	a2 e0       	ldi	r26, 0x02	; 2
    1386:	4a 2e       	mov	r4, r26
    1388:	51 2c       	mov	r5, r1
    138a:	61 2c       	mov	r6, r1
    138c:	71 2c       	mov	r7, r1
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    138e:	bd e1       	ldi	r27, 0x1D	; 29
    1390:	8b 2e       	mov	r8, r27
    1392:	91 2c       	mov	r9, r1
    1394:	a1 2c       	mov	r10, r1
    1396:	b1 2c       	mov	r11, r1
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    1398:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6ef2>
    139c:	87 ff       	sbrs	r24, 7
    139e:	fc cf       	rjmp	.-8      	; 0x1398 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    13a0:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6eee>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:126
  uint16_t _crc = ~0;
  uint8_t *p = (uint8_t*) &packet.soh;
  uint8_t *q = (uint8_t*) &packet.soh;

  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
    13a4:	8b 31       	cpi	r24, 0x1B	; 27
    13a6:	c1 f7       	brne	.-16     	; 0x1398 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:127
  (*p++) = JTAG2::MESSAGE_START;
    13a8:	80 93 63 38 	sts	0x3863, r24	; 0x803863 <JTAG2::packet>
    13ac:	e4 e6       	ldi	r30, 0x64	; 100
    13ae:	f8 e3       	ldi	r31, 0x38	; 56
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    13b0:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6ef2>
    13b4:	87 ff       	sbrs	r24, 7
    13b6:	fc cf       	rjmp	.-8      	; 0x13b0 <main+0x1d0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    13b8:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6eee>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:130
  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
  (*p++) = JTAG2::MESSAGE_START;

  /* 最初の7byte */
  for (int8_t i = 0; i < 7; i++) *p++ = get();
    13bc:	81 93       	st	Z+, r24
    13be:	8b e6       	ldi	r24, 0x6B	; 107
    13c0:	98 e3       	ldi	r25, 0x38	; 56
    13c2:	8e 17       	cp	r24, r30
    13c4:	9f 07       	cpc	r25, r31
    13c6:	a1 f7       	brne	.-24     	; 0x13b0 <main+0x1d0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:133

  /* STX 確認 */
  if (packet.stx != JTAG2::TOKEN) return false;
    13c8:	80 91 6a 38 	lds	r24, 0x386A	; 0x80386a <JTAG2::packet+0x7>
    13cc:	8e 30       	cpi	r24, 0x0E	; 14
    13ce:	21 f7       	brne	.-56     	; 0x1398 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:136

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;
    13d0:	80 91 66 38 	lds	r24, 0x3866	; 0x803866 <JTAG2::packet+0x3>
    13d4:	90 91 67 38 	lds	r25, 0x3867	; 0x803867 <JTAG2::packet+0x4>
    13d8:	a0 91 68 38 	lds	r26, 0x3868	; 0x803868 <JTAG2::packet+0x5>
    13dc:	b0 91 69 38 	lds	r27, 0x3869	; 0x803869 <JTAG2::packet+0x6>
    13e0:	8a 30       	cpi	r24, 0x0A	; 10
    13e2:	92 40       	sbci	r25, 0x02	; 2
    13e4:	a1 05       	cpc	r26, r1
    13e6:	b1 05       	cpc	r27, r1
    13e8:	b8 f6       	brcc	.-82     	; 0x1398 <main+0x1b8>
    13ea:	cb e6       	ldi	r28, 0x6B	; 107
    13ec:	d8 e3       	ldi	r29, 0x38	; 56
    13ee:	7e 01       	movw	r14, r28
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    13f0:	8e ef       	ldi	r24, 0xFE	; 254
    13f2:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
    13f4:	20 91 66 38 	lds	r18, 0x3866	; 0x803866 <JTAG2::packet+0x3>
    13f8:	30 91 67 38 	lds	r19, 0x3867	; 0x803867 <JTAG2::packet+0x4>
    13fc:	82 17       	cp	r24, r18
    13fe:	93 07       	cpc	r25, r19
    1400:	74 f4       	brge	.+28     	; 0x141e <main+0x23e>
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    1402:	20 91 24 08 	lds	r18, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6ef2>
    1406:	27 ff       	sbrs	r18, 7
    1408:	fc cf       	rjmp	.-8      	; 0x1402 <main+0x222>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    140a:	20 91 20 08 	lds	r18, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6eee>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    140e:	d7 01       	movw	r26, r14
    1410:	2d 93       	st	X+, r18
    1412:	7d 01       	movw	r14, r26
    1414:	01 96       	adiw	r24, 0x01	; 1
    1416:	ee cf       	rjmp	.-36     	; 0x13f4 <main+0x214>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:114

  if ( digitalRead(RTS_SENSE_PIN) ) {
    LED_HeartBeat();
  }
  else {
    LED_Flash();
    1418:	0e 94 b8 01 	call	0x370	; 0x370 <TIM::LED_Flash()>
    141c:	81 cf       	rjmp	.-254    	; 0x1320 <main+0x140>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139
    141e:	03 e6       	ldi	r16, 0x63	; 99
    1420:	18 e3       	ldi	r17, 0x38	; 56
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:121
  return _crc_ccitt_update(_crc, _data);
}

/* JTAG Receive */
bool JTAG2::packet_receive (void) {
  uint16_t _crc = ~0;
    1422:	8f ef       	ldi	r24, 0xFF	; 255
    1424:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:142

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();

  /* 受信バッファが満たされたら CRC 確認 */
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
    1426:	0e 15       	cp	r16, r14
    1428:	1f 05       	cpc	r17, r15
    142a:	29 f0       	breq	.+10     	; 0x1436 <main+0x256>
    142c:	f8 01       	movw	r30, r16
    142e:	61 91       	ld	r22, Z+
    1430:	8f 01       	movw	r16, r30
crc16_update():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
    1432:	01 d8       	rcall	.-4094   	; 0x436 <_crc_ccitt_update(unsigned int, unsigned char)>
    1434:	f8 cf       	rjmp	.-16     	; 0x1426 <main+0x246>
wakeup_jtag():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:381
  JTAG2::answer_transfer();
}

void JTAG2::wakeup_jtag (void) {
  for (;;) {
    if (JTAG2::packet_receive()) JTAG2::process_command();
    1436:	89 2b       	or	r24, r25
    1438:	09 f0       	breq	.+2      	; 0x143c <main+0x25c>
    143a:	ae cf       	rjmp	.-164    	; 0x1398 <main+0x1b8>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:274
  packet.body[0] = JTAG2::RSP_PARAMETER;
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
    143c:	a8 95       	wdr
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
  switch ( packet.body[0] ) {
    143e:	80 91 6b 38 	lds	r24, 0x386B	; 0x80386b <JTAG2::packet+0x8>
    1442:	88 30       	cpi	r24, 0x08	; 8
    1444:	09 f4       	brne	.+2      	; 0x1448 <main+0x268>
    1446:	cb c1       	rjmp	.+918    	; 0x17de <main+0x5fe>
    1448:	b8 f5       	brcc	.+110    	; 0x14b8 <main+0x2d8>
    144a:	82 30       	cpi	r24, 0x02	; 2
    144c:	09 f4       	brne	.+2      	; 0x1450 <main+0x270>
    144e:	9d c0       	rjmp	.+314    	; 0x158a <main+0x3aa>
    1450:	48 f4       	brcc	.+18     	; 0x1464 <main+0x284>
    1452:	88 23       	and	r24, r24
    1454:	09 f4       	brne	.+2      	; 0x1458 <main+0x278>
    1456:	c8 c1       	rjmp	.+912    	; 0x17e8 <main+0x608>
    1458:	81 30       	cpi	r24, 0x01	; 1
    145a:	09 f4       	brne	.+2      	; 0x145e <main+0x27e>
    145c:	44 c0       	rjmp	.+136    	; 0x14e6 <main+0x306>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:373
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    145e:	80 ea       	ldi	r24, 0xA0	; 160
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	d4 c0       	rjmp	.+424    	; 0x160c <main+0x42c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    1464:	84 30       	cpi	r24, 0x04	; 4
    1466:	09 f4       	brne	.+2      	; 0x146a <main+0x28a>
    1468:	96 c1       	rjmp	.+812    	; 0x1796 <main+0x5b6>
    146a:	08 f4       	brcc	.+2      	; 0x146e <main+0x28e>
    146c:	d2 c0       	rjmp	.+420    	; 0x1612 <main+0x432>
    146e:	85 30       	cpi	r24, 0x05	; 5
    1470:	b1 f7       	brne	.-20     	; 0x145e <main+0x27e>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:233
/*
 * Dummy SIGNATURE
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
    1472:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:237
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    1476:	e1 99       	sbic	0x1c, 1	; 28
    1478:	69 c1       	rjmp	.+722    	; 0x174c <main+0x56c>
    147a:	84 3b       	cpi	r24, 0xB4	; 180
    147c:	09 f0       	breq	.+2      	; 0x1480 <main+0x2a0>
    147e:	66 c1       	rjmp	.+716    	; 0x174c <main+0x56c>
    1480:	80 91 6d 38 	lds	r24, 0x386D	; 0x80386d <JTAG2::packet+0xa>
    1484:	81 30       	cpi	r24, 0x01	; 1
    1486:	09 f0       	breq	.+2      	; 0x148a <main+0x2aa>
    1488:	61 c1       	rjmp	.+706    	; 0x174c <main+0x56c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:235
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
    148a:	80 91 71 38 	lds	r24, 0x3871	; 0x803871 <JTAG2::packet+0xe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:238
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    148e:	92 e8       	ldi	r25, 0x82	; 130
    1490:	90 93 6b 38 	sts	0x386B, r25	; 0x80386b <JTAG2::packet+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:239
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    1494:	e0 99       	sbic	0x1c, 0	; 28
    1496:	3e c1       	rjmp	.+636    	; 0x1714 <main+0x534>
    1498:	9f b3       	in	r25, 0x1f	; 31
    149a:	81 e0       	ldi	r24, 0x01	; 1
    149c:	91 11       	cpse	r25, r1
    149e:	80 e0       	ldi	r24, 0x00	; 0
    14a0:	81 95       	neg	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:246
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? '2' : '0';
    else return false;
    JTAG2::packet.size = 2;
    14a2:	40 92 66 38 	sts	0x3866, r4	; 0x803866 <JTAG2::packet+0x3>
    14a6:	50 92 67 38 	sts	0x3867, r5	; 0x803867 <JTAG2::packet+0x4>
    14aa:	60 92 68 38 	sts	0x3868, r6	; 0x803868 <JTAG2::packet+0x5>
    14ae:	70 92 69 38 	sts	0x3869, r7	; 0x803869 <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:247
    JTAG2::packet.body[1] = c;
    14b2:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
    14b6:	66 c0       	rjmp	.+204    	; 0x1584 <main+0x3a4>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
    14b8:	84 31       	cpi	r24, 0x14	; 20
    14ba:	09 f4       	brne	.+2      	; 0x14be <main+0x2de>
    14bc:	0c c1       	rjmp	.+536    	; 0x16d6 <main+0x4f6>
    14be:	48 f4       	brcc	.+18     	; 0x14d2 <main+0x2f2>
    14c0:	8b 30       	cpi	r24, 0x0B	; 11
    14c2:	68 f2       	brcs	.-102    	; 0x145e <main+0x27e>
    14c4:	8d 30       	cpi	r24, 0x0D	; 13
    14c6:	10 f0       	brcs	.+4      	; 0x14cc <main+0x2ec>
    14c8:	8f 30       	cpi	r24, 0x0F	; 15
    14ca:	49 f6       	brne	.-110    	; 0x145e <main+0x27e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:338
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
      JTAG2::set_response(JTAG2::RSP_OK);
    14cc:	80 e8       	ldi	r24, 0x80	; 128
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	9d c0       	rjmp	.+314    	; 0x160c <main+0x42c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    14d2:	84 33       	cpi	r24, 0x34	; 52
    14d4:	09 f4       	brne	.+2      	; 0x14d8 <main+0x2f8>
    14d6:	66 c1       	rjmp	.+716    	; 0x17a4 <main+0x5c4>
    14d8:	86 33       	cpi	r24, 0x36	; 54
    14da:	09 f4       	brne	.+2      	; 0x14de <main+0x2fe>
    14dc:	93 c1       	rjmp	.+806    	; 0x1804 <main+0x624>
    14de:	85 31       	cpi	r24, 0x15	; 21
    14e0:	09 f0       	breq	.+2      	; 0x14e4 <main+0x304>
    14e2:	bd cf       	rjmp	.-134    	; 0x145e <main+0x27e>
    14e4:	f3 cf       	rjmp	.-26     	; 0x14cc <main+0x2ec>
RTS_Disable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:107
void SYS::RTS_Enable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
}

void SYS::RTS_Disable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_DISABLE;
    14e6:	88 e0       	ldi	r24, 0x08	; 8
    14e8:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <UPDI::nvmprog_key+0x7f6ae0>
WDT_ON():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:139
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }
    14ec:	8b e0       	ldi	r24, 0x0B	; 11
    14ee:	0e 94 da 01 	call	0x3b4	; 0x3b4 <SYS::WDT_SET(unsigned char)>
LED_Stop():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:187
}

/* 停止（UPDI許認可前）*/
/* TCA0はチャージポンプ駆動速度に変更 */
void TIM::LED_Stop (void) {
  if (TIM::mode != 0) {
    14f2:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    14f6:	88 23       	and	r24, r24
    14f8:	41 f0       	breq	.+16     	; 0x150a <main+0x32a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:188
    TIM::mode = 0;
    14fa:	10 92 50 38 	sts	0x3850, r1	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:189
    TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    14fe:	81 e8       	ldi	r24, 0x81	; 129
    1500:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <UPDI::nvmprog_key+0x7f70ce>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:190
    LEDG_EVOUT = EVSYS_USER_OFF_gc;
    1504:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <UPDI::nvmprog_key+0x7f6877>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:191
    digitalWrite(LEDG_PIN, LOW);
    1508:	0f 98       	cbi	0x01, 7	; 1
PG_Enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:95
/*
 * 各種ON/OFF
 */

void SYS::PG_Enable (void) {
  digitalWrite(PGEN_PIN, HIGH);
    150a:	48 9a       	sbi	0x09, 0	; 9
transfer_enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:90
  JTAG_USART.CTRLB = JTAG_USART_OFF;
}

void JTAG2::transfer_enable (void) {
  SYS::PG_Enable();
  pinMode(JTAG_TXD_PIN, OUTPUT);
    150c:	42 9a       	sbi	0x08, 2	; 8
    150e:	10 92 52 04 	sts	0x0452, r1	; 0x800452 <UPDI::nvmprog_key+0x7f6b20>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:91
  JTAG_USART.CTRLB = JTAG_USART_ON;
    1512:	88 ec       	ldi	r24, 0xC8	; 200
    1514:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6ef4>
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    1518:	80 92 66 38 	sts	0x3866, r8	; 0x803866 <JTAG2::packet+0x3>
    151c:	90 92 67 38 	sts	0x3867, r9	; 0x803867 <JTAG2::packet+0x4>
    1520:	a0 92 68 38 	sts	0x3868, r10	; 0x803868 <JTAG2::packet+0x5>
    1524:	b0 92 69 38 	sts	0x3869, r11	; 0x803869 <JTAG2::packet+0x6>
    1528:	e8 e7       	ldi	r30, 0x78	; 120
    152a:	f0 e0       	ldi	r31, 0x00	; 0
    152c:	88 e8       	ldi	r24, 0x88	; 136
    152e:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:177
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
    1530:	24 91       	lpm	r18, Z
    1532:	29 93       	st	Y+, r18
    1534:	31 96       	adiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:176
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    1536:	8c 17       	cp	r24, r28
    1538:	9d 07       	cpc	r25, r29
    153a:	d1 f7       	brne	.-12     	; 0x1530 <main+0x350>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:182
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
  /* SERNUMから Version情報を生成する */
  uint8_t* p = (uint8_t*) &SIGROW_SERNUM0;
  uint8_t* q = (uint8_t*) &SIGROW_SERNUM4;
  uint8_t* r = (uint8_t*) &packet.body[10];
    *r++ = *q++ ^ *p++ ^ *p++;
    153c:	80 91 07 11 	lds	r24, 0x1107	; 0x801107 <UPDI::nvmprog_key+0x7f77d5>
    1540:	90 91 03 11 	lds	r25, 0x1103	; 0x801103 <UPDI::nvmprog_key+0x7f77d1>
    1544:	89 27       	eor	r24, r25
    1546:	90 91 04 11 	lds	r25, 0x1104	; 0x801104 <UPDI::nvmprog_key+0x7f77d2>
    154a:	89 27       	eor	r24, r25
    154c:	80 93 75 38 	sts	0x3875, r24	; 0x803875 <JTAG2::packet+0x12>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:183
    *r++ = *q++ ^ *p++ ^ *p++;
    1550:	80 91 08 11 	lds	r24, 0x1108	; 0x801108 <UPDI::nvmprog_key+0x7f77d6>
    1554:	90 91 05 11 	lds	r25, 0x1105	; 0x801105 <UPDI::nvmprog_key+0x7f77d3>
    1558:	89 27       	eor	r24, r25
    155a:	90 91 06 11 	lds	r25, 0x1106	; 0x801106 <UPDI::nvmprog_key+0x7f77d4>
    155e:	89 27       	eor	r24, r25
    1560:	80 93 76 38 	sts	0x3876, r24	; 0x803876 <JTAG2::packet+0x13>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:184
    *r++ = *q++;
    1564:	80 91 09 11 	lds	r24, 0x1109	; 0x801109 <UPDI::nvmprog_key+0x7f77d7>
    1568:	80 93 77 38 	sts	0x3877, r24	; 0x803877 <JTAG2::packet+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:185
    *r++ = *q++;
    156c:	80 91 0a 11 	lds	r24, 0x110A	; 0x80110a <UPDI::nvmprog_key+0x7f77d8>
    1570:	80 93 78 38 	sts	0x3878, r24	; 0x803878 <JTAG2::packet+0x15>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:186
    *r++ = *q++;
    1574:	80 91 0b 11 	lds	r24, 0x110B	; 0x80110b <UPDI::nvmprog_key+0x7f77d9>
    1578:	80 93 79 38 	sts	0x3879, r24	; 0x803879 <JTAG2::packet+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:187
    *r++ = *q++;
    157c:	80 91 0c 11 	lds	r24, 0x110C	; 0x80110c <UPDI::nvmprog_key+0x7f77da>
    1580:	80 93 7a 38 	sts	0x387A, r24	; 0x80387a <JTAG2::packet+0x17>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:376
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    }
  }
  JTAG2::answer_transfer();
    1584:	0e 94 2d 02 	call	0x45a	; 0x45a <JTAG2::answer_transfer()>
    1588:	07 cf       	rjmp	.-498    	; 0x1398 <main+0x1b8>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:193
  JTAG2::answer_transfer();
}

/* CMND_SET_PARAMETER */
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
    158a:	f0 90 6d 38 	lds	r15, 0x386D	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:194
  switch (packet.body[1]) {
    158e:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
    1592:	83 30       	cpi	r24, 0x03	; 3
    1594:	b1 f1       	breq	.+108    	; 0x1602 <main+0x422>
    1596:	85 30       	cpi	r24, 0x05	; 5
    1598:	09 f0       	breq	.+2      	; 0x159c <main+0x3bc>
    159a:	98 cf       	rjmp	.-208    	; 0x14cc <main+0x2ec>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:203
      break;
    }
    /* JTAGインタフェース速度 */
    case JTAG2::PARAM_BAUD_RATE : {
      /* 対応範囲確認 */
      if ((param_val >= JTAG2::BAUD_LOWER) && (param_val <= JTAG2::BAUD_UPPER)) {
    159c:	8e ef       	ldi	r24, 0xFE	; 254
    159e:	8f 0d       	add	r24, r15
    15a0:	88 31       	cpi	r24, 0x18	; 24
    15a2:	90 f5       	brcc	.+100    	; 0x1608 <main+0x428>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:204
        uint16_t baud = pgm_read_word( &BAUD_TABLE[param_val] );
    15a4:	8f 2d       	mov	r24, r15
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	fc 01       	movw	r30, r24
    15aa:	ee 0f       	add	r30, r30
    15ac:	ff 1f       	adc	r31, r31
    15ae:	eb 56       	subi	r30, 0x6B	; 107
    15b0:	ff 4f       	sbci	r31, 0xFF	; 255
    15b2:	c5 91       	lpm	r28, Z+
    15b4:	d4 91       	lpm	r29, Z
    15b6:	8e 01       	movw	r16, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:205
        if (baud) {
    15b8:	20 97       	sbiw	r28, 0x00	; 0
    15ba:	31 f1       	breq	.+76     	; 0x1608 <main+0x428>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:207
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
    15bc:	80 93 33 38 	sts	0x3833, r24	; 0x803833 <JTAG2::PARAM_BAUD_RATE_VAL>
    15c0:	90 93 34 38 	sts	0x3834, r25	; 0x803834 <JTAG2::PARAM_BAUD_RATE_VAL+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:208
          JTAG2::set_response(JTAG2::RSP_OK);
    15c4:	80 e8       	ldi	r24, 0x80	; 128
    15c6:	90 e0       	ldi	r25, 0x00	; 0
    15c8:	0e 94 fe 01 	call	0x3fc	; 0x3fc <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:209
          JTAG2::answer_transfer();
    15cc:	0e 94 2d 02 	call	0x45a	; 0x45a <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    15d0:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6ef2>
    15d4:	86 ff       	sbrs	r24, 6
    15d6:	fc cf       	rjmp	.-8      	; 0x15d0 <main+0x3f0>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:211
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
          JTAG2::set_response(JTAG2::RSP_OK);
          JTAG2::answer_transfer();
          JTAG2::flush();
          if (baud < 64) {
    15d8:	c0 34       	cpi	r28, 0x40	; 64
    15da:	d1 05       	cpc	r29, r1
    15dc:	30 f4       	brcc	.+12     	; 0x15ea <main+0x40a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:212
            JTAG_USART.CTRLB = JTAG_USART_DBLON;
    15de:	8a ec       	ldi	r24, 0xCA	; 202
    15e0:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6ef4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:213
            baud <<= 1;
    15e4:	8e 01       	movw	r16, r28
    15e6:	00 0f       	add	r16, r16
    15e8:	11 1f       	adc	r17, r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:215
          }
          JTAG_USART.BAUD = baud;
    15ea:	00 93 28 08 	sts	0x0828, r16	; 0x800828 <UPDI::nvmprog_key+0x7f6ef6>
    15ee:	10 93 29 08 	sts	0x0829, r17	; 0x800829 <UPDI::nvmprog_key+0x7f6ef7>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:217
          /* terminal mode を許可する速度 */
          if (param_val == JTAG2::BAUD_38400 || param_val == JTAG2::BAUD_666666)
    15f2:	f5 e0       	ldi	r31, 0x05	; 5
    15f4:	ff 16       	cp	r15, r31
    15f6:	19 f0       	breq	.+6      	; 0x15fe <main+0x41e>
    15f8:	28 e1       	ldi	r18, 0x18	; 24
    15fa:	f2 12       	cpse	r15, r18
    15fc:	cd ce       	rjmp	.-614    	; 0x1398 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:218
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
    15fe:	e6 9a       	sbi	0x1c, 6	; 28
    1600:	cb ce       	rjmp	.-618    	; 0x1398 <main+0x1b8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:197
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
  switch (packet.body[1]) {
    /* エミュレーションモード */
    case JTAG2::PARAM_EMU_MODE : {
      PARAM_EMU_MODE_VAL = param_val;
    1602:	f0 92 4f 38 	sts	0x384F, r15	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
    1606:	62 cf       	rjmp	.-316    	; 0x14cc <main+0x2ec>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:223
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
          return false;
        }
      }
      /* 範囲違反は失敗応答 */
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_VALUE);
    1608:	86 ea       	ldi	r24, 0xA6	; 166
    160a:	90 e0       	ldi	r25, 0x00	; 0
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:373
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    160c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <JTAG2::set_response(JTAG2::jtag_response_e)>
    1610:	b9 cf       	rjmp	.-142    	; 0x1584 <main+0x3a4>
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    1612:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <JTAG2::packet+0x9>
    1616:	83 30       	cpi	r24, 0x03	; 3
    1618:	09 f4       	brne	.+2      	; 0x161c <main+0x43c>
    161a:	51 c0       	rjmp	.+162    	; 0x16be <main+0x4de>
    161c:	38 f4       	brcc	.+14     	; 0x162c <main+0x44c>
    161e:	81 30       	cpi	r24, 0x01	; 1
    1620:	81 f1       	breq	.+96     	; 0x1682 <main+0x4a2>
    1622:	82 30       	cpi	r24, 0x02	; 2
    1624:	b9 f1       	breq	.+110    	; 0x1694 <main+0x4b4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:265
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
    1626:	81 ea       	ldi	r24, 0xA1	; 161
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	f0 cf       	rjmp	.-32     	; 0x160c <main+0x42c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    162c:	85 30       	cpi	r24, 0x05	; 5
    162e:	09 f4       	brne	.+2      	; 0x1632 <main+0x452>
    1630:	4f c0       	rjmp	.+158    	; 0x16d0 <main+0x4f0>
    1632:	86 30       	cpi	r24, 0x06	; 6
    1634:	c1 f7       	brne	.-16     	; 0x1626 <main+0x446>
get_vcc():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:69
/*
 * 自己VCC測定
 */

uint16_t SYS::get_vcc (void) {
  ADC0_CTRLA = ADC_ENABLE_bm;
    1636:	81 e0       	ldi	r24, 0x01	; 1
    1638:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <UPDI::nvmprog_key+0x7f6cce>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:70
  ADC0_CTRLB = ADC_PRESC_DIV2_gc;
    163c:	10 92 01 06 	sts	0x0601, r1	; 0x800601 <UPDI::nvmprog_key+0x7f6ccf>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:71
  ADC0_CTRLC = ADC_REFSEL_1024MV_gc | ((F_CPU / 1000000UL) << ADC_TIMEBASE_gp);
    1640:	84 e5       	ldi	r24, 0x54	; 84
    1642:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <UPDI::nvmprog_key+0x7f6cd0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:72
  ADC0_CTRLE = 17; /* (SAMPDUR + 0.5) * fCLK_ADC = 10.5 µs sample duration */
    1646:	81 e1       	ldi	r24, 0x11	; 17
    1648:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <UPDI::nvmprog_key+0x7f6cd6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:73
  ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD/10 */
    164c:	91 e3       	ldi	r25, 0x31	; 49
    164e:	90 93 0c 06 	sts	0x060C, r25	; 0x80060c <UPDI::nvmprog_key+0x7f6cda>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:74
  ADC0_COMMAND = ADC_MODE_SINGLE_12BIT_gc | ADC_START_IMMEDIATE_gc;
    1652:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <UPDI::nvmprog_key+0x7f6cd8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:75
  loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
    1656:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <UPDI::nvmprog_key+0x7f6cd3>
    165a:	81 ff       	sbrs	r24, 1
    165c:	fc cf       	rjmp	.-8      	; 0x1656 <main+0x476>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:76
  uint16_t adc_reading = ADC0_SAMPLE;
    165e:	80 91 14 06 	lds	r24, 0x0614	; 0x800614 <UPDI::nvmprog_key+0x7f6ce2>
    1662:	90 91 15 06 	lds	r25, 0x0615	; 0x800615 <UPDI::nvmprog_key+0x7f6ce3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:77
  adc_reading += adc_reading + (adc_reading >> 1);  /* x2.5 */
    1666:	9c 01       	movw	r18, r24
    1668:	36 95       	lsr	r19
    166a:	27 95       	ror	r18
    166c:	88 0f       	add	r24, r24
    166e:	99 1f       	adc	r25, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:78
  ADC0_CTRLA = 0;
    1670:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <UPDI::nvmprog_key+0x7f6cce>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:77
  ADC0_CTRLE = 17; /* (SAMPDUR + 0.5) * fCLK_ADC = 10.5 µs sample duration */
  ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD/10 */
  ADC0_COMMAND = ADC_MODE_SINGLE_12BIT_gc | ADC_START_IMMEDIATE_gc;
  loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
  uint16_t adc_reading = ADC0_SAMPLE;
  adc_reading += adc_reading + (adc_reading >> 1);  /* x2.5 */
    1674:	82 0f       	add	r24, r18
    1676:	93 1f       	adc	r25, r19
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:260
      packet.body[1] = PARAM_BAUD_RATE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
    1678:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
    167c:	90 93 6d 38 	sts	0x386D, r25	; 0x80386d <JTAG2::packet+0xa>
    1680:	04 c0       	rjmp	.+8      	; 0x168a <main+0x4aa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:236
/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    case JTAG2::PARAM_HW_VER : {
      packet.body[1] = sign_on_resp[5];
    1682:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:237
      packet.body[2] = sign_on_resp[9];
    1686:	80 93 6d 38 	sts	0x386D, r24	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    168a:	c0 92 66 38 	sts	0x3866, r12	; 0x803866 <JTAG2::packet+0x3>
    168e:	d0 92 67 38 	sts	0x3867, r13	; 0x803867 <JTAG2::packet+0x4>
    1692:	11 c0       	rjmp	.+34     	; 0x16b6 <main+0x4d6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:242
      packet.body[2] = sign_on_resp[9];
      packet.size_word[0] = 3;
      break;
    }
    case JTAG2::PARAM_FW_VER : {
      packet.body[1] = sign_on_resp[3];
    1694:	91 e0       	ldi	r25, 0x01	; 1
    1696:	90 93 6c 38 	sts	0x386C, r25	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:243
      packet.body[2] = sign_on_resp[4];
    169a:	80 93 6d 38 	sts	0x386D, r24	; 0x80386d <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:244
      packet.body[3] = sign_on_resp[7];
    169e:	85 e3       	ldi	r24, 0x35	; 53
    16a0:	80 93 6e 38 	sts	0x386E, r24	; 0x80386e <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:245
      packet.body[4] = sign_on_resp[8];
    16a4:	87 e0       	ldi	r24, 0x07	; 7
    16a6:	80 93 6f 38 	sts	0x386F, r24	; 0x80386f <JTAG2::packet+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:246
      packet.size_word[0] = 5;
    16aa:	85 e0       	ldi	r24, 0x05	; 5
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	80 93 66 38 	sts	0x3866, r24	; 0x803866 <JTAG2::packet+0x3>
    16b2:	90 93 67 38 	sts	0x3867, r25	; 0x803867 <JTAG2::packet+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:269
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
      return;
    }
  }
  packet.body[0] = JTAG2::RSP_PARAMETER;
    16b6:	81 e8       	ldi	r24, 0x81	; 129
    16b8:	80 93 6b 38 	sts	0x386B, r24	; 0x80386b <JTAG2::packet+0x8>
    16bc:	63 cf       	rjmp	.-314    	; 0x1584 <main+0x3a4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:250
      packet.body[4] = sign_on_resp[8];
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
    16be:	80 91 4f 38 	lds	r24, 0x384F	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    16c2:	80 93 6c 38 	sts	0x386C, r24	; 0x80386c <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:256
      packet.size_word[0] = 2;
    16c6:	20 92 66 38 	sts	0x3866, r2	; 0x803866 <JTAG2::packet+0x3>
    16ca:	30 92 67 38 	sts	0x3867, r3	; 0x803867 <JTAG2::packet+0x4>
    16ce:	f3 cf       	rjmp	.-26     	; 0x16b6 <main+0x4d6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    16d0:	80 91 33 38 	lds	r24, 0x3833	; 0x803833 <JTAG2::PARAM_BAUD_RATE_VAL>
    16d4:	f6 cf       	rjmp	.-20     	; 0x16c2 <main+0x4e2>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:293
    case JTAG2::CMND_GET_PARAMETER : {
      JTAG2::get_parameter();
      break;
    }
    case JTAG2::CMND_ENTER_PROGMODE : {
      uint8_t c = UPDI_CONTROL;
    16d6:	cc b3       	in	r28, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:294
      UPDI::updi_activate();
    16d8:	0e 94 f6 02 	call	0x5ec	; 0x5ec <UPDI::updi_activate()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:295
      JTAG2::set_response(JTAG2::RSP_OK);
    16dc:	80 e8       	ldi	r24, 0x80	; 128
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	0e 94 fe 01 	call	0x3fc	; 0x3fc <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:296
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    16e4:	c0 fd       	sbrc	r28, 0
    16e6:	0e c0       	rjmp	.+28     	; 0x1704 <main+0x524>
    16e8:	e0 9b       	sbis	0x1c, 0	; 28
    16ea:	0c c0       	rjmp	.+24     	; 0x1704 <main+0x524>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:297
        packet.size = 20;
    16ec:	84 e1       	ldi	r24, 0x14	; 20
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	a0 e0       	ldi	r26, 0x00	; 0
    16f2:	b0 e0       	ldi	r27, 0x00	; 0
    16f4:	80 93 66 38 	sts	0x3866, r24	; 0x803866 <JTAG2::packet+0x3>
    16f8:	90 93 67 38 	sts	0x3867, r25	; 0x803867 <JTAG2::packet+0x4>
    16fc:	a0 93 68 38 	sts	0x3868, r26	; 0x803868 <JTAG2::packet+0x5>
    1700:	b0 93 69 38 	sts	0x3869, r27	; 0x803869 <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:298
      TIM::LED_Blink();
    1704:	0e 94 a0 01 	call	0x340	; 0x340 <TIM::LED_Blink()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:300
      /* terminal mode 許可時は WDTを無効にする */
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) SYS::WDT_OFF();
    1708:	e6 9b       	sbis	0x1c, 6	; 28
    170a:	3c cf       	rjmp	.-392    	; 0x1584 <main+0x3a4>
WDT_OFF():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:137
void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }
    170c:	80 e0       	ldi	r24, 0x00	; 0
    170e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <SYS::WDT_SET(unsigned char)>
    1712:	38 cf       	rjmp	.-400    	; 0x1584 <main+0x3a4>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:240
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    1714:	88 23       	and	r24, r24
    1716:	81 f0       	breq	.+32     	; 0x1738 <main+0x558>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:241
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    1718:	81 30       	cpi	r24, 0x01	; 1
    171a:	31 f4       	brne	.+12     	; 0x1728 <main+0x548>
    171c:	ee 99       	sbic	0x1d, 6	; 29
    171e:	0e c0       	rjmp	.+28     	; 0x173c <main+0x55c>
    1720:	ed 99       	sbic	0x1d, 5	; 29
    1722:	0e c0       	rjmp	.+28     	; 0x1740 <main+0x560>
main():
    1724:	84 e7       	ldi	r24, 0x74	; 116
    1726:	bd ce       	rjmp	.-646    	; 0x14a2 <main+0x2c2>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:243
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    1728:	82 30       	cpi	r24, 0x02	; 2
    172a:	81 f4       	brne	.+32     	; 0x174c <main+0x56c>
    172c:	ef 99       	sbic	0x1d, 7	; 29
    172e:	0a c0       	rjmp	.+20     	; 0x1744 <main+0x564>
    1730:	ee 99       	sbic	0x1d, 6	; 29
    1732:	0a c0       	rjmp	.+20     	; 0x1748 <main+0x568>
main():
    1734:	80 e3       	ldi	r24, 0x30	; 48
    1736:	b5 ce       	rjmp	.-662    	; 0x14a2 <main+0x2c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:240
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0] - NVM::BASE_SIGROW;
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    1738:	8e e1       	ldi	r24, 0x1E	; 30
    173a:	b3 ce       	rjmp	.-666    	; 0x14a2 <main+0x2c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:241
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    173c:	81 e4       	ldi	r24, 0x41	; 65
    173e:	b1 ce       	rjmp	.-670    	; 0x14a2 <main+0x2c2>
    1740:	8d e6       	ldi	r24, 0x6D	; 109
    1742:	af ce       	rjmp	.-674    	; 0x14a2 <main+0x2c2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:243
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    1744:	83 e3       	ldi	r24, 0x33	; 51
    1746:	ad ce       	rjmp	.-678    	; 0x14a2 <main+0x2c2>
    1748:	82 e3       	ldi	r24, 0x32	; 50
    174a:	ab ce       	rjmp	.-682    	; 0x14a2 <main+0x2c2>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:307
    }
    case JTAG2::CMND_READ_MEMORY : {
      /* 非PROG でも SIG要求にはダミー応答する */
      if (UPDI::check_sig()) break;
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();
    174c:	e6 99       	sbic	0x1c, 6	; 28
    174e:	17 c0       	rjmp	.+46     	; 0x177e <main+0x59e>
LED_TCB1():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
    1750:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    1754:	84 30       	cpi	r24, 0x04	; 4
    1756:	99 f0       	breq	.+38     	; 0x177e <main+0x59e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
    1758:	84 e0       	ldi	r24, 0x04	; 4
    175a:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
    175e:	85 e1       	ldi	r24, 0x15	; 21
    1760:	91 e0       	ldi	r25, 0x01	; 1
    1762:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f716a>
    1766:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f716b>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
    176a:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f7168>
    176e:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f7169>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    1772:	8f e4       	ldi	r24, 0x4F	; 79
    1774:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f715e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
    1778:	81 e0       	ldi	r24, 0x01	; 1
    177a:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6877>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:312

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    177e:	e1 99       	sbic	0x1c, 1	; 28
    1780:	05 c0       	rjmp	.+10     	; 0x178c <main+0x5ac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:311
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
    1782:	e5 99       	sbic	0x1c, 5	; 28
    1784:	03 c0       	rjmp	.+6      	; 0x178c <main+0x5ac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:313
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
    1786:	85 ea       	ldi	r24, 0xA5	; 165
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	40 cf       	rjmp	.-384    	; 0x160c <main+0x42c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:312
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	a4 d8       	rcall	.-3768   	; 0x8d8 <UPDI::runtime(unsigned char)>
    1790:	81 11       	cpse	r24, r1
    1792:	f8 ce       	rjmp	.-528    	; 0x1584 <main+0x3a4>
    1794:	f8 cf       	rjmp	.-16     	; 0x1786 <main+0x5a6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:319
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_WRITE_MEMORY)
    1796:	82 e0       	ldi	r24, 0x02	; 2
    1798:	9f d8       	rcall	.-3778   	; 0x8d8 <UPDI::runtime(unsigned char)>
    179a:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:318
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
    179c:	97 ce       	rjmp	.-722    	; 0x14cc <main+0x2ec>
main():
    179e:	82 ea       	ldi	r24, 0xA2	; 162
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	34 cf       	rjmp	.-408    	; 0x160c <main+0x42c>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:326
        : JTAG2::RSP_ILLEGAL_MEMORY_TYPE
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
    17a4:	cc b3       	in	r28, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:328
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
    17a6:	83 e0       	ldi	r24, 0x03	; 3
    17a8:	97 d8       	rcall	.-3794   	; 0x8d8 <UPDI::runtime(unsigned char)>
    17aa:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:327
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    17ac:	15 c0       	rjmp	.+42     	; 0x17d8 <main+0x5f8>
main():
    17ae:	85 ea       	ldi	r24, 0xA5	; 165
    17b0:	90 e0       	ldi	r25, 0x00	; 0
process_command():
    17b2:	0e 94 fe 01 	call	0x3fc	; 0x3fc <JTAG2::set_response(JTAG2::jtag_response_e)>
    17b6:	c0 fd       	sbrc	r28, 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:332
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
        ? JTAG2::RSP_OK
        : JTAG2::RSP_ILLEGAL_MCU_STATE
      );
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    17b8:	e5 ce       	rjmp	.-566    	; 0x1584 <main+0x3a4>
    17ba:	e0 9b       	sbis	0x1c, 0	; 28
    17bc:	e3 ce       	rjmp	.-570    	; 0x1584 <main+0x3a4>
    17be:	83 e1       	ldi	r24, 0x13	; 19
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:333
        packet.size = 19;
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	a0 e0       	ldi	r26, 0x00	; 0
    17c4:	b0 e0       	ldi	r27, 0x00	; 0
    17c6:	80 93 66 38 	sts	0x3866, r24	; 0x803866 <JTAG2::packet+0x3>
    17ca:	90 93 67 38 	sts	0x3867, r25	; 0x803867 <JTAG2::packet+0x4>
    17ce:	a0 93 68 38 	sts	0x3868, r26	; 0x803868 <JTAG2::packet+0x5>
    17d2:	b0 93 69 38 	sts	0x3869, r27	; 0x803869 <JTAG2::packet+0x6>
    17d6:	d6 ce       	rjmp	.-596    	; 0x1584 <main+0x3a4>
main():
    17d8:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:327
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	ea cf       	rjmp	.-44     	; 0x17b2 <main+0x5d2>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:337
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
    17de:	e1 9b       	sbis	0x1c, 1	; 28
    17e0:	75 ce       	rjmp	.-790    	; 0x14cc <main+0x2ec>
    17e2:	84 e0       	ldi	r24, 0x04	; 4
    17e4:	79 d8       	rcall	.-3854   	; 0x8d8 <UPDI::runtime(unsigned char)>
    17e6:	72 ce       	rjmp	.-796    	; 0x14cc <main+0x2ec>
    17e8:	80 e8       	ldi	r24, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:342
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    case JTAG2::CMND_SIGN_OFF : {
      JTAG2::set_response(JTAG2::RSP_OK);
    17ea:	90 e0       	ldi	r25, 0x00	; 0
    17ec:	0e 94 fe 01 	call	0x3fc	; 0x3fc <JTAG2::set_response(JTAG2::jtag_response_e)>
    17f0:	0e 94 2d 02 	call	0x45a	; 0x45a <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:343
      JTAG2::answer_transfer();
    17f4:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6ef2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    17f8:	86 ff       	sbrs	r24, 6
    17fa:	fc cf       	rjmp	.-8      	; 0x17f4 <main+0x614>
WDT_REBOOT():
    17fc:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:142

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }

void SYS::WDT_REBOOT (void) {
  WDT_SET(WDT_PERIOD_8CLK_gc);
    17fe:	0e 94 da 01 	call	0x3b4	; 0x3b4 <SYS::WDT_SET(unsigned char)>
    1802:	ff cf       	rjmp	.-2      	; 0x1802 <main+0x622>
process_command():
    1804:	80 91 77 38 	lds	r24, 0x3877	; 0x803877 <JTAG2::packet+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:352
      SYS::WDT_REBOOT();
      /* Session Complete */
    }
    // Ex) struct xmega_device_desc
    case JTAG2::CMND_SET_XMEGA_PARAMS : {
      NVM::nvm_eeprom_offset   = _CAPS32(packet.body[12])->dword;
    1808:	90 91 78 38 	lds	r25, 0x3878	; 0x803878 <JTAG2::packet+0x15>
    180c:	a0 91 79 38 	lds	r26, 0x3879	; 0x803879 <JTAG2::packet+0x16>
    1810:	b0 91 7a 38 	lds	r27, 0x387A	; 0x80387a <JTAG2::packet+0x17>
    1814:	80 93 5f 38 	sts	0x385F, r24	; 0x80385f <NVM::nvm_eeprom_offset>
    1818:	90 93 60 38 	sts	0x3860, r25	; 0x803860 <NVM::nvm_eeprom_offset+0x1>
    181c:	a0 93 61 38 	sts	0x3861, r26	; 0x803861 <NVM::nvm_eeprom_offset+0x2>
    1820:	b0 93 62 38 	sts	0x3862, r27	; 0x803862 <NVM::nvm_eeprom_offset+0x3>
    1824:	80 91 83 38 	lds	r24, 0x3883	; 0x803883 <JTAG2::packet+0x20>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:354
    //NVM::nvm_fuse_offset     = _CAPS32(packet.body[16])->dword;
      NVM::nvm_user_sig_offset = _CAPS32(packet.body[24])->dword;
    1828:	90 91 84 38 	lds	r25, 0x3884	; 0x803884 <JTAG2::packet+0x21>
    182c:	a0 91 85 38 	lds	r26, 0x3885	; 0x803885 <JTAG2::packet+0x22>
    1830:	b0 91 86 38 	lds	r27, 0x3886	; 0x803886 <JTAG2::packet+0x23>
    1834:	80 93 5b 38 	sts	0x385B, r24	; 0x80385b <NVM::nvm_user_sig_offset>
    1838:	90 93 5c 38 	sts	0x385C, r25	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
    183c:	a0 93 5d 38 	sts	0x385D, r26	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
    1840:	b0 93 5e 38 	sts	0x385E, r27	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
    1844:	80 91 8b 38 	lds	r24, 0x388B	; 0x80388b <JTAG2::packet+0x28>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:355
      NVM::nvm_data_offset     = _CAPS32(packet.body[32])->dword;
    1848:	90 91 8c 38 	lds	r25, 0x388C	; 0x80388c <JTAG2::packet+0x29>
    184c:	a0 91 8d 38 	lds	r26, 0x388D	; 0x80388d <JTAG2::packet+0x2a>
    1850:	b0 91 8e 38 	lds	r27, 0x388E	; 0x80388e <JTAG2::packet+0x2b>
    1854:	80 93 57 38 	sts	0x3857, r24	; 0x803857 <NVM::nvm_data_offset>
    1858:	90 93 58 38 	sts	0x3858, r25	; 0x803858 <NVM::nvm_data_offset+0x1>
    185c:	a0 93 59 38 	sts	0x3859, r26	; 0x803859 <NVM::nvm_data_offset+0x2>
    1860:	b0 93 5a 38 	sts	0x385A, r27	; 0x80385a <NVM::nvm_data_offset+0x3>
    1864:	80 91 95 38 	lds	r24, 0x3895	; 0x803895 <JTAG2::packet+0x32>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:356
      NVM::flash_page_size     = _CAPS16(packet.body[42])->word;
    1868:	90 91 96 38 	lds	r25, 0x3896	; 0x803896 <JTAG2::packet+0x33>
    186c:	80 93 55 38 	sts	0x3855, r24	; 0x803855 <NVM::flash_page_size>
    1870:	90 93 56 38 	sts	0x3856, r25	; 0x803856 <NVM::flash_page_size+0x1>
    1874:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:359
    //NVM::eeprom_page_size    = packet.body[46];
      // AVR_DA/DB/DD/EA
      if (_CAPS32(NVM::nvm_user_sig_offset)->bytes[0] == 0x80) {
    1878:	80 38       	cpi	r24, 0x80	; 128
    187a:	09 f0       	breq	.+2      	; 0x187e <main+0x69e>
    187c:	27 ce       	rjmp	.-946    	; 0x14cc <main+0x2ec>
    187e:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:360
        NVM::nvm_flash_offset  = 0x800000;
    1880:	90 e0       	ldi	r25, 0x00	; 0
    1882:	a0 e8       	ldi	r26, 0x80	; 128
    1884:	b0 e0       	ldi	r27, 0x00	; 0
    1886:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
    188a:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
    188e:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
    1892:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
    1896:	ee 9a       	sbi	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:361
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
    1898:	19 ce       	rjmp	.-974    	; 0x14cc <main+0x2ec>

0000189a <setjmp>:
setjmp():
    189a:	dc 01       	movw	r26, r24
    189c:	2d 92       	st	X+, r2
    189e:	3d 92       	st	X+, r3
    18a0:	4d 92       	st	X+, r4
    18a2:	5d 92       	st	X+, r5
    18a4:	6d 92       	st	X+, r6
    18a6:	7d 92       	st	X+, r7
    18a8:	8d 92       	st	X+, r8
    18aa:	9d 92       	st	X+, r9
    18ac:	ad 92       	st	X+, r10
    18ae:	bd 92       	st	X+, r11
    18b0:	cd 92       	st	X+, r12
    18b2:	dd 92       	st	X+, r13
    18b4:	ed 92       	st	X+, r14
    18b6:	fd 92       	st	X+, r15
    18b8:	0d 93       	st	X+, r16
    18ba:	1d 93       	st	X+, r17
    18bc:	cd 93       	st	X+, r28
    18be:	dd 93       	st	X+, r29
    18c0:	ff 91       	pop	r31
    18c2:	ef 91       	pop	r30
    18c4:	8d b7       	in	r24, 0x3d	; 61
    18c6:	8d 93       	st	X+, r24
    18c8:	8e b7       	in	r24, 0x3e	; 62
    18ca:	8d 93       	st	X+, r24
    18cc:	8f b7       	in	r24, 0x3f	; 63
    18ce:	8d 93       	st	X+, r24
    18d0:	ed 93       	st	X+, r30
    18d2:	fd 93       	st	X+, r31
    18d4:	88 27       	eor	r24, r24
    18d6:	99 27       	eor	r25, r25
    18d8:	09 94       	ijmp

000018da <longjmp>:
longjmp():
    18da:	dc 01       	movw	r26, r24
    18dc:	cb 01       	movw	r24, r22
    18de:	81 30       	cpi	r24, 0x01	; 1
    18e0:	91 05       	cpc	r25, r1
    18e2:	81 1d       	adc	r24, r1
    18e4:	2d 90       	ld	r2, X+
    18e6:	3d 90       	ld	r3, X+
    18e8:	4d 90       	ld	r4, X+
    18ea:	5d 90       	ld	r5, X+
    18ec:	6d 90       	ld	r6, X+
    18ee:	7d 90       	ld	r7, X+
    18f0:	8d 90       	ld	r8, X+
    18f2:	9d 90       	ld	r9, X+
    18f4:	ad 90       	ld	r10, X+
    18f6:	bd 90       	ld	r11, X+
    18f8:	cd 90       	ld	r12, X+
    18fa:	dd 90       	ld	r13, X+
    18fc:	ed 90       	ld	r14, X+
    18fe:	fd 90       	ld	r15, X+
    1900:	0d 91       	ld	r16, X+
    1902:	1d 91       	ld	r17, X+
    1904:	cd 91       	ld	r28, X+
    1906:	dd 91       	ld	r29, X+
    1908:	ed 91       	ld	r30, X+
    190a:	fd 91       	ld	r31, X+
    190c:	0d 90       	ld	r0, X+
    190e:	0f be       	out	0x3f, r0	; 63
    1910:	ed bf       	out	0x3d, r30	; 61
    1912:	fe bf       	out	0x3e, r31	; 62
    1914:	ed 91       	ld	r30, X+
    1916:	fd 91       	ld	r31, X+
    1918:	09 94       	ijmp

0000191a <_exit>:
exit():
    191a:	f8 94       	cli

0000191c <__stop_program>:
__stop_program():
    191c:	ff cf       	rjmp	.-2      	; 0x191c <__stop_program>

Disassembly of section .nvmem:

00001974 <.nvmem>:
	...
