
/var/folders/mz/_z9vt_y13rdf9tt_4qkvv0k40000gn/T/arduino_build_304944/UPDI4AVR_FW753B.ino.elf:     file format elf32-avr


Disassembly of section .data:

00803800 <__data_start>:
__data_start():
  803800:	55 c8       	rjmp	.-3926   	; 0x8028ac <UPDI::nvmprog_key+0x7f8e0a>
  803802:	00 c3       	rjmp	.+1536   	; 0x803e04 <__bss_end+0x388>
  803804:	04 55       	subi	r16, 0x54	; 84

00803805 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat>:
  803805:	55 a0 00 55 04                                      U..U.

0080380a <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr>:
  80380a:	55 6a 00 00 00 00                                   Uj....

00803810 <UPDI::st8(unsigned long, unsigned char)::set_ptr>:
  803810:	55 48 00 00 00 00                                   UH....

00803816 <UPDI::ld8(unsigned long)::set_ptr>:
  803816:	55 08 00 00 00 00                                   U.....

0080381c <UPDI::get_cs_stat(unsigned char)::set_ptr>:
  80381c:	55 00                                               U.

0080381e <UPDI::set_cs_stat(unsigned char, unsigned char)::set_ptr>:
  80381e:	55 00 00                                            U..

00803821 <UPDI::enter_updi(bool)::set_ptr>:
  803821:	55 e5                                               U.

00803823 <NVM::set_repeat_rsd>:
  803823:	55 c2 0e 55 a0 00 55 65                             U..U..Ue

0080382b <NVM::set_repeat>:
  80382b:	55 a0 00 55 64                                      U..Ud

00803830 <NVM::set_ptr>:
  803830:	55 6a 00 00 00 00                                   Uj....

00803836 <JTAG2::PARAM_BAUD_RATE_VAL>:
  803836:	04 00                                               ..

Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	67 c0       	rjmp	.+206    	; 0xd0 <__ctors_end>
       2:	00 00       	nop
../../../../crt1/gcrt1.S:67
       4:	82 c0       	rjmp	.+260    	; 0x10a <__bad_interrupt>
       6:	00 00       	nop
../../../../crt1/gcrt1.S:68
       8:	80 c0       	rjmp	.+256    	; 0x10a <__bad_interrupt>
       a:	00 00       	nop
../../../../crt1/gcrt1.S:69
       c:	7e c0       	rjmp	.+252    	; 0x10a <__bad_interrupt>
       e:	00 00       	nop
../../../../crt1/gcrt1.S:70
      10:	7c c0       	rjmp	.+248    	; 0x10a <__bad_interrupt>
      12:	00 00       	nop
../../../../crt1/gcrt1.S:71
      14:	7a c0       	rjmp	.+244    	; 0x10a <__bad_interrupt>
      16:	00 00       	nop
../../../../crt1/gcrt1.S:72
      18:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__vector_6>
../../../../crt1/gcrt1.S:73
      1c:	0c 94 91 09 	jmp	0x1322	; 0x1322 <__vector_7>
../../../../crt1/gcrt1.S:74
      20:	74 c0       	rjmp	.+232    	; 0x10a <__bad_interrupt>
      22:	00 00       	nop
../../../../crt1/gcrt1.S:75
      24:	72 c0       	rjmp	.+228    	; 0x10a <__bad_interrupt>
      26:	00 00       	nop
../../../../crt1/gcrt1.S:76
      28:	70 c0       	rjmp	.+224    	; 0x10a <__bad_interrupt>
      2a:	00 00       	nop
../../../../crt1/gcrt1.S:77
      2c:	6e c0       	rjmp	.+220    	; 0x10a <__bad_interrupt>
      2e:	00 00       	nop
../../../../crt1/gcrt1.S:78
      30:	6c c0       	rjmp	.+216    	; 0x10a <__bad_interrupt>
      32:	00 00       	nop
../../../../crt1/gcrt1.S:79
      34:	0c 94 4d 09 	jmp	0x129a	; 0x129a <__vector_13>
../../../../crt1/gcrt1.S:80
      38:	68 c0       	rjmp	.+208    	; 0x10a <__bad_interrupt>
      3a:	00 00       	nop
../../../../crt1/gcrt1.S:81
      3c:	66 c0       	rjmp	.+204    	; 0x10a <__bad_interrupt>
      3e:	00 00       	nop
../../../../crt1/gcrt1.S:82
      40:	64 c0       	rjmp	.+200    	; 0x10a <__bad_interrupt>
      42:	00 00       	nop
../../../../crt1/gcrt1.S:83
      44:	62 c0       	rjmp	.+196    	; 0x10a <__bad_interrupt>
      46:	00 00       	nop
../../../../crt1/gcrt1.S:84
      48:	60 c0       	rjmp	.+192    	; 0x10a <__bad_interrupt>
      4a:	00 00       	nop
../../../../crt1/gcrt1.S:85
      4c:	5e c0       	rjmp	.+188    	; 0x10a <__bad_interrupt>
      4e:	00 00       	nop
../../../../crt1/gcrt1.S:86
      50:	5c c0       	rjmp	.+184    	; 0x10a <__bad_interrupt>
      52:	00 00       	nop
../../../../crt1/gcrt1.S:87
      54:	5a c0       	rjmp	.+180    	; 0x10a <__bad_interrupt>
      56:	00 00       	nop
../../../../crt1/gcrt1.S:88
      58:	58 c0       	rjmp	.+176    	; 0x10a <__bad_interrupt>
      5a:	00 00       	nop
../../../../crt1/gcrt1.S:89
      5c:	56 c0       	rjmp	.+172    	; 0x10a <__bad_interrupt>
      5e:	00 00       	nop
../../../../crt1/gcrt1.S:90
      60:	54 c0       	rjmp	.+168    	; 0x10a <__bad_interrupt>
      62:	00 00       	nop
../../../../crt1/gcrt1.S:91
      64:	52 c0       	rjmp	.+164    	; 0x10a <__bad_interrupt>
      66:	00 00       	nop
../../../../crt1/gcrt1.S:92
      68:	50 c0       	rjmp	.+160    	; 0x10a <__bad_interrupt>
      6a:	00 00       	nop
../../../../crt1/gcrt1.S:93
      6c:	4e c0       	rjmp	.+156    	; 0x10a <__bad_interrupt>
      6e:	00 00       	nop
../../../../crt1/gcrt1.S:94
      70:	4c c0       	rjmp	.+152    	; 0x10a <__bad_interrupt>
      72:	00 00       	nop
../../../../crt1/gcrt1.S:95
      74:	4a c0       	rjmp	.+148    	; 0x10a <__bad_interrupt>
	...

00000078 <__trampolines_end>:
__trampolines_start():
      78:	86 01       	movw	r16, r12
      7a:	01 01       	movw	r0, r2
      7c:	02 01       	movw	r0, r4
      7e:	01 35       	cpi	r16, 0x51	; 81
      80:	07 01       	movw	r0, r14
      82:	00 00       	nop
      84:	00 00       	nop
      86:	00 00       	nop
      88:	4a 54       	subi	r20, 0x4A	; 74
      8a:	41 47       	sbci	r20, 0x71	; 113
      8c:	49 43       	sbci	r20, 0x39	; 57
      8e:	45 20       	and	r4, r5
      90:	6d 6b       	ori	r22, 0xBD	; 189
      92:	49 49       	sbci	r20, 0x99	; 153
	...

00000095 <JTAG2::BAUD_TABLE>:
      95:	00 00 1b 41 8d 20 47 10 23 08 12 04 b6 02 5b 01     ...A. G.#.....[.
      a5:	da 0a 04 01 ae 00 57 00 2b 00 39 01 9c 00 00 00     ......W.+.9.....
      b5:	00 00 0b 01 c8 00 a0 00 85 00 64 00 50 00 43 00     ..........d.P.C.
      c5:	3c 00 28 00 1b 00 14 00 0d 00 00                    <.(........

000000d0 <__ctors_end>:
__dtors_end():
../../../../crt1/gcrt1.S:230
      d0:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
      d2:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
      d4:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
      d6:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
      d8:	df e3       	ldi	r29, 0x3F	; 63
../../../../crt1/gcrt1.S:237
      da:	de bf       	out	0x3e, r29	; 62

000000dc <__do_copy_data>:
__do_copy_data():
      dc:	18 e3       	ldi	r17, 0x38	; 56
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b8 e3       	ldi	r27, 0x38	; 56
      e2:	ec ea       	ldi	r30, 0xAC	; 172
      e4:	fa e1       	ldi	r31, 0x1A	; 26
      e6:	02 c0       	rjmp	.+4      	; 0xec <__do_copy_data+0x10>
      e8:	05 90       	lpm	r0, Z+
      ea:	0d 92       	st	X+, r0
      ec:	a8 33       	cpi	r26, 0x38	; 56
      ee:	b1 07       	cpc	r27, r17
      f0:	d9 f7       	brne	.-10     	; 0xe8 <__do_copy_data+0xc>

000000f2 <__do_clear_bss>:
__do_clear_bss():
      f2:	2a e3       	ldi	r18, 0x3A	; 58
      f4:	a8 e3       	ldi	r26, 0x38	; 56
      f6:	b8 e3       	ldi	r27, 0x38	; 56
      f8:	01 c0       	rjmp	.+2      	; 0xfc <.do_clear_bss_start>

000000fa <.do_clear_bss_loop>:
      fa:	1d 92       	st	X+, r1

000000fc <.do_clear_bss_start>:
      fc:	ac 37       	cpi	r26, 0x7C	; 124
      fe:	b2 07       	cpc	r27, r18
     100:	e1 f7       	brne	.-8      	; 0xfa <.do_clear_bss_loop>
.do_clear_bss_start():
../../../../crt1/gcrt1.S:314
     102:	0e 94 ad 09 	call	0x135a	; 0x135a <main>
../../../../crt1/gcrt1.S:315
     106:	0c 94 45 0d 	jmp	0x1a8a	; 0x1a8a <_exit>

0000010a <__bad_interrupt>:
__vector_22():
../../../../crt1/gcrt1.S:209
     10a:	7a cf       	rjmp	.-268    	; 0x0 <__vectors>

0000010c <UPDI::RECV()>:
_ZN4UPDI4RECVEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:44
/*
 * UPDI受信
 */

uint8_t UPDI::RECV (void) {
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_RXCIF_bp);
     10c:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6d62>
     110:	87 ff       	sbrs	r24, 7
     112:	fc cf       	rjmp	.-8      	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:45
  UPDI_LASTH = UPDI_USART.RXDATAH ^ 0x80;
     114:	80 91 01 08 	lds	r24, 0x0801	; 0x800801 <UPDI::nvmprog_key+0x7f6d5f>
     118:	80 58       	subi	r24, 0x80	; 128
     11a:	8f bb       	out	0x1f, r24	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:46
  return UPDI_LASTL = UPDI_USART.RXDATAL;
     11c:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <UPDI::nvmprog_key+0x7f6d5e>
     120:	8e bb       	out	0x1e, r24	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:47
}
     122:	08 95       	ret

00000124 <UPDI::SEND(unsigned char)>:
_ZN4UPDI4SENDEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:55
 * UPDI送信
 *
 * ループバック受信で送信値を照合
 */

bool UPDI::SEND (uint8_t _data) {
     124:	cf 93       	push	r28
     126:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:57
  bool _r;
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_DREIF_bp);
     128:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6d62>
     12c:	85 ff       	sbrs	r24, 5
     12e:	fc cf       	rjmp	.-8      	; 0x128 <UPDI::SEND(unsigned char)+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:58
  UPDI_USART.STATUS = USART_TXCIF_bm;
     130:	80 e4       	ldi	r24, 0x40	; 64
     132:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <UPDI::nvmprog_key+0x7f6d62>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:59
  UPDI_USART.TXDATAL = _data;
     136:	c0 93 02 08 	sts	0x0802, r28	; 0x800802 <UPDI::nvmprog_key+0x7f6d60>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:60
  loop_until_bit_is_set(UPDI_USART.STATUS, USART_TXCIF_bp);
     13a:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <UPDI::nvmprog_key+0x7f6d62>
     13e:	86 ff       	sbrs	r24, 6
     140:	fc cf       	rjmp	.-8      	; 0x13a <UPDI::SEND(unsigned char)+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:61
  _r = _data == UPDI::RECV();
     142:	e4 df       	rcall	.-56     	; 0x10c <UPDI::RECV()>
     144:	98 2f       	mov	r25, r24
     146:	81 e0       	ldi	r24, 0x01	; 1
     148:	9c 13       	cpse	r25, r28
     14a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:62
  if (!_r) UPDI_LASTH |= 0x20;
     14c:	9c 13       	cpse	r25, r28
     14e:	fd 9a       	sbi	0x1f, 5	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:64
  return _r;
}
     150:	cf 91       	pop	r28
     152:	08 95       	ret

00000154 <UPDI::send_bytes(unsigned char const*, unsigned int)>:
_ZN4UPDI10send_bytesEPKhj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:111

/*
 * バイト塊送信
 */

bool UPDI::send_bytes (const uint8_t *data, size_t len) {
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	eb 01       	movw	r28, r22
     15e:	8c 01       	movw	r16, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:114
  uint8_t *p = (uint8_t*)(void*)data;
  do {
    if (!UPDI::SEND(*p++)) break;
     160:	f8 01       	movw	r30, r16
     162:	81 91       	ld	r24, Z+
     164:	8f 01       	movw	r16, r30
     166:	de df       	rcall	.-68     	; 0x124 <UPDI::SEND(unsigned char)>
     168:	88 23       	and	r24, r24
     16a:	11 f0       	breq	.+4      	; 0x170 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x1c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:115
  } while (--len);
     16c:	21 97       	sbiw	r28, 0x01	; 1
     16e:	c1 f7       	brne	.-16     	; 0x160 <UPDI::send_bytes(unsigned char const*, unsigned int)+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:116
  return len == 0;
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	cd 2b       	or	r28, r29
     174:	09 f0       	breq	.+2      	; 0x178 <UPDI::send_bytes(unsigned char const*, unsigned int)+0x24>
     176:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:117
}
     178:	df 91       	pop	r29
     17a:	cf 91       	pop	r28
     17c:	1f 91       	pop	r17
     17e:	0f 91       	pop	r16
     180:	08 95       	ret

00000182 <UPDI::set_cs_stat(unsigned char, unsigned char)>:
_ZN4UPDI11set_cs_statEhh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:219
 * コントロールステータス送信
 */

bool UPDI::set_cs_stat (const uint8_t code, uint8_t data) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0, 0 };
  set_ptr[1] = UPDI::UPDI_STCS | code;
     182:	ee e1       	ldi	r30, 0x1E	; 30
     184:	f8 e3       	ldi	r31, 0x38	; 56
     186:	80 6c       	ori	r24, 0xC0	; 192
     188:	81 83       	std	Z+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:220
  set_ptr[2] = data;
     18a:	62 83       	std	Z+2, r22	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:221
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     18c:	63 e0       	ldi	r22, 0x03	; 3
     18e:	70 e0       	ldi	r23, 0x00	; 0
     190:	cf 01       	movw	r24, r30
     192:	e0 cf       	rjmp	.-64     	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

00000194 <UPDI::updi_reset(bool)>:
_ZN4UPDI10updi_resetEb():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:233
}
inline uint8_t UPDI::get_cs_asi_ctra (void) {
  return UPDI::get_cs_stat(UPDI::UPDI_CS_ASI_CTRLA);
}
inline bool UPDI::updi_reset (bool logic) {
  return UPDI::set_cs_stat(
     194:	60 e0       	ldi	r22, 0x00	; 0
     196:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:235
    UPDI::UPDI_CS_ASI_RESET_REQ,
    (logic ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP));
     198:	69 e5       	ldi	r22, 0x59	; 89
     19a:	88 e0       	ldi	r24, 0x08	; 8
     19c:	f2 cf       	rjmp	.-28     	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>

0000019e <UPDI::st8(unsigned long, unsigned char)>:
_ZN4UPDI3st8Emh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:148

/*
 * 単バイト送信
 */

bool UPDI::st8 (uint32_t addr, uint8_t data) {
     19e:	cf 93       	push	r28
     1a0:	c4 2f       	mov	r28, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:154
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
     1a2:	60 93 12 38 	sts	0x3812, r22	; 0x803812 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x2>
     1a6:	70 93 13 38 	sts	0x3813, r23	; 0x803813 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x3>
     1aa:	80 93 14 38 	sts	0x3814, r24	; 0x803814 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x4>
     1ae:	90 93 15 38 	sts	0x3815, r25	; 0x803815 <UPDI::st8(unsigned long, unsigned char)::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:155
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     1b2:	65 e0       	ldi	r22, 0x05	; 5
     1b4:	70 e0       	ldi	r23, 0x00	; 0
     1b6:	80 e1       	ldi	r24, 0x10	; 16
     1b8:	98 e3       	ldi	r25, 0x38	; 56
     1ba:	cc df       	rcall	.-104    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     1bc:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:158
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  if (!UPDI::SEND(data)) return false;
  return UPDI::UPDI_ACK == UPDI::RECV();
     1be:	02 c0       	rjmp	.+4      	; 0x1c4 <UPDI::st8(unsigned long, unsigned char)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:156
    , UPDI::UPDI_STS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS32(set_ptr[2])->dword = addr;
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	0b c0       	rjmp	.+22     	; 0x1da <UPDI::st8(unsigned long, unsigned char)+0x3c>
     1c4:	a3 df       	rcall	.-186    	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:157
  if (!UPDI::SEND(data)) return false;
     1c6:	80 34       	cpi	r24, 0x40	; 64
     1c8:	d9 f7       	brne	.-10     	; 0x1c0 <UPDI::st8(unsigned long, unsigned char)+0x22>
     1ca:	8c 2f       	mov	r24, r28
     1cc:	ab df       	rcall	.-170    	; 0x124 <UPDI::SEND(unsigned char)>
     1ce:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:158
  return UPDI::UPDI_ACK == UPDI::RECV();
     1d0:	b9 f3       	breq	.-18     	; 0x1c0 <UPDI::st8(unsigned long, unsigned char)+0x22>
     1d2:	9c df       	rcall	.-200    	; 0x10c <UPDI::RECV()>
     1d4:	91 e0       	ldi	r25, 0x01	; 1
     1d6:	80 34       	cpi	r24, 0x40	; 64
     1d8:	99 f7       	brne	.-26     	; 0x1c0 <UPDI::st8(unsigned long, unsigned char)+0x22>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:159
}
     1da:	89 2f       	mov	r24, r25
     1dc:	cf 91       	pop	r28
     1de:	08 95       	ret

000001e0 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>:
_ZN4UPDI18send_repeat_headerEhmj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:136
    , UPDI::UPDI_REPEAT | UPDI::UPDI_DATA1
    , 0                   // repeat count
    , UPDI::UPDI_SYNCH
    , UPDI::UPDI_PTR_INC  // +cmd
  };
  _CAPS32(set_ptr[2])->dword = addr;
     1e0:	40 93 0c 38 	sts	0x380C, r20	; 0x80380c <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x2>
     1e4:	50 93 0d 38 	sts	0x380D, r21	; 0x80380d <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x3>
     1e8:	60 93 0e 38 	sts	0x380E, r22	; 0x80380e <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x4>
     1ec:	70 93 0f 38 	sts	0x380F, r23	; 0x80380f <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:137
  set_repeat[2] = len - 1;
     1f0:	21 50       	subi	r18, 0x01	; 1
     1f2:	20 93 07 38 	sts	0x3807, r18	; 0x803807 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:138
  set_repeat[4] = UPDI::UPDI_PTR_INC | cmd;
     1f6:	84 60       	ori	r24, 0x04	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:139
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     1f8:	80 93 09 38 	sts	0x3809, r24	; 0x803809 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)::set_repeat+0x4>
     1fc:	65 e0       	ldi	r22, 0x05	; 5
     1fe:	70 e0       	ldi	r23, 0x00	; 0
     200:	8a e0       	ldi	r24, 0x0A	; 10
     202:	98 e3       	ldi	r25, 0x38	; 56
     204:	a7 df       	rcall	.-178    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:140
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     206:	88 23       	and	r24, r24
     208:	41 f0       	breq	.+16     	; 0x21a <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
     20a:	80 df       	rcall	.-256    	; 0x10c <UPDI::RECV()>
     20c:	80 34       	cpi	r24, 0x40	; 64
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:141
  return UPDI::send_bytes(set_repeat, sizeof(set_repeat));
     20e:	29 f4       	brne	.+10     	; 0x21a <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)+0x3a>
     210:	65 e0       	ldi	r22, 0x05	; 5
     212:	70 e0       	ldi	r23, 0x00	; 0
     214:	85 e0       	ldi	r24, 0x05	; 5
     216:	98 e3       	ldi	r25, 0x38	; 56
     218:	9d cf       	rjmp	.-198    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:142
}
     21a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:82
 * BREAKキャラクタ
 *
 * 送信速度を遅くすることで生成する
 */

void UPDI::BREAK (void) {
     21c:	08 95       	ret

0000021e <UPDI::BREAK()>:
_ZN4UPDI5BREAKEv():
     21e:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:83
  UPDI_USART.BAUD = UPDI_BAUD_BREAK;
     220:	df 93       	push	r29
     222:	c0 e0       	ldi	r28, 0x00	; 0
     224:	d8 e0       	ldi	r29, 0x08	; 8
     226:	80 ec       	ldi	r24, 0xC0	; 192
     228:	94 e4       	ldi	r25, 0x44	; 68
     22a:	88 87       	std	Y+8, r24	; 0x08
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:84
  UPDI::SEND(UPDI::UPDI_NOP);
     22c:	99 87       	std	Y+9, r25	; 0x09
     22e:	80 e0       	ldi	r24, 0x00	; 0
     230:	79 df       	rcall	.-270    	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:85
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     232:	80 eb       	ldi	r24, 0xB0	; 176
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	88 87       	std	Y+8, r24	; 0x08
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:86
}
     238:	99 87       	std	Y+9, r25	; 0x09
     23a:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:196
 * コントロールステータス受信
 */

uint8_t UPDI::get_cs_stat (const uint8_t code) {
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, 0 };
  set_ptr[1] = UPDI::UPDI_LDCS | code;
     23c:	cf 91       	pop	r28
     23e:	08 95       	ret

00000240 <UPDI::get_cs_stat(unsigned char)>:
_ZN4UPDI11get_cs_statEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:197
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
     240:	80 68       	ori	r24, 0x80	; 128
     242:	80 93 1d 38 	sts	0x381D, r24	; 0x80381d <UPDI::get_cs_stat(unsigned char)::set_ptr+0x1>
     246:	62 e0       	ldi	r22, 0x02	; 2
     248:	70 e0       	ldi	r23, 0x00	; 0
     24a:	8c e1       	ldi	r24, 0x1C	; 28
     24c:	98 e3       	ldi	r25, 0x38	; 56
     24e:	82 df       	rcall	.-252    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     250:	81 11       	cpse	r24, r1
     252:	02 c0       	rjmp	.+4      	; 0x258 <UPDI::get_cs_stat(unsigned char)+0x18>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:198
  return UPDI::RECV();
     254:	e4 df       	rcall	.-56     	; 0x21e <UPDI::BREAK()>
     256:	f7 cf       	rjmp	.-18     	; 0x246 <UPDI::get_cs_stat(unsigned char)+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:203
}
inline bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
  return check == (UPDI::get_cs_stat(code) & check);
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
     258:	59 cf       	rjmp	.-334    	; 0x10c <UPDI::RECV()>

0000025a <UPDI::is_sys_stat(unsigned char)>:
_ZN4UPDI11is_sys_statEh():
     25a:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:201
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return UPDI::RECV();
}
inline bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
  return check == (UPDI::get_cs_stat(code) & check);
     25c:	c8 2f       	mov	r28, r24
is_cs_stat():
     25e:	8b e0       	ldi	r24, 0x0B	; 11
     260:	ef df       	rcall	.-34     	; 0x240 <UPDI::get_cs_stat(unsigned char)>
     262:	9c 2f       	mov	r25, r28
     264:	98 23       	and	r25, r24
     266:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:205
}
inline bool UPDI::is_sys_stat (const uint8_t check) {
  return UPDI::is_cs_stat(UPDI::UPDI_CS_ASI_SYS_STATUS, check);
}
     268:	9c 13       	cpse	r25, r28
     26a:	80 e0       	ldi	r24, 0x00	; 0
_ZN4UPDI11is_sys_statEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:185
  static uint8_t set_ptr[] = {
      UPDI::UPDI_SYNCH
    , UPDI::UPDI_LDS | UPDI::UPDI_ADDR3 | UPDI::UPDI_DATA1
    , 0, 0, 0, 0  // qword address
  };
  _CAPS16(set_ptr[2])->word = (uint16_t)addr;
     26c:	cf 91       	pop	r28
     26e:	08 95       	ret

00000270 <UPDI::ld8(unsigned long)>:
_ZN4UPDI3ld8Em():
     270:	60 93 18 38 	sts	0x3818, r22	; 0x803818 <UPDI::ld8(unsigned long)::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:186
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) UPDI::BREAK();
     274:	70 93 19 38 	sts	0x3819, r23	; 0x803819 <UPDI::ld8(unsigned long)::set_ptr+0x3>
     278:	65 e0       	ldi	r22, 0x05	; 5
     27a:	70 e0       	ldi	r23, 0x00	; 0
     27c:	86 e1       	ldi	r24, 0x16	; 22
     27e:	98 e3       	ldi	r25, 0x38	; 56
     280:	69 df       	rcall	.-302    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     282:	81 11       	cpse	r24, r1
     284:	02 c0       	rjmp	.+4      	; 0x28a <UPDI::ld8(unsigned long)+0x1a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:187
  return UPDI::RECV();
     286:	cb df       	rcall	.-106    	; 0x21e <UPDI::BREAK()>
     288:	f7 cf       	rjmp	.-18     	; 0x278 <UPDI::ld8(unsigned long)+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:94
 * 対象リセット
 *
 * BREAKを前置するタイプ
 */

bool UPDI::Target_Reset (bool _enable) {
     28a:	40 cf       	rjmp	.-384    	; 0x10c <UPDI::RECV()>

0000028c <UPDI::Target_Reset(bool)>:
_ZN4UPDI12Target_ResetEb():
     28c:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:102
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_ASI_RESET_REQ
    , 0
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
     28e:	c8 2f       	mov	r28, r24
     290:	c6 df       	rcall	.-116    	; 0x21e <UPDI::BREAK()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:103
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
     292:	80 e0       	ldi	r24, 0x00	; 0
     294:	c1 11       	cpse	r28, r1
     296:	89 e5       	ldi	r24, 0x59	; 89
     298:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:104
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     29c:	65 e0       	ldi	r22, 0x05	; 5
     29e:	70 e0       	ldi	r23, 0x00	; 0
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:105
}
     2a4:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:104
    , UPDI::UPDI_STCS | UPDI::UPDI_CS_CTRLB
    , UPDI::UPDI_SET_UPDIDIS
  };
  UPDI::BREAK();
  set_ptr[2] = _enable ? UPDI::UPDI_RSTREQ : UPDI::UPDI_NOP;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
     2a6:	56 cf       	rjmp	.-340    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>

000002a8 <TIM::LED_Blink()>:
_ZN3TIM9LED_BlinkEv():
     2a8:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     2ac:	83 30       	cpi	r24, 0x03	; 3
     2ae:	99 f0       	breq	.+38     	; 0x2d6 <TIM::LED_Blink()+0x2e>
     2b0:	83 e0       	ldi	r24, 0x03	; 3
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
     2b2:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
     2b6:	89 ea       	ldi	r24, 0xA9	; 169
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
     2b8:	95 e5       	ldi	r25, 0x55	; 85
     2ba:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f6ffa>
     2be:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f6ffb>
     2c2:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f6ff8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
     2c6:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f6ff9>
     2ca:	8f e4       	ldi	r24, 0x4F	; 79
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     2cc:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f6fee>
     2d0:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     2d2:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6707>
     2d6:	08 95       	ret

000002d8 <TIM::LED_Flash()>:
_ZN3TIM9LED_FlashEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:177
}

/* 点滅（SW1アサート）*/
void TIM::LED_Blink (void) {
  LED_TCB1(3, TCB1_BLINK);
}
     2d8:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
     2dc:	82 30       	cpi	r24, 0x02	; 2
     2de:	99 f0       	breq	.+38     	; 0x306 <TIM::LED_Flash()+0x2e>
     2e0:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
     2e2:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
     2e6:	89 ea       	ldi	r24, 0xA9	; 169
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
     2e8:	98 e0       	ldi	r25, 0x08	; 8
     2ea:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f6ffa>
     2ee:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f6ffb>
     2f2:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f6ff8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
     2f6:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f6ff9>
     2fa:	8f e4       	ldi	r24, 0x4F	; 79
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     2fc:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f6fee>
     300:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
     302:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6707>
     306:	08 95       	ret

00000308 <TIM::Timeout_Stop()>:
_ZN3TIM12Timeout_StopEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:172
}

/* フラッシュ（RTSアサート/UPDI許認可後）*/
void TIM::LED_Flash (void) {
  LED_TCB1(2, TCB1_FLASH);
}
     308:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:137
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
  }
}

void TIM::Timeout_Stop (void) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     30a:	f8 94       	cli
_ZN3TIM12Timeout_StopEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     30c:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f6fde>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:138
    TCB0_CTRLA = 0;
     310:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:139
    TCB0_INTFLAGS = TCB_CAPT_bm;
     312:	90 93 86 0a 	sts	0x0A86, r25	; 0x800a86 <UPDI::nvmprog_key+0x7f6fe4>
__iRestore():
     316:	8f bf       	out	0x3f, r24	; 63
_ZN3TIM12Timeout_StopEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     318:	18 95       	reti
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:141
  }
  reti();
     31a:	08 95       	ret

0000031c <SYS::WDT_SET(unsigned char)>:
_ZN3SYS7WDT_SETEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:142
}
     31c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <UPDI::nvmprog_key+0x7f665f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:133
/*
 * WDT操作
 */

void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
     320:	90 fd       	sbrc	r25, 0
     322:	fc cf       	rjmp	.-8      	; 0x31c <SYS::WDT_SET(unsigned char)>
     324:	98 ed       	ldi	r25, 0xD8	; 216
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:134
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
     326:	94 bf       	out	0x34, r25	; 52
     328:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <UPDI::nvmprog_key+0x7f665e>
     32c:	08 95       	ret

0000032e <SYS::get_vcc()>:
_ZN3SYS7get_vccEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:135
}
     32e:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:69
/*
 * 自己VCC測定
 */

uint16_t SYS::get_vcc (void) {
  ADC0_CTRLA = ADC_ENABLE_bm;
     330:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <UPDI::nvmprog_key+0x7f6b5e>
     334:	10 92 01 06 	sts	0x0601, r1	; 0x800601 <UPDI::nvmprog_key+0x7f6b5f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:70
  ADC0_CTRLB = ADC_PRESC_DIV2_gc;
     338:	84 e5       	ldi	r24, 0x54	; 84
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:71
  ADC0_CTRLC = ADC_REFSEL_1024MV_gc | ((F_CPU / 1000000UL) << ADC_TIMEBASE_gp);
     33a:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <UPDI::nvmprog_key+0x7f6b60>
     33e:	81 e1       	ldi	r24, 0x11	; 17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:72
  ADC0_CTRLE = 17; /* (SAMPDUR + 0.5) * fCLK_ADC = 10.5 µs sample duration */
     340:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <UPDI::nvmprog_key+0x7f6b66>
     344:	91 e3       	ldi	r25, 0x31	; 49
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:73
  ADC0_MUXPOS = ADC_MUXPOS_VDDDIV10_gc; /* ADC channel VDD/10 */
     346:	90 93 0c 06 	sts	0x060C, r25	; 0x80060c <UPDI::nvmprog_key+0x7f6b6a>
     34a:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <UPDI::nvmprog_key+0x7f6b68>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:74
  ADC0_COMMAND = ADC_MODE_SINGLE_12BIT_gc | ADC_START_IMMEDIATE_gc;
     34e:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <UPDI::nvmprog_key+0x7f6b63>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:75
  loop_until_bit_is_set(ADC0_INTFLAGS, ADC_SAMPRDY_bp);
     352:	81 ff       	sbrs	r24, 1
     354:	fc cf       	rjmp	.-8      	; 0x34e <SYS::get_vcc()+0x20>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:76
  uint16_t adc_reading = ADC0_SAMPLE;
     356:	20 91 14 06 	lds	r18, 0x0614	; 0x800614 <UPDI::nvmprog_key+0x7f6b72>
     35a:	30 91 15 06 	lds	r19, 0x0615	; 0x800615 <UPDI::nvmprog_key+0x7f6b73>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:77
  adc_reading += adc_reading + (adc_reading >> 1);  /* x2.5 */
     35e:	c9 01       	movw	r24, r18
     360:	96 95       	lsr	r25
     362:	87 95       	ror	r24
     364:	22 0f       	add	r18, r18
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:78
  ADC0_CTRLA = 0;
     366:	33 1f       	adc	r19, r19
     368:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <UPDI::nvmprog_key+0x7f6b5e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:80
  return adc_reading;
}
     36c:	82 0f       	add	r24, r18
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:361
 * NVMCTRL制御
 */

/* NVMCTRL v0 */
bool NVM::nvm_ctrl (uint8_t nvmcmd) {
  return UPDI::st8(NVM::NVMCTRL_REG_CTRLA, nvmcmd);
     36e:	93 1f       	adc	r25, r19
     370:	08 95       	ret

00000372 <NVM::nvm_ctrl(unsigned char)>:
_ZN3NVM8nvm_ctrlEh():
     372:	48 2f       	mov	r20, r24
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	70 e1       	ldi	r23, 0x10	; 16
     378:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:364
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	10 cf       	rjmp	.-480    	; 0x19e <UPDI::st8(unsigned long, unsigned char)>

0000037e <nvm_ctrl_change(unsigned char)>:
_Z15nvm_ctrl_changeh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:365
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
     37e:	cf 93       	push	r28
     380:	c8 2f       	mov	r28, r24
     382:	60 e0       	ldi	r22, 0x00	; 0
     384:	70 e1       	ldi	r23, 0x10	; 16
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	72 df       	rcall	.-284    	; 0x270 <UPDI::ld8(unsigned long)>
     38c:	8c 13       	cpse	r24, r28
     38e:	03 c0       	rjmp	.+6      	; 0x396 <nvm_ctrl_change(unsigned char)+0x18>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:369
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:366
  return UPDI::st8(NVM::NVMCTRL_REG_CTRLA, nvmcmd);
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
     394:	08 95       	ret
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	ec df       	rcall	.-40     	; 0x372 <NVM::nvm_ctrl(unsigned char)>
     39a:	88 23       	and	r24, r24
     39c:	d1 f3       	breq	.-12     	; 0x392 <nvm_ctrl_change(unsigned char)+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:367
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     39e:	cc 23       	and	r28, r28
     3a0:	b9 f3       	breq	.-18     	; 0x390 <nvm_ctrl_change(unsigned char)+0x12>
     3a2:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:369
  return true;
}
     3a4:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:367
}

bool nvm_ctrl_change (uint8_t nvmcmd) {
  if (UPDI::ld8(NVM::NVMCTRL_REG_CTRLA) == nvmcmd) return true;
  if (!NVM::nvm_ctrl(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
     3a6:	e5 cf       	rjmp	.-54     	; 0x372 <NVM::nvm_ctrl(unsigned char)>

000003a8 <JTAG2::set_response(JTAG2::jtag_response_e)>:
_ZN5JTAG212set_responseENS_15jtag_response_eE():
     3a8:	44 e0       	ldi	r20, 0x04	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:162
  }
}

/* JTAG Response */
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
     3aa:	50 e0       	ldi	r21, 0x00	; 0
     3ac:	60 e0       	ldi	r22, 0x00	; 0
     3ae:	70 e0       	ldi	r23, 0x00	; 0
     3b0:	40 93 6a 38 	sts	0x386A, r20	; 0x80386a <JTAG2::packet+0x3>
     3b4:	50 93 6b 38 	sts	0x386B, r21	; 0x80386b <JTAG2::packet+0x4>
     3b8:	60 93 6c 38 	sts	0x386C, r22	; 0x80386c <JTAG2::packet+0x5>
     3bc:	70 93 6d 38 	sts	0x386D, r23	; 0x80386d <JTAG2::packet+0x6>
     3c0:	80 93 6f 38 	sts	0x386F, r24	; 0x80386f <JTAG2::packet+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:164
  /* 応答番号 */
  packet.body[0] = response_code;
     3c4:	e1 99       	sbic	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     3c6:	0b c0       	rjmp	.+22     	; 0x3de <JTAG2::set_response(JTAG2::jtag_response_e)+0x36>
     3c8:	8c b3       	in	r24, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:167
                 : bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp) ? 1 : 0;
     3ca:	81 70       	andi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
  /* 応答番号 */
  packet.body[0] = response_code;
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     3cc:	80 93 70 38 	sts	0x3870, r24	; 0x803870 <JTAG2::packet+0x9>
     3d0:	8c b3       	in	r24, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:169
                 : bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp) ? 1 : 0;
  /* 内部状態フラグ */
  packet.body[2] = UPDI_CONTROL;
     3d2:	80 93 71 38 	sts	0x3871, r24	; 0x803871 <JTAG2::packet+0xa>
     3d6:	8d b3       	in	r24, 0x1d	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:170
  packet.body[3] = UPDI_NVMCTRL;
     3d8:	80 93 72 38 	sts	0x3872, r24	; 0x803872 <JTAG2::packet+0xb>
     3dc:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:171
}
     3de:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:166
void JTAG2::set_response (jtag_response_e response_code) {
  packet.size = 4;
  /* 応答番号 */
  packet.body[0] = response_code;
  /* 動作状態 0:無効 1:認識 2:書込可 */
  packet.body[1] = bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp) ? 2
     3e0:	f5 cf       	rjmp	.-22     	; 0x3cc <JTAG2::set_response(JTAG2::jtag_response_e)+0x24>

000003e2 <_crc_ccitt_update(unsigned int, unsigned char)>:
_ZL17_crc_ccitt_updatejh():
     3e2:	86 27       	eor	r24, r22
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:285
        "eor    %A0,__tmp_reg__"

        : "=d" (__ret)
        : "r" (__data), "0" (__crc)
        : "r0"
    );
     3e4:	08 2e       	mov	r0, r24
     3e6:	82 95       	swap	r24
     3e8:	80 7f       	andi	r24, 0xF0	; 240
     3ea:	80 25       	eor	r24, r0
     3ec:	09 2e       	mov	r0, r25
     3ee:	98 2f       	mov	r25, r24
     3f0:	82 95       	swap	r24
     3f2:	8f 70       	andi	r24, 0x0F	; 15
     3f4:	08 26       	eor	r0, r24
     3f6:	86 95       	lsr	r24
     3f8:	98 27       	eor	r25, r24
     3fa:	89 27       	eor	r24, r25
     3fc:	88 0f       	add	r24, r24
     3fe:	88 0f       	add	r24, r24
     400:	88 0f       	add	r24, r24
     402:	80 25       	eor	r24, r0
     404:	08 95       	ret

00000406 <JTAG2::answer_transfer()>:
_ZN5JTAG215answer_transferEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/crc16.h:287
    return __ret;
}
     406:	af 92       	push	r10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:147
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
  return _crc == 0;
}

/* JTAG Answer */
void JTAG2::answer_transfer (void) {
     408:	bf 92       	push	r11
     40a:	cf 92       	push	r12
     40c:	df 92       	push	r13
     40e:	ef 92       	push	r14
     410:	ff 92       	push	r15
     412:	0f 93       	push	r16
     414:	1f 93       	push	r17
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	00 d0       	rcall	.+0      	; 0x41c <JTAG2::answer_transfer()+0x16>
     41c:	cd b7       	in	r28, 0x3d	; 61
     41e:	de b7       	in	r29, 0x3e	; 62
     420:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:148
  uint16_t _crc = ~0;
     422:	9f ef       	ldi	r25, 0xFF	; 255
     424:	89 83       	std	Y+1, r24	; 0x01
     426:	9a 83       	std	Y+2, r25	; 0x02
     428:	e0 90 6a 38 	lds	r14, 0x386A	; 0x80386a <JTAG2::packet+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:149
  int16_t _len = packet.size_word[0] + 8;
     42c:	f0 90 6b 38 	lds	r15, 0x386B	; 0x80386b <JTAG2::packet+0x4>
     430:	87 01       	movw	r16, r14
     432:	08 5f       	subi	r16, 0xF8	; 248
     434:	1f 4f       	sbci	r17, 0xFF	; 255
     436:	87 e6       	ldi	r24, 0x67	; 103
     438:	c8 2e       	mov	r12, r24
     43a:	88 e3       	ldi	r24, 0x38	; 56
     43c:	d8 2e       	mov	r13, r24
     43e:	56 01       	movw	r10, r12
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	e8 1a       	sub	r14, r24
     444:	f1 08       	sbc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     446:	a7 ef       	ldi	r26, 0xF7	; 247
     448:	ea 16       	cp	r14, r26
     44a:	af ef       	ldi	r26, 0xFF	; 255
     44c:	fa 06       	cpc	r15, r26
     44e:	49 f0       	breq	.+18     	; 0x462 <JTAG2::answer_transfer()+0x5c>
     450:	f5 01       	movw	r30, r10
     452:	61 91       	ld	r22, Z+
     454:	5f 01       	movw	r10, r30
crc16_update():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
     456:	89 81       	ldd	r24, Y+1	; 0x01
     458:	9a 81       	ldd	r25, Y+2	; 0x02
     45a:	c3 df       	rcall	.-122    	; 0x3e2 <_crc_ccitt_update(unsigned int, unsigned char)>
_ZN5JTAG215answer_transferEv():
     45c:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:152
void JTAG2::answer_transfer (void) {
  uint16_t _crc = ~0;
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
     45e:	9a 83       	std	Y+2, r25	; 0x02
     460:	ef cf       	rjmp	.-34     	; 0x440 <JTAG2::answer_transfer()+0x3a>
     462:	f8 01       	movw	r30, r16
     464:	e9 59       	subi	r30, 0x99	; 153
     466:	f7 4c       	sbci	r31, 0xC7	; 199
     468:	89 81       	ldd	r24, Y+1	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:153
  (*_q++) = _CAPS16(_crc)->bytes[0];
     46a:	80 83       	st	Z, r24
     46c:	8a 81       	ldd	r24, Y+2	; 0x02
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  (*_q++) = _CAPS16(_crc)->bytes[1];
     46e:	81 83       	std	Z+1, r24	; 0x01
     470:	2f b7       	in	r18, 0x3f	; 63
__iCliRetVal():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:155
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     472:	f8 94       	cli
_ZN5JTAG215answer_transferEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     474:	32 96       	adiw	r30, 0x02	; 2
put():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:154
  int16_t _len = packet.size_word[0] + 8;
  uint8_t *_p = (uint8_t*) &packet.soh;
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
     476:	90 e4       	ldi	r25, 0x40	; 64
_ZN5JTAG215answer_transferEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:107
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
  JTAG_USART.STATUS = USART_TXCIF_bm;
     478:	ce 16       	cp	r12, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     47a:	df 06       	cpc	r13, r31
     47c:	71 f4       	brne	.+28     	; 0x49a <JTAG2::answer_transfer()+0x94>
__iRestore():
     47e:	2f bf       	out	0x3f, r18	; 63
_ZN5JTAG215answer_transferEv():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     480:	0f 90       	pop	r0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:158
  }
}
     482:	0f 90       	pop	r0
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	1f 91       	pop	r17
     48a:	0f 91       	pop	r16
     48c:	ff 90       	pop	r15
     48e:	ef 90       	pop	r14
     490:	df 90       	pop	r13
     492:	cf 90       	pop	r12
     494:	bf 90       	pop	r11
     496:	af 90       	pop	r10
     498:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:156
  uint8_t *_q = (uint8_t*) &packet.soh;
  while (_len--) _crc = JTAG2::crc16_update(_crc, *_q++);
  (*_q++) = _CAPS16(_crc)->bytes[0];
  (*_q++) = _CAPS16(_crc)->bytes[1];
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    while (_p != _q) put(*_p++);
     49a:	d6 01       	movw	r26, r12
     49c:	8d 91       	ld	r24, X+
     49e:	6d 01       	movw	r12, r26
put():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:106
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
  return JTAG_USART.RXDATAL;
}

uint8_t JTAG2::put (uint8_t _data) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_DREIF_bp);
     4a0:	30 91 24 08 	lds	r19, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6d82>
     4a4:	35 ff       	sbrs	r19, 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:107
  JTAG_USART.STATUS = USART_TXCIF_bm;
     4a6:	fc cf       	rjmp	.-8      	; 0x4a0 <JTAG2::answer_transfer()+0x9a>
     4a8:	90 93 24 08 	sts	0x0824, r25	; 0x800824 <UPDI::nvmprog_key+0x7f6d82>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:108
  return JTAG_USART.TXDATAL = _data;
     4ac:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <UPDI::nvmprog_key+0x7f6d80>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:412
/*
 * プログラミング制御開始
 *
 */

bool UPDI::enter_prog (void) {
     4b0:	e3 cf       	rjmp	.-58     	; 0x478 <JTAG2::answer_transfer()+0x72>

000004b2 <UPDI::enter_prog()>:
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:413
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
     4b2:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:414
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
     4b4:	e1 99       	sbic	0x1c, 1	; 28
     4b6:	36 c0       	rjmp	.+108    	; 0x524 <UPDI::enter_prog()+0x72>
     4b8:	80 e2       	ldi	r24, 0x20	; 32
     4ba:	cf de       	rcall	.-610    	; 0x25a <UPDI::is_sys_stat(unsigned char)>
     4bc:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:415
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
     4be:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:416
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
     4c0:	fb cf       	rjmp	.-10     	; 0x4b8 <UPDI::enter_prog()+0x6>
     4c2:	f3 99       	sbic	0x1e, 3	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:201
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return UPDI::RECV();
}
inline bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
  return check == (UPDI::get_cs_stat(code) & check);
     4c4:	2d c0       	rjmp	.+90     	; 0x520 <UPDI::enter_prog()+0x6e>
     4c6:	f0 99       	sbic	0x1e, 0	; 30
     4c8:	2e c0       	rjmp	.+92     	; 0x526 <UPDI::enter_prog()+0x74>
is_cs_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:417
bool UPDI::enter_prog (void) {
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) {
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
     4ca:	87 e0       	ldi	r24, 0x07	; 7
     4cc:	b9 de       	rcall	.-654    	; 0x240 <UPDI::get_cs_stat(unsigned char)>
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:418
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     4ce:	84 fd       	sbrc	r24, 4
     4d0:	0f c0       	rjmp	.+30     	; 0x4f0 <UPDI::enter_prog()+0x3e>
     4d2:	6a e0       	ldi	r22, 0x0A	; 10
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	82 ea       	ldi	r24, 0xA2	; 162
     4d8:	9a e9       	ldi	r25, 0x9A	; 154
     4da:	3c de       	rcall	.-904    	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     4dc:	88 23       	and	r24, r24
     4de:	19 f1       	breq	.+70     	; 0x526 <UPDI::enter_prog()+0x74>
delay_micros():
     4e0:	86 ea       	ldi	r24, 0xA6	; 166
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:201
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return UPDI::RECV();
}
inline bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
  return check == (UPDI::get_cs_stat(code) & check);
     4e2:	8a 95       	dec	r24
     4e4:	f1 f7       	brne	.-4      	; 0x4e2 <UPDI::enter_prog()+0x30>
     4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <UPDI::enter_prog()+0x36>
is_cs_stat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:419
    while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) {
      if (UPDI_LASTL & UPDI::UPDI_SYS_LOCKSTATUS) return false;
      if (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG)) {
        if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
        do { delay_micros(50); } while (!UPDI::is_key_stat(UPDI::UPDI_KEY_NVMPROG));
     4e8:	87 e0       	ldi	r24, 0x07	; 7
     4ea:	aa de       	rcall	.-684    	; 0x240 <UPDI::get_cs_stat(unsigned char)>
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:421
      }
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     4ec:	84 ff       	sbrs	r24, 4
     4ee:	f8 cf       	rjmp	.-16     	; 0x4e0 <UPDI::enter_prog()+0x2e>
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	50 de       	rcall	.-864    	; 0x194 <UPDI::updi_reset(bool)>
     4f4:	88 23       	and	r24, r24
     4f6:	b9 f0       	breq	.+46     	; 0x526 <UPDI::enter_prog()+0x74>
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	4c de       	rcall	.-872    	; 0x194 <UPDI::updi_reset(bool)>
     4fc:	88 23       	and	r24, r24
     4fe:	99 f0       	breq	.+38     	; 0x526 <UPDI::enter_prog()+0x74>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     500:	86 ea       	ldi	r24, 0xA6	; 166
     502:	8a 95       	dec	r24
     504:	f1 f7       	brne	.-4      	; 0x502 <UPDI::enter_prog()+0x50>
     506:	00 c0       	rjmp	.+0      	; 0x508 <UPDI::enter_prog()+0x56>
_ZN4UPDI10enter_progEv():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:422
      do { delay_micros(50); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
     508:	80 e2       	ldi	r24, 0x20	; 32
     50a:	a7 de       	rcall	.-690    	; 0x25a <UPDI::is_sys_stat(unsigned char)>
     50c:	81 11       	cpse	r24, r1
     50e:	f8 cf       	rjmp	.-16     	; 0x500 <UPDI::enter_prog()+0x4e>
delay_micros():
     510:	86 ea       	ldi	r24, 0xA6	; 166
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     512:	8a 95       	dec	r24
     514:	f1 f7       	brne	.-4      	; 0x512 <UPDI::enter_prog()+0x60>
     516:	00 c0       	rjmp	.+0      	; 0x518 <UPDI::enter_prog()+0x66>
_ZN4UPDI10enter_progEv():
     518:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:423
      do { delay_micros(50); } while (!UPDI::is_sys_stat(UPDI::UPDI_SYS_NVMPROG));
     51a:	9f de       	rcall	.-706    	; 0x25a <UPDI::is_sys_stat(unsigned char)>
     51c:	88 23       	and	r24, r24
     51e:	c1 f3       	breq	.-16     	; 0x510 <UPDI::enter_prog()+0x5e>
     520:	e0 9a       	sbi	0x1c, 0	; 28
     522:	e1 9a       	sbi	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:425
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     524:	c1 e0       	ldi	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:426
    UPDI_CONTROL |= _BV(UPDI::UPDI_PROG_bp);
     526:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:428
  }
  return true;
     528:	cf 91       	pop	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:429
}
     52a:	08 95       	ret

0000052c <HV_Pulse()>:
_Z8HV_Pulsev():
     52c:	80 e3       	ldi	r24, 0x30	; 48
     52e:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <UPDI::nvmprog_key+0x7f6f5f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:200
/*
 * HVチャージポンプ駆動制御
 */

void TIM::HV_Pulse_ON (void) {
  TCA0_SPLIT_CTRLB = TCA_SPLIT_HCMP0EN_bm | TCA_SPLIT_HCMP1EN_bm;
     532:	21 9a       	sbi	0x04, 1	; 4
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:283
/*
 * HVパルス印加
 */
void HV_Pulse (void) {
  TIM::HV_Pulse_ON();
  openDrainWrite(TRST_PIN, LOW);
     534:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     536:	97 e0       	ldi	r25, 0x07	; 7
     538:	01 97       	sbiw	r24, 0x01	; 1
     53a:	f1 f7       	brne	.-4      	; 0x538 <HV_Pulse()+0xc>
     53c:	00 c0       	rjmp	.+0      	; 0x53e <HV_Pulse()+0x12>
     53e:	00 00       	nop
_Z8HV_Pulsev():
     540:	21 98       	cbi	0x04, 1	; 4
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:285
  delay_micros(800);
  openDrainWrite(TRST_PIN, HIGH);
     542:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     544:	97 e0       	ldi	r25, 0x07	; 7
     546:	01 97       	sbiw	r24, 0x01	; 1
     548:	f1 f7       	brne	.-4      	; 0x546 <HV_Pulse()+0x1a>
     54a:	00 c0       	rjmp	.+0      	; 0x54c <HV_Pulse()+0x20>
     54c:	00 00       	nop
_Z8HV_Pulsev():
     54e:	ee 9b       	sbis	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:287
  delay_micros(800);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     550:	1b c0       	rjmp	.+54     	; 0x588 <HV_Pulse()+0x5c>
     552:	2d 9a       	sbi	0x05, 5	; 5
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:288
    digitalWrite(HV8_PIN, HIGH);
     554:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     556:	97 e0       	ldi	r25, 0x07	; 7
     558:	01 97       	sbiw	r24, 0x01	; 1
     55a:	f1 f7       	brne	.-4      	; 0x558 <HV_Pulse()+0x2c>
     55c:	00 c0       	rjmp	.+0      	; 0x55e <HV_Pulse()+0x32>
     55e:	00 00       	nop
_Z8HV_Pulsev():
     560:	2d 98       	cbi	0x05, 5	; 5
HV_Pulse_OFF():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:204
}

void TIM::HV_Pulse_OFF (void) {
  TCA0_SPLIT_CTRLB = 0;
     562:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <UPDI::nvmprog_key+0x7f6f5f>
_Z8HV_Pulsev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:298
    digitalWrite(HV12_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
  }
  TIM::HV_Pulse_OFF();
  UPDI_USART.BAUD = UPDI_BAUD_SHORT_BREAK;
     566:	88 ee       	ldi	r24, 0xE8	; 232
     568:	93 e0       	ldi	r25, 0x03	; 3
     56a:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6d66>
     56e:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6d67>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:299
  UPDI::SEND(UPDI::UPDI_NOP);
     572:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:300
  UPDI_USART.BAUD = UPDI_BAUD_CALC;
     574:	d7 dd       	rcall	.-1106   	; 0x124 <UPDI::SEND(unsigned char)>
     576:	80 eb       	ldi	r24, 0xB0	; 176
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6d66>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:301
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERHV_bp);
     57e:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6d67>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:303
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_CLKU_bp);
}
     582:	e3 9a       	sbi	0x1c, 3	; 28
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     584:	e7 98       	cbi	0x1c, 7	; 28
     586:	08 95       	ret
     588:	0e 9a       	sbi	0x01, 6	; 1
delay_micros():
     58a:	8f ec       	ldi	r24, 0xCF	; 207
     58c:	97 e0       	ldi	r25, 0x07	; 7
     58e:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:295
    digitalWrite(HV8_PIN, LOW);
  }
  else {
    digitalWrite(HV12_PIN, HIGH);
    delay_micros(800);
    digitalWrite(HV12_PIN, LOW);
     590:	f1 f7       	brne	.-4      	; 0x58e <HV_Pulse()+0x62>
     592:	00 c0       	rjmp	.+0      	; 0x594 <HV_Pulse()+0x68>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:340

/*
 * UPDI制御開始
 */

bool UPDI::enter_updi (bool skip) {
     594:	00 00       	nop
_Z8HV_Pulsev():
     596:	0e 98       	cbi	0x01, 6	; 1
     598:	e4 cf       	rjmp	.-56     	; 0x562 <HV_Pulse()+0x36>

0000059a <UPDI::enter_updi(bool)>:
_ZN4UPDI10enter_updiEb():
     59a:	0f 93       	push	r16
     59c:	1f 93       	push	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:344
  static uint8_t set_ptr[] = { UPDI::UPDI_SYNCH, UPDI::UPDI_SIB_128 };
  uint8_t* _p = &JTAG2::packet.body[4];
  size_t _len = 16;
  bool hvol = SYS::get_vcc() >= 4250;
     59e:	cf 93       	push	r28
     5a0:	df 93       	push	r29
     5a2:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:345
  if (!skip) {
     5a4:	c4 de       	rcall	.-632    	; 0x32e <SYS::get_vcc()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:347
    /* HV制御強制許可 */
    if (bit_is_set(UPDI_CONTROL, UPDI_FCHV_bp)) {
     5a6:	8c 01       	movw	r16, r24
     5a8:	c1 11       	cpse	r28, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:348
      HV_Pulse();
     5aa:	25 c0       	rjmp	.+74     	; 0x5f6 <UPDI::enter_updi(bool)+0x5c>
     5ac:	e4 9b       	sbis	0x1c, 4	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:351

      /* send nvmprog_key */
      if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     5ae:	3e c0       	rjmp	.+124    	; 0x62c <UPDI::enter_updi(bool)+0x92>
     5b0:	bd df       	rcall	.-134    	; 0x52c <HV_Pulse()>
     5b2:	6a e0       	ldi	r22, 0x0A	; 10
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	82 ea       	ldi	r24, 0xA2	; 162
     5b8:	9a e9       	ldi	r25, 0x9A	; 154
     5ba:	cc dd       	rcall	.-1128   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:394
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
        break;
      }
      default : {
        return false;
     5bc:	81 11       	cpse	r24, r1
     5be:	02 c0       	rjmp	.+4      	; 0x5c4 <UPDI::enter_updi(bool)+0x2a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:354

      /* send nvmprog_key */
      if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;

      /* restart target : change mode */
      if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     5c0:	80 e0       	ldi	r24, 0x00	; 0
     5c2:	6b c0       	rjmp	.+214    	; 0x69a <UPDI::enter_updi(bool)+0x100>
     5c4:	81 e0       	ldi	r24, 0x01	; 1
     5c6:	e6 dd       	rcall	.-1076   	; 0x194 <UPDI::updi_reset(bool)>
     5c8:	88 23       	and	r24, r24
     5ca:	d1 f3       	breq	.-12     	; 0x5c0 <UPDI::enter_updi(bool)+0x26>
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	e2 dd       	rcall	.-1084   	; 0x194 <UPDI::updi_reset(bool)>
     5d0:	88 23       	and	r24, r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:40
  }
}

void delay_millis (uint32_t _ms) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000L) * _ms);
     5d2:	b1 f3       	breq	.-20     	; 0x5c0 <UPDI::enter_updi(bool)+0x26>
delay_millis():
     5d4:	2f e3       	ldi	r18, 0x3F	; 63
     5d6:	8d e0       	ldi	r24, 0x0D	; 13
     5d8:	93 e0       	ldi	r25, 0x03	; 3
     5da:	21 50       	subi	r18, 0x01	; 1
     5dc:	80 40       	sbci	r24, 0x00	; 0
     5de:	90 40       	sbci	r25, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
static __inline__ __attribute__((__always_inline__)) void delay_micros (uint32_t _us);
static __inline__ __attribute__((__always_inline__)) void delay_millis (uint32_t _ms);

void delay_micros (uint32_t _us) {
  if (F_CPU >= 1000000L) {
    __builtin_avr_delay_cycles((F_CPU / 1000000L) * _us);
     5e0:	e1 f7       	brne	.-8      	; 0x5da <UPDI::enter_updi(bool)+0x40>
     5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <UPDI::enter_updi(bool)+0x4a>
     5e4:	00 00       	nop
delay_micros():
     5e6:	26 ea       	ldi	r18, 0xA6	; 166
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:358

      /* wait enable : chip erase mode success */
      delay_millis(100);
      do { delay_micros(50); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
     5e8:	2a 95       	dec	r18
     5ea:	f1 f7       	brne	.-4      	; 0x5e8 <UPDI::enter_updi(bool)+0x4e>
     5ec:	00 c0       	rjmp	.+0      	; 0x5ee <UPDI::enter_updi(bool)+0x54>
_ZN4UPDI10enter_updiEb():
     5ee:	80 e2       	ldi	r24, 0x20	; 32
     5f0:	34 de       	rcall	.-920    	; 0x25a <UPDI::is_sys_stat(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:363
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
     5f2:	81 11       	cpse	r24, r1
     5f4:	f8 cf       	rjmp	.-16     	; 0x5e6 <UPDI::enter_updi(bool)+0x4c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:364
    if (hvol && !UPDI::set_cs_asi_ctra(UPDI::UPDI_SET_UPDICLKSEL_8M)) return false;
     5f6:	e0 99       	sbic	0x1c, 0	; 28
     5f8:	4c c0       	rjmp	.+152    	; 0x692 <UPDI::enter_updi(bool)+0xf8>
     5fa:	0a 39       	cpi	r16, 0x9A	; 154
     5fc:	80 e1       	ldi	r24, 0x10	; 16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:224
  set_ptr[1] = UPDI::UPDI_STCS | code;
  set_ptr[2] = data;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
     5fe:	18 07       	cpc	r17, r24
     600:	b8 f4       	brcc	.+46     	; 0x630 <UPDI::enter_updi(bool)+0x96>
set_cs_ctra():
     602:	66 e0       	ldi	r22, 0x06	; 6
     604:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:365
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    if (hvol && !UPDI::set_cs_asi_ctra(UPDI::UPDI_SET_UPDICLKSEL_8M)) return false;
    if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;
     606:	bd dd       	rcall	.-1158   	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_updiEb():
     608:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:366
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
     60a:	d1 f2       	breq	.-76     	; 0x5c0 <UPDI::enter_updi(bool)+0x26>
     60c:	62 e0       	ldi	r22, 0x02	; 2
     60e:	70 e0       	ldi	r23, 0x00	; 0
     610:	81 e2       	ldi	r24, 0x21	; 33
     612:	98 e3       	ldi	r25, 0x38	; 56
     614:	9f dd       	rcall	.-1218   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     616:	88 23       	and	r24, r24
     618:	99 f2       	breq	.-90     	; 0x5c0 <UPDI::enter_updi(bool)+0x26>
     61a:	c3 e7       	ldi	r28, 0x73	; 115
     61c:	d8 e3       	ldi	r29, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:367
    while (_len--) *_p++ = UPDI::RECV();
     61e:	98 e3       	ldi	r25, 0x38	; 56
     620:	c3 38       	cpi	r28, 0x83	; 131
     622:	d9 07       	cpc	r29, r25
     624:	59 f0       	breq	.+22     	; 0x63c <UPDI::enter_updi(bool)+0xa2>
     626:	72 dd       	rcall	.-1308   	; 0x10c <UPDI::RECV()>
     628:	89 93       	st	Y+, r24
     62a:	f9 cf       	rjmp	.-14     	; 0x61e <UPDI::enter_updi(bool)+0x84>
     62c:	f8 dd       	rcall	.-1040   	; 0x21e <UPDI::BREAK()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:361
      /* wait enable : chip erase mode success */
      delay_millis(100);
      do { delay_micros(50); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
    }
    else
      UPDI::BREAK();
     62e:	e3 cf       	rjmp	.-58     	; 0x5f6 <UPDI::enter_updi(bool)+0x5c>
set_cs_asi_ctra():
     630:	62 e0       	ldi	r22, 0x02	; 2
     632:	89 e0       	ldi	r24, 0x09	; 9
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:227
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
}
inline bool UPDI::set_cs_asi_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_CTRLA, data);
     634:	a6 dd       	rcall	.-1204   	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>
_ZN4UPDI10enter_updiEb():
     636:	81 11       	cpse	r24, r1
     638:	e4 cf       	rjmp	.-56     	; 0x602 <UPDI::enter_updi(bool)+0x68>
     63a:	c2 cf       	rjmp	.-124    	; 0x5c0 <UPDI::enter_updi(bool)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:364
    }
    else
      UPDI::BREAK();
  }
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    if (hvol && !UPDI::set_cs_asi_ctra(UPDI::UPDI_SET_UPDICLKSEL_8M)) return false;
     63c:	80 91 73 38 	lds	r24, 0x3873	; 0x803873 <JTAG2::packet+0xc>
     640:	81 34       	cpi	r24, 0x41	; 65
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:368
    if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
    while (_len--) *_p++ = UPDI::RECV();
    switch (JTAG2::packet.body[4]) {
     642:	21 f0       	breq	.+8      	; 0x64c <UPDI::enter_updi(bool)+0xb2>
     644:	70 f4       	brcc	.+28     	; 0x662 <UPDI::enter_updi(bool)+0xc8>
     646:	80 32       	cpi	r24, 0x20	; 32
     648:	09 f0       	breq	.+2      	; 0x64c <UPDI::enter_updi(bool)+0xb2>
     64a:	ba cf       	rjmp	.-140    	; 0x5c0 <UPDI::enter_updi(bool)+0x26>
     64c:	80 91 7d 38 	lds	r24, 0x387D	; 0x80387d <JTAG2::packet+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:385
      case ' ' :
      case 'A' : {              // 'AVR_Dx' series
        /* AVR Dx SIB = 'AVR     P:2D:1-3' */
        /* AVR Ex SIB = 'AVR     P:3D:1-3' */
        /* AVR DA SIB = '    AVR P:2D:1-3' (最初期ロット) */
        if (JTAG2::packet.body[14] == '3') {
     650:	83 33       	cpi	r24, 0x33	; 51
     652:	09 f4       	brne	.+2      	; 0x656 <UPDI::enter_updi(bool)+0xbc>
     654:	ef 9a       	sbi	0x1d, 7	; 29
     656:	ee 9a       	sbi	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:387
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
     658:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:389
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
     65a:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:390
        NVM::nvm_flash_offset = 0x800000;
     65c:	a0 e8       	ldi	r26, 0x80	; 128
     65e:	b0 e0       	ldi	r27, 0x00	; 0
     660:	0f c0       	rjmp	.+30     	; 0x680 <UPDI::enter_updi(bool)+0xe6>
     662:	8d 36       	cpi	r24, 0x6D	; 109
     664:	41 f0       	breq	.+16     	; 0x676 <UPDI::enter_updi(bool)+0xdc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:368
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    if (hvol && !UPDI::set_cs_asi_ctra(UPDI::UPDI_SET_UPDICLKSEL_8M)) return false;
    if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
    while (_len--) *_p++ = UPDI::RECV();
    switch (JTAG2::packet.body[4]) {
     666:	84 37       	cpi	r24, 0x74	; 116
     668:	09 f0       	breq	.+2      	; 0x66c <UPDI::enter_updi(bool)+0xd2>
     66a:	aa cf       	rjmp	.-172    	; 0x5c0 <UPDI::enter_updi(bool)+0x26>
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	90 e8       	ldi	r25, 0x80	; 128
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:377
        NVM::nvm_flash_offset = 0x4000;
        break;
      }
      case 't' : {              // 'tinyAVR' series
        /* tinyAVR SIB = 'tinyAVR P:0D:1-3' */
        NVM::nvm_flash_offset = 0x8000;
     670:	a0 e0       	ldi	r26, 0x00	; 0
     672:	b0 e0       	ldi	r27, 0x00	; 0
     674:	05 c0       	rjmp	.+10     	; 0x680 <UPDI::enter_updi(bool)+0xe6>
     676:	ed 9a       	sbi	0x1d, 5	; 29
     678:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:371
    if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) return false;
    while (_len--) *_p++ = UPDI::RECV();
    switch (JTAG2::packet.body[4]) {
      case 'm' : {              // 'megaAVR' series
        /* megaAVR SIB = 'megaAVR P:0D:1-3' */
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_LOWF_bp);
     67a:	90 e4       	ldi	r25, 0x40	; 64
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:372
        NVM::nvm_flash_offset = 0x4000;
     67c:	a0 e0       	ldi	r26, 0x00	; 0
     67e:	b0 e0       	ldi	r27, 0x00	; 0
     680:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:390
        if (JTAG2::packet.body[14] == '3') {
          // 'AVR_Ex' series
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN3_bp);
        }
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
        NVM::nvm_flash_offset = 0x800000;
     684:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
     688:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
     68c:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
     690:	e0 9a       	sbi	0x1c, 0	; 28
     692:	0a 39       	cpi	r16, 0x9A	; 154
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:397
      }
      default : {
        return false;
      }
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
     694:	10 41       	sbci	r17, 0x10	; 16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:399
  }
  if (hvol && (UPDI::get_cs_asi_ctra() & UPDI::UPDI_SET_UPDICLKSEL_bm) 
     696:	30 f4       	brcc	.+12     	; 0x6a4 <UPDI::enter_updi(bool)+0x10a>
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:405
                                      == UPDI::UPDI_SET_UPDICLKSEL_8M) {
    UPDI_CONTROL |= _BV(UPDI::UPDI_CLKU_bp);
    UPDI_USART.BAUD = UPDI_BAUD_CALC >> 1;
  }
  return true;
}
     69c:	cf 91       	pop	r28
     69e:	1f 91       	pop	r17
     6a0:	0f 91       	pop	r16
     6a2:	08 95       	ret
get_cs_asi_ctra():
     6a4:	89 e0       	ldi	r24, 0x09	; 9
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:230
}
inline bool UPDI::set_cs_asi_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_CTRLA, data);
}
inline uint8_t UPDI::get_cs_asi_ctra (void) {
  return UPDI::get_cs_stat(UPDI::UPDI_CS_ASI_CTRLA);
     6a6:	cc dd       	rcall	.-1128   	; 0x240 <UPDI::get_cs_stat(unsigned char)>
_ZN4UPDI10enter_updiEb():
     6a8:	83 70       	andi	r24, 0x03	; 3
     6aa:	82 30       	cpi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:399
        return false;
      }
    }
    UPDI_CONTROL |= _BV(UPDI::UPDI_INFO_bp);
  }
  if (hvol && (UPDI::get_cs_asi_ctra() & UPDI::UPDI_SET_UPDICLKSEL_bm) 
     6ac:	a9 f7       	brne	.-22     	; 0x698 <UPDI::enter_updi(bool)+0xfe>
     6ae:	e7 9a       	sbi	0x1c, 7	; 28
     6b0:	88 e5       	ldi	r24, 0x58	; 88
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:401
                                      == UPDI::UPDI_SET_UPDICLKSEL_8M) {
    UPDI_CONTROL |= _BV(UPDI::UPDI_CLKU_bp);
     6b2:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:402
    UPDI_USART.BAUD = UPDI_BAUD_CALC >> 1;
     6b4:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6d66>
     6b8:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6d67>
     6bc:	ed cf       	rjmp	.-38     	; 0x698 <UPDI::enter_updi(bool)+0xfe>

000006be <UPDI::updi_activate()>:
_ZN4UPDI13updi_activateEv():
     6be:	cf 93       	push	r28
     6c0:	df 93       	push	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:435

/*
 * UPDI許認可
 */

bool UPDI::updi_activate (void) {
     6c2:	1f 92       	push	r1
     6c4:	cd b7       	in	r28, 0x3d	; 61
     6c6:	de b7       	in	r29, 0x3e	; 62
     6c8:	84 e0       	ldi	r24, 0x04	; 4
     6ca:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:436
  volatile uint8_t count = 4;
     6cc:	89 81       	ldd	r24, Y+1	; 0x01
     6ce:	81 50       	subi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:437
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
     6d0:	89 83       	std	Y+1, r24	; 0x01
     6d2:	88 23       	and	r24, r24
     6d4:	11 f0       	breq	.+4      	; 0x6da <UPDI::updi_activate()+0x1c>
     6d6:	e1 9b       	sbis	0x1c, 1	; 28
     6d8:	07 c0       	rjmp	.+14     	; 0x6e8 <UPDI::updi_activate()+0x2a>
     6da:	8c b3       	in	r24, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:448

    /* 2周目以降は JPショートならHV制御強制を許可 */
    if (count < 2 && !digitalRead(JP_SENSE_PIN))
      UPDI_CONTROL |= _BV(UPDI::UPDI_FCHV_bp);
  }
  return bit_is_set(UPDI_CONTROL, UPDI_PROG_bp);
     6dc:	86 95       	lsr	r24
     6de:	81 70       	andi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:449
}
     6e0:	0f 90       	pop	r0
     6e2:	df 91       	pop	r29
     6e4:	cf 91       	pop	r28
     6e6:	08 95       	ret
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:438
 */

bool UPDI::updi_activate (void) {
  volatile uint8_t count = 4;
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
    if (setjmp(TIM::CONTEXT) == 0) {
     6e8:	88 e3       	ldi	r24, 0x38	; 56
     6ea:	98 e3       	ldi	r25, 0x38	; 56
     6ec:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <setjmp>
     6f0:	89 2b       	or	r24, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:442
      TIM::Timeout_Start(150);
      UPDI::enter_updi(false) && UPDI::enter_prog();
    }
    TIM::Timeout_Stop();
     6f2:	41 f0       	breq	.+16     	; 0x704 <UPDI::updi_activate()+0x46>
     6f4:	09 de       	rcall	.-1006   	; 0x308 <TIM::Timeout_Stop()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:445

    /* 2周目以降は JPショートならHV制御強制を許可 */
    if (count < 2 && !digitalRead(JP_SENSE_PIN))
     6f6:	89 81       	ldd	r24, Y+1	; 0x01
     6f8:	82 30       	cpi	r24, 0x02	; 2
     6fa:	40 f7       	brcc	.-48     	; 0x6cc <UPDI::updi_activate()+0xe>
     6fc:	53 99       	sbic	0x0a, 3	; 10
     6fe:	e6 cf       	rjmp	.-52     	; 0x6cc <UPDI::updi_activate()+0xe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:446
      UPDI_CONTROL |= _BV(UPDI::UPDI_FCHV_bp);
     700:	e4 9a       	sbi	0x1c, 4	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:127
/*
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     702:	e4 cf       	rjmp	.-56     	; 0x6cc <UPDI::updi_activate()+0xe>
Timeout_Start():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:128
    TCB0_CNT = 0;
     704:	8f b7       	in	r24, 0x3f	; 63
__iCliRetVal():
     706:	f8 94       	cli
Timeout_Start():
     708:	ea e8       	ldi	r30, 0x8A	; 138
     70a:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:129
    TCB0_CCMP = _ms >> 2;
     70c:	10 82       	st	Z, r1
     70e:	11 82       	std	Z+1, r1	; 0x01
     710:	25 e2       	ldi	r18, 0x25	; 37
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	ec e8       	ldi	r30, 0x8C	; 140
     716:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:130
    TCB0_INTCTRL = TCB_CAPT_bm;
     718:	20 83       	st	Z, r18
     71a:	31 83       	std	Z+1, r19	; 0x01
     71c:	21 e0       	ldi	r18, 0x01	; 1
     71e:	e5 e8       	ldi	r30, 0x85	; 133
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:131
    TCB0_INTFLAGS = TCB_CAPT_bm;
     720:	fa e0       	ldi	r31, 0x0A	; 10
     722:	20 83       	st	Z, r18
     724:	e6 e8       	ldi	r30, 0x86	; 134
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:132
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     726:	fa e0       	ldi	r31, 0x0A	; 10
     728:	20 83       	st	Z, r18
     72a:	2f e0       	ldi	r18, 0x0F	; 15
     72c:	e0 e8       	ldi	r30, 0x80	; 128
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
     72e:	fa e0       	ldi	r31, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:440
bool UPDI::updi_activate (void) {
  volatile uint8_t count = 4;
  while (--count && bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
    if (setjmp(TIM::CONTEXT) == 0) {
      TIM::Timeout_Start(150);
      UPDI::enter_updi(false) && UPDI::enter_prog();
     730:	20 83       	st	Z, r18
__iRestore():
     732:	8f bf       	out	0x3f, r24	; 63
_ZN4UPDI13updi_activateEv():
     734:	80 e0       	ldi	r24, 0x00	; 0
     736:	31 df       	rcall	.-414    	; 0x59a <UPDI::enter_updi(bool)>
     738:	88 23       	and	r24, r24
     73a:	e1 f2       	breq	.-72     	; 0x6f4 <UPDI::updi_activate()+0x36>
     73c:	ba de       	rcall	.-652    	; 0x4b2 <UPDI::enter_prog()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:351
  return UPDI_LASTL;
}

/* NVMCTRL v3 */
uint8_t NVM::nvm_wait_v3 (void) {
  while (UPDI::ld8(NVM::NVMCTRL_V3_REG_STATUS) & 3) delay_micros(50);
     73e:	da cf       	rjmp	.-76     	; 0x6f4 <UPDI::updi_activate()+0x36>

00000740 <NVM::nvm_wait_v3()>:
_ZN3NVM11nvm_wait_v3Ev():
     740:	66 e0       	ldi	r22, 0x06	; 6
     742:	70 e1       	ldi	r23, 0x10	; 16
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	93 dd       	rcall	.-1242   	; 0x270 <UPDI::ld8(unsigned long)>
     74a:	83 70       	andi	r24, 0x03	; 3
     74c:	29 f0       	breq	.+10     	; 0x758 <NVM::nvm_wait_v3()+0x18>
delay_micros():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     74e:	86 ea       	ldi	r24, 0xA6	; 166
     750:	8a 95       	dec	r24
     752:	f1 f7       	brne	.-4      	; 0x750 <NVM::nvm_wait_v3()+0x10>
     754:	00 c0       	rjmp	.+0      	; 0x756 <NVM::nvm_wait_v3()+0x16>
     756:	f4 cf       	rjmp	.-24     	; 0x740 <NVM::nvm_wait_v3()>
_ZN3NVM11nvm_wait_v3Ev():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:352
  return UPDI_LASTL;
     758:	8e b3       	in	r24, 0x1e	; 30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:378
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
}

/* NVMCTRL v3 */
bool NVM::nvm_ctrl_v3 (uint8_t nvmcmd) {
     75a:	08 95       	ret

0000075c <NVM::nvm_ctrl_v3(unsigned char)>:
_ZN3NVM11nvm_ctrl_v3Eh():
     75c:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:379
  NVM::nvm_wait_v3();
     75e:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:380
  return nvm_ctrl_change(nvmcmd);
     760:	ef df       	rcall	.-34     	; 0x740 <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:381
}
     762:	8c 2f       	mov	r24, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:380
}

/* NVMCTRL v3 */
bool NVM::nvm_ctrl_v3 (uint8_t nvmcmd) {
  NVM::nvm_wait_v3();
  return nvm_ctrl_change(nvmcmd);
     764:	cf 91       	pop	r28
     766:	0b ce       	rjmp	.-1002   	; 0x37e <nvm_ctrl_change(unsigned char)>

00000768 <NVM::write_flash_v3(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v3Emj():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:559

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_flash_v3 (uint32_t start_addr, size_t byte_count) {
     768:	cf 92       	push	r12
     76a:	df 92       	push	r13
     76c:	ef 92       	push	r14
     76e:	ff 92       	push	r15
     770:	0f 93       	push	r16
     772:	1f 93       	push	r17
     774:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:560
  byte_count >>= 1;
     776:	df 93       	push	r29
     778:	ea 01       	movw	r28, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:561
  if (byte_count == 0 || byte_count > 256) return false;
     77a:	d6 95       	lsr	r29
     77c:	c7 95       	ror	r28
     77e:	9e 01       	movw	r18, r28
     780:	21 50       	subi	r18, 0x01	; 1
     782:	31 09       	sbc	r19, r1
     784:	2f 3f       	cpi	r18, 0xFF	; 255
     786:	31 05       	cpc	r19, r1
     788:	11 f0       	breq	.+4      	; 0x78e <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
     78a:	08 f0       	brcs	.+2      	; 0x78e <NVM::write_flash_v3(unsigned long, unsigned int)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:566

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     78c:	5d c0       	rjmp	.+186    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:571
    NVM::nvm_wait_v3();
    if (!UPDI::st8(start_addr, 0xFF)) return false;
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
  }
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPBCLR)) return false;
     78e:	6b 01       	movw	r12, r22
     790:	7c 01       	movw	r14, r24
     792:	e2 9b       	sbis	0x1c, 2	; 28
     794:	44 c0       	rjmp	.+136    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     796:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:574

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     798:	e1 df       	rcall	.-62     	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
     79a:	88 23       	and	r24, r24
     79c:	09 f4       	brne	.+2      	; 0x7a0 <NVM::write_flash_v3(unsigned long, unsigned int)+0x38>
     79e:	54 c0       	rjmp	.+168    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     7a0:	c0 92 32 38 	sts	0x3832, r12	; 0x803832 <NVM::set_ptr+0x2>
     7a4:	d0 92 33 38 	sts	0x3833, r13	; 0x803833 <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:575
  set_repeat_rsd[5] = byte_count - 1;
     7a8:	e0 92 34 38 	sts	0x3834, r14	; 0x803834 <NVM::set_ptr+0x4>
     7ac:	f0 92 35 38 	sts	0x3835, r15	; 0x803835 <NVM::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:576
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     7b0:	8c 2f       	mov	r24, r28
     7b2:	81 50       	subi	r24, 0x01	; 1
     7b4:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat_rsd+0x5>
     7b8:	65 e0       	ldi	r22, 0x05	; 5
     7ba:	70 e0       	ldi	r23, 0x00	; 0
     7bc:	80 e3       	ldi	r24, 0x30	; 48
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:577
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     7be:	98 e3       	ldi	r25, 0x38	; 56
     7c0:	c9 dc       	rcall	.-1646   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     7c2:	88 23       	and	r24, r24
     7c4:	09 f4       	brne	.+2      	; 0x7c8 <NVM::write_flash_v3(unsigned long, unsigned int)+0x60>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:578
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     7c6:	40 c0       	rjmp	.+128    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     7c8:	a1 dc       	rcall	.-1726   	; 0x10c <UPDI::RECV()>
     7ca:	80 34       	cpi	r24, 0x40	; 64
     7cc:	09 f0       	breq	.+2      	; 0x7d0 <NVM::write_flash_v3(unsigned long, unsigned int)+0x68>
     7ce:	3c c0       	rjmp	.+120    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     7d0:	68 e0       	ldi	r22, 0x08	; 8
     7d2:	70 e0       	ldi	r23, 0x00	; 0
     7d4:	83 e2       	ldi	r24, 0x23	; 35
     7d6:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:583

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     7d8:	bd dc       	rcall	.-1670   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     7da:	88 23       	and	r24, r24
     7dc:	a9 f1       	breq	.+106    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     7de:	07 e6       	ldi	r16, 0x67	; 103
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:584
    UPDI::SEND(*p++);
     7e0:	18 e3       	ldi	r17, 0x38	; 56
     7e2:	f8 01       	movw	r30, r16
     7e4:	82 89       	ldd	r24, Z+18	; 0x12
     7e6:	9e dc       	rcall	.-1732   	; 0x124 <UPDI::SEND(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:585
  } while (--byte_count);
     7e8:	f8 01       	movw	r30, r16
     7ea:	83 89       	ldd	r24, Z+19	; 0x13
     7ec:	9b dc       	rcall	.-1738   	; 0x124 <UPDI::SEND(unsigned char)>
     7ee:	21 97       	sbiw	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:224
  set_ptr[1] = UPDI::UPDI_STCS | code;
  set_ptr[2] = data;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
     7f0:	0e 5f       	subi	r16, 0xFE	; 254
     7f2:	1f 4f       	sbci	r17, 0xFF	; 255
     7f4:	20 97       	sbiw	r28, 0x00	; 0
     7f6:	a9 f7       	brne	.-22     	; 0x7e2 <NVM::write_flash_v3(unsigned long, unsigned int)+0x7a>
set_cs_ctra():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:589
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;
     7f8:	66 e0       	ldi	r22, 0x06	; 6
     7fa:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:591

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW)) return false;
     7fc:	c2 dc       	rcall	.-1660   	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>
_ZN3NVM14write_flash_v3Emj():
     7fe:	88 23       	and	r24, r24
     800:	19 f1       	breq	.+70     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     802:	84 e0       	ldi	r24, 0x04	; 4
     804:	ab df       	rcall	.-170    	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:592
  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD);
     806:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:593
}
     808:	f9 f0       	breq	.+62     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	1f 91       	pop	r17
     812:	0f 91       	pop	r16
     814:	ff 90       	pop	r15
     816:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:592

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW)) return false;
  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD);
     818:	df 90       	pop	r13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:566
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     81a:	cf 90       	pop	r12
     81c:	9f cf       	rjmp	.-194    	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
     81e:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     822:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     826:	01 97       	sbiw	r24, 0x01	; 1
     828:	86 23       	and	r24, r22
     82a:	9d 21       	and	r25, r13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:567
    NVM::nvm_wait_v3();
     82c:	89 2b       	or	r24, r25
     82e:	09 f0       	breq	.+2      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:568
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     830:	b2 cf       	rjmp	.-156    	; 0x796 <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     832:	86 df       	rcall	.-244    	; 0x740 <NVM::nvm_wait_v3()>
     834:	4f ef       	ldi	r20, 0xFF	; 255
     836:	c7 01       	movw	r24, r14
     838:	b6 01       	movw	r22, r12
     83a:	b1 dc       	rcall	.-1694   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
     83c:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:569
    if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
     83e:	21 f0       	breq	.+8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     840:	88 e0       	ldi	r24, 0x08	; 8
     842:	8c df       	rcall	.-232    	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
     844:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:593
  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPW)) return false;
  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD);
}
     846:	a7 cf       	rjmp	.-178    	; 0x796 <NVM::write_flash_v3(unsigned long, unsigned int)+0x2e>
     848:	80 e0       	ldi	r24, 0x00	; 0
     84a:	df 91       	pop	r29
     84c:	cf 91       	pop	r28
     84e:	1f 91       	pop	r17
     850:	0f 91       	pop	r16
     852:	ff 90       	pop	r15
     854:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:345
 */

/* NVMCTRL v0 */
/* NVMCTRL v2 */
uint8_t NVM::nvm_wait (void) {
  while (UPDI::ld8(NVM::NVMCTRL_REG_STATUS) & 3) delay_micros(50);
     856:	df 90       	pop	r13
     858:	cf 90       	pop	r12
     85a:	08 95       	ret

0000085c <NVM::nvm_wait()>:
_ZN3NVM8nvm_waitEv():
     85c:	62 e0       	ldi	r22, 0x02	; 2
     85e:	70 e1       	ldi	r23, 0x10	; 16
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	90 e0       	ldi	r25, 0x00	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     864:	05 dd       	rcall	.-1526   	; 0x270 <UPDI::ld8(unsigned long)>
     866:	83 70       	andi	r24, 0x03	; 3
     868:	29 f0       	breq	.+10     	; 0x874 <NVM::nvm_wait()+0x18>
delay_micros():
     86a:	86 ea       	ldi	r24, 0xA6	; 166
     86c:	8a 95       	dec	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:346
  return UPDI_LASTL;
     86e:	f1 f7       	brne	.-4      	; 0x86c <NVM::nvm_wait()+0x10>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:347
}
     870:	00 c0       	rjmp	.+0      	; 0x872 <NVM::nvm_wait()+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:388
/*
 * FUSE書込
 */

/* NVMCTRL v0 */
bool NVM::write_fuse (uint16_t addr, uint8_t data) {
     872:	f4 cf       	rjmp	.-24     	; 0x85c <NVM::nvm_wait()>
_ZN3NVM8nvm_waitEv():
     874:	8e b3       	in	r24, 0x1e	; 30
     876:	08 95       	ret

00000878 <NVM::write_fuse(unsigned int, unsigned char)>:
_ZN3NVM10write_fuseEjh():
     878:	ef 92       	push	r14
     87a:	ff 92       	push	r15
     87c:	0f 93       	push	r16
     87e:	1f 93       	push	r17
     880:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:390
  fuse_packet_t fuse_packet;
  fuse_packet.data = data;
     882:	df 93       	push	r29
     884:	00 d0       	rcall	.+0      	; 0x886 <NVM::write_fuse(unsigned int, unsigned char)+0xe>
     886:	00 d0       	rcall	.+0      	; 0x888 <NVM::write_fuse(unsigned int, unsigned char)+0x10>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:391
  fuse_packet.addr = addr;
     888:	cd b7       	in	r28, 0x3d	; 61
     88a:	de b7       	in	r29, 0x3e	; 62
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:392
  NVM::nvm_wait();
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	69 83       	std	Y+1, r22	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:166
/*
 * 複バイト送信
 */

bool UPDI::sts8 (uint32_t addr, uint8_t *data, size_t len) {
  if (UPDI::send_repeat_header((UPDI::UPDI_ST | UPDI::UPDI_DATA1), addr, len)) {
     890:	7a 83       	std	Y+2, r23	; 0x02
     892:	8b 83       	std	Y+3, r24	; 0x03
     894:	9c 83       	std	Y+4, r25	; 0x04
     896:	e2 df       	rcall	.-60     	; 0x85c <NVM::nvm_wait()>
sts8():
     898:	24 e0       	ldi	r18, 0x04	; 4
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	46 e0       	ldi	r20, 0x06	; 6
     89e:	50 e1       	ldi	r21, 0x10	; 16
     8a0:	60 e0       	ldi	r22, 0x00	; 0
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	80 e6       	ldi	r24, 0x60	; 96
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:396
  if (!UPDI::sts8(NVM::NVMCTRL_REG_DATA,
    (uint8_t*)&fuse_packet, sizeof(fuse_packet))) return false;
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_WFU)) return false;
  return ((NVM::nvm_wait() & 7) == 0);
     8a6:	9c dc       	rcall	.-1736   	; 0x1e0 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     8a8:	81 11       	cpse	r24, r1
     8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <NVM::write_fuse(unsigned int, unsigned char)+0x38>
_ZN3NVM10write_fuseEjh():
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	1c c0       	rjmp	.+56     	; 0x8e8 <NVM::write_fuse(unsigned int, unsigned char)+0x70>
     8b0:	8e 01       	movw	r16, r28
     8b2:	0f 5f       	subi	r16, 0xFF	; 255
     8b4:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:168
    do {
      if (!UPDI::SEND(*data++)) break;
     8b6:	7e 01       	movw	r14, r28
     8b8:	85 e0       	ldi	r24, 0x05	; 5
     8ba:	e8 0e       	add	r14, r24
     8bc:	f1 1c       	adc	r15, r1
sts8():
     8be:	f8 01       	movw	r30, r16
     8c0:	81 91       	ld	r24, Z+
     8c2:	8f 01       	movw	r16, r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:169
      if (UPDI::UPDI_ACK != RECV()) break;
     8c4:	2f dc       	rcall	.-1954   	; 0x124 <UPDI::SEND(unsigned char)>
     8c6:	88 23       	and	r24, r24
     8c8:	89 f3       	breq	.-30     	; 0x8ac <NVM::write_fuse(unsigned int, unsigned char)+0x34>
     8ca:	20 dc       	rcall	.-1984   	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:170
    } while (--len);
     8cc:	80 34       	cpi	r24, 0x40	; 64
     8ce:	71 f7       	brne	.-36     	; 0x8ac <NVM::write_fuse(unsigned int, unsigned char)+0x34>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:395
  fuse_packet.data = data;
  fuse_packet.addr = addr;
  NVM::nvm_wait();
  if (!UPDI::sts8(NVM::NVMCTRL_REG_DATA,
    (uint8_t*)&fuse_packet, sizeof(fuse_packet))) return false;
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_WFU)) return false;
     8d0:	e0 16       	cp	r14, r16
     8d2:	f1 06       	cpc	r15, r17
     8d4:	a1 f7       	brne	.-24     	; 0x8be <NVM::write_fuse(unsigned int, unsigned char)+0x46>
_ZN3NVM10write_fuseEjh():
     8d6:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:396
  return ((NVM::nvm_wait() & 7) == 0);
     8d8:	4c dd       	rcall	.-1384   	; 0x372 <NVM::nvm_ctrl(unsigned char)>
     8da:	88 23       	and	r24, r24
     8dc:	39 f3       	breq	.-50     	; 0x8ac <NVM::write_fuse(unsigned int, unsigned char)+0x34>
     8de:	be df       	rcall	.-132    	; 0x85c <NVM::nvm_wait()>
     8e0:	98 2f       	mov	r25, r24
     8e2:	97 70       	andi	r25, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:397
}
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	11 f7       	brne	.-60     	; 0x8ac <NVM::write_fuse(unsigned int, unsigned char)+0x34>
     8e8:	24 96       	adiw	r28, 0x04	; 4
     8ea:	cd bf       	out	0x3d, r28	; 61
     8ec:	de bf       	out	0x3e, r29	; 62
     8ee:	df 91       	pop	r29
     8f0:	cf 91       	pop	r28
     8f2:	1f 91       	pop	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:372
  if (NVM::NVM_V2_CMD_NOCMD != nvmcmd) return NVM::nvm_ctrl(nvmcmd);
  return true;
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
     8f4:	0f 91       	pop	r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:373
  NVM::nvm_wait();
     8f6:	ff 90       	pop	r15
     8f8:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:374
  return nvm_ctrl_change(nvmcmd);
     8fa:	08 95       	ret

000008fc <NVM::nvm_ctrl_v2(unsigned char)>:
_ZN3NVM11nvm_ctrl_v2Eh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:375
}
     8fc:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:374
}

/* NVMCTRL v2 */
bool NVM::nvm_ctrl_v2 (uint8_t nvmcmd) {
  NVM::nvm_wait();
  return nvm_ctrl_change(nvmcmd);
     8fe:	c8 2f       	mov	r28, r24
     900:	ad df       	rcall	.-166    	; 0x85c <NVM::nvm_wait()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:524
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_flash_v2 (uint32_t start_addr, size_t byte_count) {
     902:	8c 2f       	mov	r24, r28
     904:	cf 91       	pop	r28
     906:	3b cd       	rjmp	.-1418   	; 0x37e <nvm_ctrl_change(unsigned char)>

00000908 <NVM::write_flash_v2(unsigned long, unsigned int)>:
_ZN3NVM14write_flash_v2Emj():
     908:	cf 92       	push	r12
     90a:	df 92       	push	r13
     90c:	ef 92       	push	r14
     90e:	ff 92       	push	r15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:525
  byte_count >>= 1;
     910:	0f 93       	push	r16
     912:	1f 93       	push	r17
     914:	cf 93       	push	r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:526
  if (byte_count == 0 || byte_count > 256) return false;
     916:	df 93       	push	r29
     918:	ea 01       	movw	r28, r20
     91a:	d6 95       	lsr	r29
     91c:	c7 95       	ror	r28
     91e:	9e 01       	movw	r18, r28
     920:	21 50       	subi	r18, 0x01	; 1
     922:	31 09       	sbc	r19, r1
     924:	2f 3f       	cpi	r18, 0xFF	; 255
     926:	31 05       	cpc	r19, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:531

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     928:	11 f0       	breq	.+4      	; 0x92e <NVM::write_flash_v2(unsigned long, unsigned int)+0x26>
     92a:	08 f0       	brcs	.+2      	; 0x92e <NVM::write_flash_v2(unsigned long, unsigned int)+0x26>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:535
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
    if (!UPDI::st8(start_addr, 0xFF)) return false;
  }
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLWR)) return false;
     92c:	58 c0       	rjmp	.+176    	; 0x9de <NVM::write_flash_v2(unsigned long, unsigned int)+0xd6>
     92e:	6b 01       	movw	r12, r22
     930:	7c 01       	movw	r14, r24
     932:	e2 9b       	sbis	0x1c, 2	; 28
     934:	40 c0       	rjmp	.+128    	; 0x9b6 <NVM::write_flash_v2(unsigned long, unsigned int)+0xae>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:538

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     936:	82 e0       	ldi	r24, 0x02	; 2
     938:	e1 df       	rcall	.-62     	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
     93a:	88 23       	and	r24, r24
     93c:	09 f4       	brne	.+2      	; 0x940 <NVM::write_flash_v2(unsigned long, unsigned int)+0x38>
     93e:	4f c0       	rjmp	.+158    	; 0x9de <NVM::write_flash_v2(unsigned long, unsigned int)+0xd6>
     940:	c0 92 32 38 	sts	0x3832, r12	; 0x803832 <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:539
  set_repeat_rsd[5] = byte_count - 1;
     944:	d0 92 33 38 	sts	0x3833, r13	; 0x803833 <NVM::set_ptr+0x3>
     948:	e0 92 34 38 	sts	0x3834, r14	; 0x803834 <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:540
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     94c:	f0 92 35 38 	sts	0x3835, r15	; 0x803835 <NVM::set_ptr+0x5>
     950:	8c 2f       	mov	r24, r28
     952:	81 50       	subi	r24, 0x01	; 1
     954:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat_rsd+0x5>
     958:	65 e0       	ldi	r22, 0x05	; 5
     95a:	70 e0       	ldi	r23, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:541
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     95c:	80 e3       	ldi	r24, 0x30	; 48
     95e:	98 e3       	ldi	r25, 0x38	; 56
     960:	f9 db       	rcall	.-2062   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     962:	88 23       	and	r24, r24
     964:	09 f4       	brne	.+2      	; 0x968 <NVM::write_flash_v2(unsigned long, unsigned int)+0x60>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:542
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     966:	3b c0       	rjmp	.+118    	; 0x9de <NVM::write_flash_v2(unsigned long, unsigned int)+0xd6>
     968:	d1 db       	rcall	.-2142   	; 0x10c <UPDI::RECV()>
     96a:	80 34       	cpi	r24, 0x40	; 64
     96c:	09 f0       	breq	.+2      	; 0x970 <NVM::write_flash_v2(unsigned long, unsigned int)+0x68>
     96e:	37 c0       	rjmp	.+110    	; 0x9de <NVM::write_flash_v2(unsigned long, unsigned int)+0xd6>
     970:	68 e0       	ldi	r22, 0x08	; 8
     972:	70 e0       	ldi	r23, 0x00	; 0
     974:	83 e2       	ldi	r24, 0x23	; 35
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:547

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     976:	98 e3       	ldi	r25, 0x38	; 56
     978:	ed db       	rcall	.-2086   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     97a:	88 23       	and	r24, r24
     97c:	81 f1       	breq	.+96     	; 0x9de <NVM::write_flash_v2(unsigned long, unsigned int)+0xd6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:548
    UPDI::SEND(*p++);
     97e:	07 e6       	ldi	r16, 0x67	; 103
     980:	18 e3       	ldi	r17, 0x38	; 56
     982:	f8 01       	movw	r30, r16
     984:	82 89       	ldd	r24, Z+18	; 0x12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:549
  } while (--byte_count);
     986:	ce db       	rcall	.-2148   	; 0x124 <UPDI::SEND(unsigned char)>
     988:	f8 01       	movw	r30, r16
     98a:	83 89       	ldd	r24, Z+19	; 0x13
     98c:	cb db       	rcall	.-2154   	; 0x124 <UPDI::SEND(unsigned char)>
     98e:	21 97       	sbiw	r28, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:224
  set_ptr[1] = UPDI::UPDI_STCS | code;
  set_ptr[2] = data;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
     990:	0e 5f       	subi	r16, 0xFE	; 254
     992:	1f 4f       	sbci	r17, 0xFF	; 255
     994:	20 97       	sbiw	r28, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:553
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;
     996:	a9 f7       	brne	.-22     	; 0x982 <NVM::write_flash_v2(unsigned long, unsigned int)+0x7a>
set_cs_ctra():
     998:	66 e0       	ldi	r22, 0x06	; 6
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:555

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     99a:	82 e0       	ldi	r24, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:556
}
     99c:	f2 db       	rcall	.-2076   	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>
_ZN3NVM14write_flash_v2Emj():
     99e:	88 23       	and	r24, r24
     9a0:	f1 f0       	breq	.+60     	; 0x9de <NVM::write_flash_v2(unsigned long, unsigned int)+0xd6>
     9a2:	80 e0       	ldi	r24, 0x00	; 0
     9a4:	df 91       	pop	r29
     9a6:	cf 91       	pop	r28
     9a8:	1f 91       	pop	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:555
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     9aa:	0f 91       	pop	r16
     9ac:	ff 90       	pop	r15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:531
  if (byte_count == 0 || byte_count > 256) return false;

  /* チップ消去していない場合はセクター消去 */
  /* ただしページ境界先頭がアドレスされた場合に限る */
  if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_ERFM_bp)
  && ((uint16_t)start_addr & (NVM::flash_page_size - 1)) == 0) {
     9ae:	ef 90       	pop	r14
     9b0:	df 90       	pop	r13
     9b2:	cf 90       	pop	r12
     9b4:	a3 cf       	rjmp	.-186    	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
     9b6:	80 91 55 38 	lds	r24, 0x3855	; 0x803855 <NVM::flash_page_size>
     9ba:	90 91 56 38 	lds	r25, 0x3856	; 0x803856 <NVM::flash_page_size+0x1>
     9be:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:532
    if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
     9c0:	86 23       	and	r24, r22
     9c2:	9d 21       	and	r25, r13
     9c4:	89 2b       	or	r24, r25
     9c6:	09 f0       	breq	.+2      	; 0x9ca <NVM::write_flash_v2(unsigned long, unsigned int)+0xc2>
     9c8:	b6 cf       	rjmp	.-148    	; 0x936 <NVM::write_flash_v2(unsigned long, unsigned int)+0x2e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:533
    if (!UPDI::st8(start_addr, 0xFF)) return false;
     9ca:	88 e0       	ldi	r24, 0x08	; 8
     9cc:	97 df       	rcall	.-210    	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
     9ce:	88 23       	and	r24, r24
     9d0:	31 f0       	breq	.+12     	; 0x9de <NVM::write_flash_v2(unsigned long, unsigned int)+0xd6>
     9d2:	4f ef       	ldi	r20, 0xFF	; 255
     9d4:	c7 01       	movw	r24, r14
     9d6:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:556

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;

  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}
     9d8:	e2 db       	rcall	.-2108   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
     9da:	81 11       	cpse	r24, r1
     9dc:	ac cf       	rjmp	.-168    	; 0x936 <NVM::write_flash_v2(unsigned long, unsigned int)+0x2e>
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	df 91       	pop	r29
     9e2:	cf 91       	pop	r28
     9e4:	1f 91       	pop	r17
     9e6:	0f 91       	pop	r16
     9e8:	ff 90       	pop	r15
     9ea:	ef 90       	pop	r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:409
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
  return _r;
}

/* NVMCTRL v3 */
bool NVM::write_fuse_v3 (uint16_t addr, uint8_t data) {
     9ec:	df 90       	pop	r13
     9ee:	cf 90       	pop	r12
     9f0:	08 95       	ret

000009f2 <NVM::write_fuse_v3(unsigned int, unsigned char)>:
_ZN3NVM13write_fuse_v3Ejh():
     9f2:	1f 93       	push	r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:410
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     9f4:	cf 93       	push	r28
     9f6:	df 93       	push	r29
     9f8:	ec 01       	movw	r28, r24
     9fa:	16 2f       	mov	r17, r22
     9fc:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:412
  if (!UPDI::st8(addr, data)) return false;
  bool _r = (NVM::nvm_wait_v3() & 0x70) == 0;
     9fe:	7e df       	rcall	.-260    	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
     a00:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:411
}

/* NVMCTRL v3 */
bool NVM::write_fuse_v3 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (!UPDI::st8(addr, data)) return false;
     a02:	02 c0       	rjmp	.+4      	; 0xa08 <NVM::write_fuse_v3(unsigned int, unsigned char)+0x16>
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	10 c0       	rjmp	.+32     	; 0xa28 <NVM::write_fuse_v3(unsigned int, unsigned char)+0x36>
     a08:	be 01       	movw	r22, r28
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	41 2f       	mov	r20, r17
     a10:	c6 db       	rcall	.-2164   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:412
  bool _r = (NVM::nvm_wait_v3() & 0x70) == 0;
     a12:	88 23       	and	r24, r24
     a14:	b9 f3       	breq	.-18     	; 0xa04 <NVM::write_fuse_v3(unsigned int, unsigned char)+0x12>
     a16:	94 de       	rcall	.-728    	; 0x740 <NVM::nvm_wait_v3()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:413
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW)) return false;
     a18:	c8 2f       	mov	r28, r24
     a1a:	85 e1       	ldi	r24, 0x15	; 21
     a1c:	9f de       	rcall	.-706    	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
     a1e:	88 23       	and	r24, r24
     a20:	89 f3       	breq	.-30     	; 0xa04 <NVM::write_fuse_v3(unsigned int, unsigned char)+0x12>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:412

/* NVMCTRL v3 */
bool NVM::write_fuse_v3 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
  if (!UPDI::st8(addr, data)) return false;
  bool _r = (NVM::nvm_wait_v3() & 0x70) == 0;
     a22:	c0 77       	andi	r28, 0x70	; 112
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	71 f7       	brne	.-36     	; 0xa04 <NVM::write_fuse_v3(unsigned int, unsigned char)+0x12>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:415
  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW)) return false;
  return _r;
}
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	1f 91       	pop	r17
     a2e:	08 95       	ret

00000a30 <NVM::write_fuse_v2(unsigned int, unsigned char)>:
_ZN3NVM13write_fuse_v2Ejh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:400
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_WFU)) return false;
  return ((NVM::nvm_wait() & 7) == 0);
}

/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
     a30:	1f 93       	push	r17
     a32:	cf 93       	push	r28
     a34:	df 93       	push	r29
     a36:	ec 01       	movw	r28, r24
     a38:	16 2f       	mov	r17, r22
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:401
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
     a3a:	83 e1       	ldi	r24, 0x13	; 19
     a3c:	5f df       	rcall	.-322    	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
     a3e:	81 11       	cpse	r24, r1
     a40:	02 c0       	rjmp	.+4      	; 0xa46 <NVM::write_fuse_v2(unsigned int, unsigned char)+0x16>
     a42:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:403
  if (!UPDI::st8(addr, data)) return false;
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
     a44:	10 c0       	rjmp	.+32     	; 0xa66 <NVM::write_fuse_v2(unsigned int, unsigned char)+0x36>
     a46:	be 01       	movw	r22, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:402
}

/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
  if (!UPDI::st8(addr, data)) return false;
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	41 2f       	mov	r20, r17
     a4e:	a7 db       	rcall	.-2226   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
     a50:	88 23       	and	r24, r24
     a52:	b9 f3       	breq	.-18     	; 0xa42 <NVM::write_fuse_v2(unsigned int, unsigned char)+0x12>
     a54:	03 df       	rcall	.-506    	; 0x85c <NVM::nvm_wait()>
     a56:	c8 2f       	mov	r28, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:403
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
     a58:	80 e0       	ldi	r24, 0x00	; 0
     a5a:	50 df       	rcall	.-352    	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
     a5c:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:404
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
     a5e:	89 f3       	breq	.-30     	; 0xa42 <NVM::write_fuse_v2(unsigned int, unsigned char)+0x12>
     a60:	c0 77       	andi	r28, 0x70	; 112
     a62:	81 e0       	ldi	r24, 0x01	; 1
     a64:	71 f7       	brne	.-36     	; 0xa42 <NVM::write_fuse_v2(unsigned int, unsigned char)+0x12>
     a66:	df 91       	pop	r29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:403

/* NVMCTRL v2 */
bool NVM::write_fuse_v2 (uint16_t addr, uint8_t data) {
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
  if (!UPDI::st8(addr, data)) return false;
  bool _r = (NVM::nvm_wait() & 0x70) == 0;
     a68:	cf 91       	pop	r28
     a6a:	1f 91       	pop	r17
     a6c:	08 95       	ret

00000a6e <UPDI::runtime(unsigned char)>:
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:406
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD)) return false;
  return _r;
}
     a6e:	4f 92       	push	r4
     a70:	5f 92       	push	r5
     a72:	6f 92       	push	r6
     a74:	7f 92       	push	r7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:455

/*
 * UPDI制御プロセス
 */

bool UPDI::runtime (uint8_t updi_cmd) {
     a76:	9f 92       	push	r9
     a78:	af 92       	push	r10
     a7a:	bf 92       	push	r11
     a7c:	cf 92       	push	r12
     a7e:	df 92       	push	r13
     a80:	ef 92       	push	r14
     a82:	ff 92       	push	r15
     a84:	0f 93       	push	r16
     a86:	1f 93       	push	r17
     a88:	cf 93       	push	r28
     a8a:	df 93       	push	r29
     a8c:	00 d0       	rcall	.+0      	; 0xa8e <UPDI::runtime(unsigned char)+0x20>
     a8e:	cd b7       	in	r28, 0x3d	; 61
     a90:	de b7       	in	r29, 0x3e	; 62
     a92:	8a 83       	std	Y+2, r24	; 0x02
     a94:	19 82       	std	Y+1, r1	; 0x01
     a96:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:456
  volatile bool _result = false;
     a98:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:457
  if (setjmp(TIM::CONTEXT) == 0) {
     a9a:	b7 d7       	rcall	.+3950   	; 0x1a0a <setjmp>
     a9c:	89 2b       	or	r24, r25
     a9e:	09 f0       	breq	.+2      	; 0xaa2 <UPDI::runtime(unsigned char)+0x34>
     aa0:	f6 c0       	rjmp	.+492    	; 0xc8e <UPDI::runtime(unsigned char)+0x220>
Timeout_Start():
     aa2:	9f b7       	in	r25, 0x3f	; 63
__iCliRetVal():
     aa4:	f8 94       	cli
Timeout_Start():
     aa6:	10 92 8a 0a 	sts	0x0A8A, r1	; 0x800a8a <UPDI::nvmprog_key+0x7f6fe8>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:50
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     aaa:	10 92 8b 0a 	sts	0x0A8B, r1	; 0x800a8b <UPDI::nvmprog_key+0x7f6fe9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:128
 * タイムアウト制御
 */

void TIM::Timeout_Start (uint16_t _ms) {
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
    TCB0_CNT = 0;
     aae:	28 ee       	ldi	r18, 0xE8	; 232
     ab0:	33 e0       	ldi	r19, 0x03	; 3
     ab2:	20 93 8c 0a 	sts	0x0A8C, r18	; 0x800a8c <UPDI::nvmprog_key+0x7f6fea>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:129
    TCB0_CCMP = _ms >> 2;
     ab6:	30 93 8d 0a 	sts	0x0A8D, r19	; 0x800a8d <UPDI::nvmprog_key+0x7f6feb>
     aba:	81 e0       	ldi	r24, 0x01	; 1
     abc:	80 93 85 0a 	sts	0x0A85, r24	; 0x800a85 <UPDI::nvmprog_key+0x7f6fe3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:130
    TCB0_INTCTRL = TCB_CAPT_bm;
     ac0:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f6fe4>
     ac4:	8f e0       	ldi	r24, 0x0F	; 15
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:131
    TCB0_INTFLAGS = TCB_CAPT_bm;
     ac6:	80 93 80 0a 	sts	0x0A80, r24	; 0x800a80 <UPDI::nvmprog_key+0x7f6fde>
__iRestore():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:132
    TCB0_CTRLA = TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
     aca:	9f bf       	out	0x3f, r25	; 63
_ZN4UPDI7runtimeEh():
     acc:	8a 81       	ldd	r24, Y+2	; 0x02
     ace:	83 30       	cpi	r24, 0x03	; 3
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/tools/avr-gcc/7.3.0-avr8-gnu-toolchain/avr/include/util/atomic.h:70
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     ad0:	09 f4       	brne	.+2      	; 0xad4 <UPDI::runtime(unsigned char)+0x66>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:459
    TIM::Timeout_Start(4000);
    switch (updi_cmd) {
     ad2:	8d c3       	rjmp	.+1818   	; 0x11ee <UPDI::runtime(unsigned char)+0x780>
     ad4:	84 30       	cpi	r24, 0x04	; 4
     ad6:	09 f4       	brne	.+2      	; 0xada <UPDI::runtime(unsigned char)+0x6c>
     ad8:	d7 c3       	rjmp	.+1966   	; 0x1288 <UPDI::runtime(unsigned char)+0x81a>
     ada:	82 30       	cpi	r24, 0x02	; 2
     adc:	09 f4       	brne	.+2      	; 0xae0 <UPDI::runtime(unsigned char)+0x72>
     ade:	a7 c0       	rjmp	.+334    	; 0xc2e <UPDI::runtime(unsigned char)+0x1c0>
read_memory():
     ae0:	e7 e6       	ldi	r30, 0x67	; 103
     ae2:	f8 e3       	ldi	r31, 0x38	; 56
     ae4:	81 85       	ldd	r24, Z+9	; 0x09
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:51
/*
 * メモリ読込中核
 */

bool NVM::read_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     ae6:	02 85       	ldd	r16, Z+10	; 0x0a
     ae8:	13 85       	ldd	r17, Z+11	; 0x0b
     aea:	46 85       	ldd	r20, Z+14	; 0x0e
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:52
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     aec:	57 85       	ldd	r21, Z+15	; 0x0f
     aee:	60 89       	ldd	r22, Z+16	; 0x10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:53
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     af0:	71 89       	ldd	r23, Z+17	; 0x11
     af2:	92 e8       	ldi	r25, 0x82	; 130
     af4:	90 87       	std	Z+8, r25	; 0x08
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:54
  JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
     af6:	98 01       	movw	r18, r16
     af8:	2f 5f       	subi	r18, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:55
  JTAG2::packet.size_word[0] = byte_count + 1;
     afa:	3f 4f       	sbci	r19, 0xFF	; 255
     afc:	23 83       	std	Z+3, r18	; 0x03
     afe:	34 83       	std	Z+4, r19	; 0x04
     b00:	02 30       	cpi	r16, 0x02	; 2
     b02:	11 05       	cpc	r17, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:59
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     b04:	70 f0       	brcs	.+28     	; 0xb22 <UPDI::runtime(unsigned char)+0xb4>
     b06:	82 3c       	cpi	r24, 0xC2	; 194
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:60
    switch (mem_type) {
     b08:	18 f5       	brcc	.+70     	; 0xb50 <UPDI::runtime(unsigned char)+0xe2>
     b0a:	80 3c       	cpi	r24, 0xC0	; 192
     b0c:	a8 f5       	brcc	.+106    	; 0xb78 <UPDI::runtime(unsigned char)+0x10a>
     b0e:	82 3b       	cpi	r24, 0xB2	; 178
     b10:	09 f4       	brne	.+2      	; 0xb14 <UPDI::runtime(unsigned char)+0xa6>
     b12:	84 c0       	rjmp	.+264    	; 0xc1c <UPDI::runtime(unsigned char)+0x1ae>
     b14:	20 f4       	brcc	.+8      	; 0xb1e <UPDI::runtime(unsigned char)+0xb0>
     b16:	82 32       	cpi	r24, 0x22	; 34
     b18:	11 f1       	breq	.+68     	; 0xb5e <UPDI::runtime(unsigned char)+0xf0>
_ZN4UPDI7runtimeEh():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:316
bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
     b1a:	80 e0       	ldi	r24, 0x00	; 0
     b1c:	5c c0       	rjmp	.+184    	; 0xbd6 <UPDI::runtime(unsigned char)+0x168>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:60
     b1e:	86 3b       	cpi	r24, 0xB6	; 182
     b20:	e0 f7       	brcc	.-8      	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
read_data():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:316
/*
 * データ領域バイト読込
 */

bool NVM::read_data (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     b22:	c8 01       	movw	r24, r16
     b24:	01 97       	sbiw	r24, 0x01	; 1
     b26:	8f 3f       	cpi	r24, 0xFF	; 255
     b28:	91 05       	cpc	r25, r1
     b2a:	09 f0       	breq	.+2      	; 0xb2e <UPDI::runtime(unsigned char)+0xc0>
     b2c:	b0 f7       	brcc	.-20     	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:318
  uint8_t* p = &JTAG2::packet.body[1];
  if (!UPDI::send_repeat_header(
     b2e:	98 01       	movw	r18, r16
     b30:	80 e2       	ldi	r24, 0x20	; 32
     b32:	56 db       	rcall	.-2388   	; 0x1e0 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     b34:	88 23       	and	r24, r24
     b36:	89 f3       	breq	.-30     	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
     b38:	60 e7       	ldi	r22, 0x70	; 112
     b3a:	e6 2e       	mov	r14, r22
     b3c:	68 e3       	ldi	r22, 0x38	; 56
     b3e:	f6 2e       	mov	r15, r22
     b40:	e5 da       	rcall	.-2614   	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:321
    (UPDI::UPDI_LD | UPDI::UPDI_DATA1),
    start_addr, byte_count)) return false;
  do { *p++ = UPDI::RECV(); } while (--byte_count);
     b42:	f7 01       	movw	r30, r14
     b44:	81 93       	st	Z+, r24
     b46:	7f 01       	movw	r14, r30
     b48:	01 50       	subi	r16, 0x01	; 1
     b4a:	11 09       	sbc	r17, r1
     b4c:	c9 f7       	brne	.-14     	; 0xb40 <UPDI::runtime(unsigned char)+0xd2>
     b4e:	42 c0       	rjmp	.+132    	; 0xbd4 <UPDI::runtime(unsigned char)+0x166>
read_memory():
     b50:	85 3c       	cpi	r24, 0xC5	; 197
     b52:	09 f4       	brne	.+2      	; 0xb56 <UPDI::runtime(unsigned char)+0xe8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:60
  JTAG2::packet.size_word[0] = byte_count + 1;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     b54:	42 c0       	rjmp	.+132    	; 0xbda <UPDI::runtime(unsigned char)+0x16c>
     b56:	86 3c       	cpi	r24, 0xC6	; 198
     b58:	21 f3       	breq	.-56     	; 0xb22 <UPDI::runtime(unsigned char)+0xb4>
     b5a:	84 3c       	cpi	r24, 0xC4	; 196
     b5c:	f1 f6       	brne	.-68     	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
     b5e:	80 91 63 38 	lds	r24, 0x3863	; 0x803863 <NVM::nvm_eeprom_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:70
        return NVM::read_flash(start_addr, byte_count);
      }
      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :          // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA : {  // 0xC4
        start_addr += NVM::nvm_eeprom_offset;
     b62:	90 91 64 38 	lds	r25, 0x3864	; 0x803864 <NVM::nvm_eeprom_offset+0x1>
     b66:	a0 91 65 38 	lds	r26, 0x3865	; 0x803865 <NVM::nvm_eeprom_offset+0x2>
     b6a:	b0 91 66 38 	lds	r27, 0x3866	; 0x803866 <NVM::nvm_eeprom_offset+0x3>
     b6e:	48 0f       	add	r20, r24
     b70:	59 1f       	adc	r21, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:85
        start_addr += NVM::nvm_user_sig_offset;
        break;
      }
      /* FUSE はブロック読み出しの場合オフセットを与える */
      case JTAG2::MTYPE_FUSE_BITS : {     // 0xB2
        start_addr += NVM::nvm_fuse_offset;
     b72:	6a 1f       	adc	r22, r26
     b74:	7b 1f       	adc	r23, r27
     b76:	d5 cf       	rjmp	.-86     	; 0xb22 <UPDI::runtime(unsigned char)+0xb4>
     b78:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:64
  if (byte_count >= 2) {
    switch (mem_type) {
      /* Flash 領域 */
      case JTAG2::MTYPE_XMEGA_FLASH :     // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     b7c:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     b80:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
     b84:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
read_flash():
     b88:	16 95       	lsr	r17
     b8a:	07 95       	ror	r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:296
/*
 * Flash領域ワード読込
 */

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
     b8c:	98 01       	movw	r18, r16
     b8e:	21 50       	subi	r18, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:297
  if (byte_count == 0 || byte_count > 256) return false;
     b90:	31 09       	sbc	r19, r1
     b92:	2f 3f       	cpi	r18, 0xFF	; 255
     b94:	31 05       	cpc	r19, r1
     b96:	11 f0       	breq	.+4      	; 0xb9c <UPDI::runtime(unsigned char)+0x12e>
     b98:	08 f0       	brcs	.+2      	; 0xb9c <UPDI::runtime(unsigned char)+0x12e>
     b9a:	bf cf       	rjmp	.-130    	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
read_memory():
     b9c:	48 0f       	add	r20, r24
     b9e:	59 1f       	adc	r21, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:64
  if (byte_count >= 2) {
    switch (mem_type) {
      /* Flash 領域 */
      case JTAG2::MTYPE_XMEGA_FLASH :     // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     ba0:	6a 1f       	adc	r22, r26
     ba2:	7b 1f       	adc	r23, r27
read_flash():
     ba4:	98 01       	movw	r18, r16
     ba6:	81 e2       	ldi	r24, 0x21	; 33
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:299

bool NVM::read_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
  if (byte_count == 0 || byte_count > 256) return false;
  uint8_t* p = &JTAG2::packet.body[1];
  if (!UPDI::send_repeat_header(
     ba8:	1b db       	rcall	.-2506   	; 0x1e0 <UPDI::send_repeat_header(unsigned char, unsigned long, unsigned int)>
     baa:	88 23       	and	r24, r24
     bac:	09 f4       	brne	.+2      	; 0xbb0 <UPDI::runtime(unsigned char)+0x142>
     bae:	b5 cf       	rjmp	.-150    	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
     bb0:	77 e6       	ldi	r23, 0x67	; 103
     bb2:	e7 2e       	mov	r14, r23
     bb4:	78 e3       	ldi	r23, 0x38	; 56
     bb6:	f7 2e       	mov	r15, r23
     bb8:	a9 da       	rcall	.-2734   	; 0x10c <UPDI::RECV()>
     bba:	f7 01       	movw	r30, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:305
    (UPDI::UPDI_LD | UPDI::UPDI_DATA2),
    start_addr,
    byte_count
  )) return false;
  do {
    *p++ = UPDI::RECV();
     bbc:	81 87       	std	Z+9, r24	; 0x09
     bbe:	a6 da       	rcall	.-2740   	; 0x10c <UPDI::RECV()>
     bc0:	f7 01       	movw	r30, r14
     bc2:	82 87       	std	Z+10, r24	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:306
    *p++ = UPDI::RECV();
     bc4:	01 50       	subi	r16, 0x01	; 1
     bc6:	11 09       	sbc	r17, r1
     bc8:	f2 e0       	ldi	r31, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:307
  } while (--byte_count);
     bca:	ef 0e       	add	r14, r31
     bcc:	f1 1c       	adc	r15, r1
     bce:	01 15       	cp	r16, r1
     bd0:	11 05       	cpc	r17, r1
     bd2:	91 f7       	brne	.-28     	; 0xbb8 <UPDI::runtime(unsigned char)+0x14a>
read_userrow_dummy():
     bd4:	81 e0       	ldi	r24, 0x01	; 1
_ZN4UPDI7runtimeEh():
     bd6:	89 83       	std	Y+1, r24	; 0x01
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:334
bool NVM::read_userrow_dummy (size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
  uint8_t* p = &JTAG2::packet.body[1];
  uint8_t* q = &JTAG2::packet.body[266];
  do { *p++ = *q++; } while (--byte_count);
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_URWR_bp);
     bd8:	5a c0       	rjmp	.+180    	; 0xc8e <UPDI::runtime(unsigned char)+0x220>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:484
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
     bda:	e5 9b       	sbis	0x1c, 5	; 28
     bdc:	16 c0       	rjmp	.+44     	; 0xc0a <UPDI::runtime(unsigned char)+0x19c>
read_userrow_dummy():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:77
      }
      /* USERROW/USERSIG */
      case JTAG2::MTYPE_USERSIG : {       // 0xC5

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
     bde:	c8 01       	movw	r24, r16
     be0:	01 97       	sbiw	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:330
/*
 * 施錠デバイスの USERROW ダミー応答
 */

bool NVM::read_userrow_dummy (size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     be2:	8f 3f       	cpi	r24, 0xFF	; 255
     be4:	91 05       	cpc	r25, r1
     be6:	11 f0       	breq	.+4      	; 0xbec <UPDI::runtime(unsigned char)+0x17e>
     be8:	08 f0       	brcs	.+2      	; 0xbec <UPDI::runtime(unsigned char)+0x17e>
     bea:	97 cf       	rjmp	.-210    	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
     bec:	e7 e6       	ldi	r30, 0x67	; 103
     bee:	f8 e3       	ldi	r31, 0x38	; 56
     bf0:	09 59       	subi	r16, 0x99	; 153
     bf2:	17 4c       	sbci	r17, 0xC7	; 199
     bf4:	df 01       	movw	r26, r30
     bf6:	ae 5e       	subi	r26, 0xEE	; 238
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:333
  uint8_t* p = &JTAG2::packet.body[1];
  uint8_t* q = &JTAG2::packet.body[266];
  do { *p++ = *q++; } while (--byte_count);
     bf8:	be 4f       	sbci	r27, 0xFE	; 254
     bfa:	8c 91       	ld	r24, X
     bfc:	81 87       	std	Z+9, r24	; 0x09
     bfe:	31 96       	adiw	r30, 0x01	; 1
     c00:	e0 17       	cp	r30, r16
     c02:	f1 07       	cpc	r31, r17
     c04:	b9 f7       	brne	.-18     	; 0xbf4 <UPDI::runtime(unsigned char)+0x186>
     c06:	e5 98       	cbi	0x1c, 5	; 28
     c08:	e5 cf       	rjmp	.-54     	; 0xbd4 <UPDI::runtime(unsigned char)+0x166>
read_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:334
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_URWR_bp);
     c0a:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:80

        /* デバイス施錠されている場合の特殊書込直後 */
        if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
          return NVM::read_userrow_dummy(byte_count);

        start_addr += NVM::nvm_user_sig_offset;
     c0e:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
     c12:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
     c16:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
     c1a:	a9 cf       	rjmp	.-174    	; 0xb6e <UPDI::runtime(unsigned char)+0x100>
     c1c:	80 91 5f 38 	lds	r24, 0x385F	; 0x80385f <NVM::nvm_fuse_offset>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:85
        break;
      }
      /* FUSE はブロック読み出しの場合オフセットを与える */
      case JTAG2::MTYPE_FUSE_BITS : {     // 0xB2
        start_addr += NVM::nvm_fuse_offset;
     c20:	90 91 60 38 	lds	r25, 0x3860	; 0x803860 <NVM::nvm_fuse_offset+0x1>
     c24:	a0 91 61 38 	lds	r26, 0x3861	; 0x803861 <NVM::nvm_fuse_offset+0x2>
     c28:	b0 91 62 38 	lds	r27, 0x3862	; 0x803862 <NVM::nvm_fuse_offset+0x3>
     c2c:	a0 cf       	rjmp	.-192    	; 0xb6e <UPDI::runtime(unsigned char)+0x100>
_ZN4UPDI7runtimeEh():
     c2e:	e1 99       	sbic	0x1c, 1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:465
      case UPDI::UPDI_CMD_READ_MEMORY : {
        _result = NVM::read_memory();
        break;
      }
      case UPDI::UPDI_CMD_WRITE_MEMORY : {
        if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp)) {
     c30:	28 c0       	rjmp	.+80     	; 0xc82 <UPDI::runtime(unsigned char)+0x214>
     c32:	80 91 70 38 	lds	r24, 0x3870	; 0x803870 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:467
          /* USERROW だけは非PROG状態でも処理を通す */
          if (JTAG2::packet.body[1] != JTAG2::MTYPE_USERSIG) break;
     c36:	85 3c       	cpi	r24, 0xC5	; 197
     c38:	51 f5       	brne	.+84     	; 0xc8e <UPDI::runtime(unsigned char)+0x220>
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:105
/*
 * メモリ書込中核
 */

bool NVM::write_memory (void) {
  uint8_t  mem_type   =         JTAG2::packet.body[1];
     c3a:	e7 e6       	ldi	r30, 0x67	; 103
     c3c:	f8 e3       	ldi	r31, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:106
  size_t   byte_count = _CAPS16(JTAG2::packet.body[2])->word;
     c3e:	81 85       	ldd	r24, Z+9	; 0x09
     c40:	02 85       	ldd	r16, Z+10	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:107
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
     c42:	13 85       	ldd	r17, Z+11	; 0x0b
     c44:	c6 84       	ldd	r12, Z+14	; 0x0e
     c46:	d7 84       	ldd	r13, Z+15	; 0x0f
     c48:	e0 88       	ldd	r14, Z+16	; 0x10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:111
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
     c4a:	f1 88       	ldd	r15, Z+17	; 0x11
     c4c:	02 30       	cpi	r16, 0x02	; 2
     c4e:	11 05       	cpc	r17, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:203
      default : return false;
    }
  }
  else {
    /* ここは 1byte単位書込で通る */
    uint8_t data = JTAG2::packet.body[10];
     c50:	b0 f5       	brcc	.+108    	; 0xcbe <UPDI::runtime(unsigned char)+0x250>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:204
    switch (mem_type) {
     c52:	b2 88       	ldd	r11, Z+18	; 0x12
     c54:	84 3b       	cpi	r24, 0xB4	; 180
     c56:	09 f4       	brne	.+2      	; 0xc5a <UPDI::runtime(unsigned char)+0x1ec>
     c58:	fa c1       	rjmp	.+1012   	; 0x104e <UPDI::runtime(unsigned char)+0x5e0>
     c5a:	08 f0       	brcs	.+2      	; 0xc5e <UPDI::runtime(unsigned char)+0x1f0>
     c5c:	f3 c1       	rjmp	.+998    	; 0x1044 <UPDI::runtime(unsigned char)+0x5d6>
     c5e:	82 3b       	cpi	r24, 0xB2	; 178
     c60:	08 f4       	brcc	.+2      	; 0xc64 <UPDI::runtime(unsigned char)+0x1f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:209
      /* FUSES/LOCKBITS 領域 */
      /* 常に奇数量絶対アドレス指定の特殊書込 */
      case JTAG2::MTYPE_LOCK_BITS :       // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {     // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
     c62:	d2 c0       	rjmp	.+420    	; 0xe08 <UPDI::runtime(unsigned char)+0x39a>
     c64:	c7 01       	movw	r24, r14
     c66:	b6 01       	movw	r22, r12
     c68:	03 db       	rcall	.-2554   	; 0x270 <UPDI::ld8(unsigned long)>
     c6a:	b8 12       	cpse	r11, r24
     c6c:	04 c0       	rjmp	.+8      	; 0xc76 <UPDI::runtime(unsigned char)+0x208>
     c6e:	8f b3       	in	r24, 0x1f	; 31
     c70:	88 23       	and	r24, r24
     c72:	09 f4       	brne	.+2      	; 0xc76 <UPDI::runtime(unsigned char)+0x208>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:211
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
     c74:	ba c2       	rjmp	.+1396   	; 0x11ea <UPDI::runtime(unsigned char)+0x77c>
     c76:	6b 2d       	mov	r22, r11
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:210
      /* FUSES/LOCKBITS 領域 */
      /* 常に奇数量絶対アドレス指定の特殊書込 */
      case JTAG2::MTYPE_LOCK_BITS :       // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {     // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     c78:	c6 01       	movw	r24, r12
     c7a:	ef 9b       	sbis	0x1d, 7	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:211
          return NVM::write_fuse_v3(start_addr, data);
     c7c:	00 c2       	rjmp	.+1024   	; 0x107e <UPDI::runtime(unsigned char)+0x610>
     c7e:	b9 de       	rcall	.-654    	; 0x9f2 <NVM::write_fuse_v3(unsigned int, unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:470
        }
        else {
          if (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS)) break;
     c80:	5b c0       	rjmp	.+182    	; 0xd38 <UPDI::runtime(unsigned char)+0x2ca>
_ZN4UPDI7runtimeEh():
     c82:	81 e0       	ldi	r24, 0x01	; 1
     c84:	ea da       	rcall	.-2604   	; 0x25a <UPDI::is_sys_stat(unsigned char)>
     c86:	81 11       	cpse	r24, r1
     c88:	02 c0       	rjmp	.+4      	; 0xc8e <UPDI::runtime(unsigned char)+0x220>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:471
          if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
     c8a:	f3 99       	sbic	0x1e, 3	; 30
     c8c:	d6 cf       	rjmp	.-84     	; 0xc3a <UPDI::runtime(unsigned char)+0x1cc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:489
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
        break;
      }
    }
  }
  TIM::Timeout_Stop();
     c8e:	3c db       	rcall	.-2440   	; 0x308 <TIM::Timeout_Stop()>
     c90:	88 ec       	ldi	r24, 0xC8	; 200
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:490
  UPDI_USART.CTRLB = UPDI_USART_ON;
     c92:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6d64>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:492
  wdt_reset();
  return _result;
     c96:	a8 95       	wdr
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:493
}
     c98:	89 81       	ldd	r24, Y+1	; 0x01
     c9a:	0f 90       	pop	r0
     c9c:	0f 90       	pop	r0
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	1f 91       	pop	r17
     ca4:	0f 91       	pop	r16
     ca6:	ff 90       	pop	r15
     ca8:	ef 90       	pop	r14
     caa:	df 90       	pop	r13
     cac:	cf 90       	pop	r12
     cae:	bf 90       	pop	r11
     cb0:	af 90       	pop	r10
     cb2:	9f 90       	pop	r9
     cb4:	7f 90       	pop	r7
     cb6:	6f 90       	pop	r6
     cb8:	5f 90       	pop	r5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:112
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     cba:	4f 90       	pop	r4
     cbc:	08 95       	ret
write_memory():
     cbe:	82 3c       	cpi	r24, 0xC2	; 194
     cc0:	10 f5       	brcc	.+68     	; 0xd06 <UPDI::runtime(unsigned char)+0x298>
     cc2:	80 3c       	cpi	r24, 0xC0	; 192
     cc4:	38 f5       	brcc	.+78     	; 0xd14 <UPDI::runtime(unsigned char)+0x2a6>
     cc6:	84 3b       	cpi	r24, 0xB4	; 180
     cc8:	40 f4       	brcc	.+16     	; 0xcda <UPDI::runtime(unsigned char)+0x26c>
     cca:	82 3b       	cpi	r24, 0xB2	; 178
     ccc:	08 f0       	brcs	.+2      	; 0xcd0 <UPDI::runtime(unsigned char)+0x262>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:198
        }
        /* megaAVR/tinyAVR is EEPROM */
        /* この系統は EEPROM として実装されている */
        break;
      }
      default : return false;
     cce:	e3 c0       	rjmp	.+454    	; 0xe96 <UPDI::runtime(unsigned char)+0x428>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:112
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     cd0:	82 32       	cpi	r24, 0x22	; 34
     cd2:	09 f4       	brne	.+2      	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:163
      case JTAG2::MTYPE_USERSIG : {       // 0xC5

        /* AVR_EB系統の特別な SIGROW==BOOTROW ブロック書込 */
        /* この系統では 0x1100からの 64byte は BOOTROWで、Flash領域として書ける */
        /* それ以外は書込不可か EEPROMとして扱う */
        if (mem_type != JTAG2::MTYPE_USERSIG) {
     cd4:	8d c0       	rjmp	.+282    	; 0xdf0 <UPDI::runtime(unsigned char)+0x382>
_ZN4UPDI7runtimeEh():
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	96 c1       	rjmp	.+812    	; 0x1006 <UPDI::runtime(unsigned char)+0x598>
write_memory():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:164
          if (!bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) break;
     cda:	84 3b       	cpi	r24, 0xB4	; 180
     cdc:	e1 f7       	brne	.-8      	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:177

        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     cde:	85 3c       	cpi	r24, 0xC5	; 197
     ce0:	09 f4       	brne	.+2      	; 0xce4 <UPDI::runtime(unsigned char)+0x276>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:179
          /* 書く前にページ消去 */
          NVM::nvm_wait_v3();
     ce2:	10 c1       	rjmp	.+544    	; 0xf04 <UPDI::runtime(unsigned char)+0x496>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:180
          if (!UPDI::st8(start_addr, 0xFF)) return false;
     ce4:	ef 9b       	sbis	0x1d, 7	; 29
     ce6:	90 c0       	rjmp	.+288    	; 0xe08 <UPDI::runtime(unsigned char)+0x39a>
     ce8:	ef 9b       	sbis	0x1d, 7	; 29
     cea:	9c c1       	rjmp	.+824    	; 0x1024 <UPDI::runtime(unsigned char)+0x5b6>
     cec:	29 dd       	rcall	.-1454   	; 0x740 <NVM::nvm_wait_v3()>
     cee:	4f ef       	ldi	r20, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:181
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
     cf0:	c7 01       	movw	r24, r14
     cf2:	b6 01       	movw	r22, r12
     cf4:	54 da       	rcall	.-2904   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
     cf6:	88 23       	and	r24, r24
     cf8:	71 f3       	breq	.-36     	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:182
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
     cfa:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:112
  uint32_t start_addr = _CAPS32(JTAG2::packet.body[6])->dword;
  /* 奇数量なら絶対アドレス（データ長は常に1） */
  /* 偶数量なら間接アドレス指定 */
  /* Flash領域は常に偶数量 */
  if (byte_count >= 2) {
    switch (mem_type) {
     cfc:	2f dd       	rcall	.-1442   	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
     cfe:	88 23       	and	r24, r24
     d00:	51 f3       	breq	.-44     	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     d02:	e2 9a       	sbi	0x1c, 2	; 28
     d04:	15 c0       	rjmp	.+42     	; 0xd30 <UPDI::runtime(unsigned char)+0x2c2>
     d06:	84 3c       	cpi	r24, 0xC4	; 196
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:117
      /* Flash 領域 */
      /* 奇数量指定は Data領域絶対アドレス指定になる */
      case JTAG2::MTYPE_XMEGA_FLASH :     // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
     d08:	09 f4       	brne	.+2      	; 0xd0c <UPDI::runtime(unsigned char)+0x29e>
     d0a:	72 c0       	rjmp	.+228    	; 0xdf0 <UPDI::runtime(unsigned char)+0x382>
     d0c:	20 f3       	brcs	.-56     	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     d0e:	87 3c       	cpi	r24, 0xC7	; 199
     d10:	30 f3       	brcs	.-52     	; 0xcde <UPDI::runtime(unsigned char)+0x270>
     d12:	e1 cf       	rjmp	.-62     	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     d14:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <NVM::nvm_flash_offset>
     d18:	90 91 52 38 	lds	r25, 0x3852	; 0x803852 <NVM::nvm_flash_offset+0x1>
     d1c:	a0 91 53 38 	lds	r26, 0x3853	; 0x803853 <NVM::nvm_flash_offset+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:118
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     d20:	b0 91 54 38 	lds	r27, 0x3854	; 0x803854 <NVM::nvm_flash_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:183
          /* 書く前にページ消去 */
          NVM::nvm_wait_v3();
          if (!UPDI::st8(start_addr, 0xFF)) return false;
          if (!NVM::nvm_ctrl_v3(NVM::NVM_V2_CMD_FLPER)) return false;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
     d24:	c8 0e       	add	r12, r24
     d26:	d9 1e       	adc	r13, r25
     d28:	ea 1e       	adc	r14, r26
     d2a:	fb 1e       	adc	r15, r27
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:458
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if ((NVM::nvm_wait() & 0x70) != 0) return false;
    if (!UPDI::st8(start_addr++, *p++)) return false;
  } while (--byte_count);
  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
     d2c:	ef 9b       	sbis	0x1d, 7	; 29
     d2e:	06 c0       	rjmp	.+12     	; 0xd3c <UPDI::runtime(unsigned char)+0x2ce>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:120
      case JTAG2::MTYPE_XMEGA_FLASH :     // 0xC0
      case JTAG2::MTYPE_BOOT_FLASH : {    // 0xC1
        start_addr += NVM::nvm_flash_offset;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_flash_v3(start_addr, byte_count);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
     d30:	a8 01       	movw	r20, r16
     d32:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:192
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
          /* 書く前にページ消去 */
          if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
          if (!UPDI::st8(start_addr, 0xFF)) return false;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v2(start_addr, byte_count);
     d34:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:277
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v2(start_addr, byte_count);
     d36:	18 dd       	rcall	.-1488   	; 0x768 <NVM::write_flash_v3(unsigned long, unsigned int)>
write_eeprom_v2():
     d38:	98 2f       	mov	r25, r24
     d3a:	65 c1       	rjmp	.+714    	; 0x1006 <UPDI::runtime(unsigned char)+0x598>
write_memory():
     d3c:	ee 9b       	sbis	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:491
 * Flash領域ワード書込
 */

/* NVMCTRL v0 */
bool NVM::write_flash (uint32_t start_addr, size_t byte_count) {
  byte_count >>= 1;
     d3e:	05 c0       	rjmp	.+10     	; 0xd4a <UPDI::runtime(unsigned char)+0x2dc>
     d40:	a8 01       	movw	r20, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:492
  if (byte_count == 0 || byte_count > 256) return false;
     d42:	c7 01       	movw	r24, r14
     d44:	b6 01       	movw	r22, r12
     d46:	e0 dd       	rcall	.-1088   	; 0x908 <NVM::write_flash_v2(unsigned long, unsigned int)>
     d48:	f7 cf       	rjmp	.-18     	; 0xd38 <UPDI::runtime(unsigned char)+0x2ca>
write_flash():
     d4a:	16 95       	lsr	r17
     d4c:	07 95       	ror	r16
     d4e:	c8 01       	movw	r24, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:496

  /* この系統ではページ消去を書込と同時に行える */
  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
     d50:	01 97       	sbiw	r24, 0x01	; 1
     d52:	8f 3f       	cpi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:497
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
     d54:	91 05       	cpc	r25, r1
     d56:	11 f0       	breq	.+4      	; 0xd5c <UPDI::runtime(unsigned char)+0x2ee>
     d58:	08 f0       	brcs	.+2      	; 0xd5c <UPDI::runtime(unsigned char)+0x2ee>
     d5a:	bd cf       	rjmp	.-134    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     d5c:	7f dd       	rcall	.-1282   	; 0x85c <NVM::nvm_wait()>
     d5e:	84 e0       	ldi	r24, 0x04	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:498
  NVM::nvm_wait();
     d60:	08 db       	rcall	.-2544   	; 0x372 <NVM::nvm_ctrl(unsigned char)>
     d62:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:501

  /* setting register pointer and enable RSD mode */
  _CAPS32(set_ptr[2])->dword = start_addr;
     d64:	09 f4       	brne	.+2      	; 0xd68 <UPDI::runtime(unsigned char)+0x2fa>
     d66:	b7 cf       	rjmp	.-146    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     d68:	79 dd       	rcall	.-1294   	; 0x85c <NVM::nvm_wait()>
     d6a:	c0 92 32 38 	sts	0x3832, r12	; 0x803832 <NVM::set_ptr+0x2>
     d6e:	d0 92 33 38 	sts	0x3833, r13	; 0x803833 <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:502
  set_repeat_rsd[5] = byte_count - 1;
     d72:	e0 92 34 38 	sts	0x3834, r14	; 0x803834 <NVM::set_ptr+0x4>
     d76:	f0 92 35 38 	sts	0x3835, r15	; 0x803835 <NVM::set_ptr+0x5>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:503
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     d7a:	8f ef       	ldi	r24, 0xFF	; 255
     d7c:	80 0f       	add	r24, r16
     d7e:	80 93 28 38 	sts	0x3828, r24	; 0x803828 <NVM::set_repeat_rsd+0x5>
     d82:	65 e0       	ldi	r22, 0x05	; 5
     d84:	70 e0       	ldi	r23, 0x00	; 0
     d86:	80 e3       	ldi	r24, 0x30	; 48
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:504
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     d88:	98 e3       	ldi	r25, 0x38	; 56
     d8a:	e4 d9       	rcall	.-3128   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     d8c:	88 23       	and	r24, r24
     d8e:	09 f4       	brne	.+2      	; 0xd92 <UPDI::runtime(unsigned char)+0x324>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:505
  if (!UPDI::send_bytes(set_repeat_rsd, sizeof(set_repeat_rsd))) return false;
     d90:	a2 cf       	rjmp	.-188    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     d92:	bc d9       	rcall	.-3208   	; 0x10c <UPDI::RECV()>
     d94:	80 34       	cpi	r24, 0x40	; 64
     d96:	09 f0       	breq	.+2      	; 0xd9a <UPDI::runtime(unsigned char)+0x32c>
     d98:	9e cf       	rjmp	.-196    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     d9a:	68 e0       	ldi	r22, 0x08	; 8
     d9c:	70 e0       	ldi	r23, 0x00	; 0
     d9e:	83 e2       	ldi	r24, 0x23	; 35
     da0:	98 e3       	ldi	r25, 0x38	; 56
     da2:	d8 d9       	rcall	.-3152   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     da4:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:510

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    UPDI::SEND(*p++);
     da6:	09 f4       	brne	.+2      	; 0xdaa <UPDI::runtime(unsigned char)+0x33c>
     da8:	96 cf       	rjmp	.-212    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     daa:	47 e6       	ldi	r20, 0x67	; 103
     dac:	e4 2e       	mov	r14, r20
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:511
    UPDI::SEND(*p++);
     dae:	48 e3       	ldi	r20, 0x38	; 56
     db0:	f4 2e       	mov	r15, r20
     db2:	f7 01       	movw	r30, r14
     db4:	82 89       	ldd	r24, Z+18	; 0x12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:512
  } while (--byte_count);
     db6:	b6 d9       	rcall	.-3220   	; 0x124 <UPDI::SEND(unsigned char)>
     db8:	f7 01       	movw	r30, r14
     dba:	83 89       	ldd	r24, Z+19	; 0x13
     dbc:	b3 d9       	rcall	.-3226   	; 0x124 <UPDI::SEND(unsigned char)>
     dbe:	01 50       	subi	r16, 0x01	; 1
     dc0:	11 09       	sbc	r17, r1
     dc2:	f2 e0       	ldi	r31, 0x02	; 2
     dc4:	ef 0e       	add	r14, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:224
  set_ptr[1] = UPDI::UPDI_STCS | code;
  set_ptr[2] = data;
  return UPDI::send_bytes(set_ptr, sizeof(set_ptr));
}
inline bool UPDI::set_cs_ctra (const uint8_t data) {
  return UPDI::set_cs_stat(UPDI::UPDI_CS_CTRLA, data);
     dc6:	f1 1c       	adc	r15, r1
     dc8:	01 15       	cp	r16, r1
     dca:	11 05       	cpc	r17, r1
     dcc:	91 f7       	brne	.-28     	; 0xdb2 <UPDI::runtime(unsigned char)+0x344>
set_cs_ctra():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:516
  // UPDI::guardtime();

  /* disable RSD mode */
  if (!UPDI::set_cs_ctra(UPDI_GTVAL)) return false;
     dce:	66 e0       	ldi	r22, 0x06	; 6
     dd0:	82 e0       	ldi	r24, 0x02	; 2
     dd2:	d7 d9       	rcall	.-3154   	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>
write_flash():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:445
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  /* NVMCTRL write page and complete */
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_ERWP)) return false;
     dd4:	88 23       	and	r24, r24
     dd6:	09 f4       	brne	.+2      	; 0xdda <UPDI::runtime(unsigned char)+0x36c>
     dd8:	7e cf       	rjmp	.-260    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
write_eeprom():
     dda:	83 e0       	ldi	r24, 0x03	; 3
     ddc:	ca da       	rcall	.-2668   	; 0x372 <NVM::nvm_ctrl(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:446
  return NVM::nvm_wait() == 0;
     dde:	88 23       	and	r24, r24
     de0:	09 f4       	brne	.+2      	; 0xde4 <UPDI::runtime(unsigned char)+0x376>
     de2:	79 cf       	rjmp	.-270    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     de4:	3b dd       	rcall	.-1418   	; 0x85c <NVM::nvm_wait()>
     de6:	91 e0       	ldi	r25, 0x01	; 1
     de8:	88 23       	and	r24, r24
     dea:	09 f4       	brne	.+2      	; 0xdee <UPDI::runtime(unsigned char)+0x380>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:128
      }

      /* EEPROM 領域 */
      case JTAG2::MTYPE_EEPROM :          // 0x22
      case JTAG2::MTYPE_EEPROM_XMEGA : {  // 0xC4
        start_addr += NVM::nvm_eeprom_offset;
     dec:	0c c1       	rjmp	.+536    	; 0x1006 <UPDI::runtime(unsigned char)+0x598>
     dee:	73 cf       	rjmp	.-282    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
write_memory():
     df0:	80 91 63 38 	lds	r24, 0x3863	; 0x803863 <NVM::nvm_eeprom_offset>
     df4:	90 91 64 38 	lds	r25, 0x3864	; 0x803864 <NVM::nvm_eeprom_offset+0x1>
     df8:	a0 91 65 38 	lds	r26, 0x3865	; 0x803865 <NVM::nvm_eeprom_offset+0x2>
     dfc:	b0 91 66 38 	lds	r27, 0x3866	; 0x803866 <NVM::nvm_eeprom_offset+0x3>
     e00:	c8 0e       	add	r12, r24
     e02:	d9 1e       	adc	r13, r25
     e04:	ea 1e       	adc	r14, r26
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:284
        /* megaAVR/tinyAVR is EEPROM */
        /* この系統は EEPROM として実装されている */
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
     e06:	fb 1e       	adc	r15, r27
     e08:	c8 01       	movw	r24, r16
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:463
  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
}

/* NVMCTRL v3 */
bool NVM::write_eeprom_v3 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
     e0a:	01 97       	sbiw	r24, 0x01	; 1
     e0c:	ef 9b       	sbis	0x1d, 7	; 29
     e0e:	78 c1       	rjmp	.+752    	; 0x1100 <UPDI::runtime(unsigned char)+0x692>
write_eeprom_v3():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:465

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPBCLR)) return false;
     e10:	8f 3f       	cpi	r24, 0xFF	; 255
     e12:	91 05       	cpc	r25, r1
     e14:	11 f0       	breq	.+4      	; 0xe1a <UPDI::runtime(unsigned char)+0x3ac>
     e16:	08 f0       	brcs	.+2      	; 0xe1a <UPDI::runtime(unsigned char)+0x3ac>
     e18:	5e cf       	rjmp	.-324    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     e1a:	8f e1       	ldi	r24, 0x1F	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:468

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
     e1c:	9f dc       	rcall	.-1730   	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
     e1e:	88 23       	and	r24, r24
     e20:	09 f4       	brne	.+2      	; 0xe24 <UPDI::runtime(unsigned char)+0x3b6>
     e22:	59 cf       	rjmp	.-334    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     e24:	c0 92 32 38 	sts	0x3832, r12	; 0x803832 <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:469
  set_repeat[2] = (uint8_t)byte_count - 1;
     e28:	d0 92 33 38 	sts	0x3833, r13	; 0x803833 <NVM::set_ptr+0x3>
     e2c:	e0 92 34 38 	sts	0x3834, r14	; 0x803834 <NVM::set_ptr+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:470
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     e30:	f0 92 35 38 	sts	0x3835, r15	; 0x803835 <NVM::set_ptr+0x5>
     e34:	8f ef       	ldi	r24, 0xFF	; 255
     e36:	80 0f       	add	r24, r16
     e38:	80 93 2d 38 	sts	0x382D, r24	; 0x80382d <NVM::set_repeat+0x2>
     e3c:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:471
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	80 e3       	ldi	r24, 0x30	; 48
     e42:	98 e3       	ldi	r25, 0x38	; 56
     e44:	87 d9       	rcall	.-3314   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     e46:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:472
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     e48:	09 f4       	brne	.+2      	; 0xe4c <UPDI::runtime(unsigned char)+0x3de>
     e4a:	45 cf       	rjmp	.-374    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     e4c:	5f d9       	rcall	.-3394   	; 0x10c <UPDI::RECV()>
     e4e:	80 34       	cpi	r24, 0x40	; 64
     e50:	09 f0       	breq	.+2      	; 0xe54 <UPDI::runtime(unsigned char)+0x3e6>
     e52:	41 cf       	rjmp	.-382    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     e54:	65 e0       	ldi	r22, 0x05	; 5
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	8b e2       	ldi	r24, 0x2B	; 43
     e5a:	98 e3       	ldi	r25, 0x38	; 56
     e5c:	7b d9       	rcall	.-3338   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     e5e:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:477

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
     e60:	09 f4       	brne	.+2      	; 0xe64 <UPDI::runtime(unsigned char)+0x3f6>
     e62:	39 cf       	rjmp	.-398    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     e64:	29 e7       	ldi	r18, 0x79	; 121
     e66:	e2 2e       	mov	r14, r18
     e68:	28 e3       	ldi	r18, 0x38	; 56
     e6a:	f2 2e       	mov	r15, r18
     e6c:	f7 01       	movw	r30, r14
     e6e:	81 91       	ld	r24, Z+
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:478
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     e70:	7f 01       	movw	r14, r30
     e72:	58 d9       	rcall	.-3408   	; 0x124 <UPDI::SEND(unsigned char)>
     e74:	88 23       	and	r24, r24
     e76:	09 f4       	brne	.+2      	; 0xe7a <UPDI::runtime(unsigned char)+0x40c>
     e78:	2e cf       	rjmp	.-420    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:479
  } while (--byte_count);
     e7a:	48 d9       	rcall	.-3440   	; 0x10c <UPDI::RECV()>
     e7c:	80 34       	cpi	r24, 0x40	; 64
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:481

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW)) return false;
     e7e:	09 f0       	breq	.+2      	; 0xe82 <UPDI::runtime(unsigned char)+0x414>
     e80:	2a cf       	rjmp	.-428    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     e82:	01 50       	subi	r16, 0x01	; 1
     e84:	11 09       	sbc	r17, r1
     e86:	91 f7       	brne	.-28     	; 0xe6c <UPDI::runtime(unsigned char)+0x3fe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:482
  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD);
     e88:	85 e1       	ldi	r24, 0x15	; 21
     e8a:	68 dc       	rcall	.-1840   	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:136

      /* FUSES/LOCKBITS 領域 */
      /* ブロック書き込みは特殊 */
      case JTAG2::MTYPE_LOCK_BITS :       // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {     // 0xB2
        start_addr += NVM::nvm_fuse_offset;
     e8c:	88 23       	and	r24, r24
     e8e:	09 f4       	brne	.+2      	; 0xe92 <UPDI::runtime(unsigned char)+0x424>
     e90:	22 cf       	rjmp	.-444    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     e92:	80 e0       	ldi	r24, 0x00	; 0
     e94:	f2 c0       	rjmp	.+484    	; 0x107a <UPDI::runtime(unsigned char)+0x60c>
write_memory():
     e96:	80 91 5f 38 	lds	r24, 0x385F	; 0x80385f <NVM::nvm_fuse_offset>
     e9a:	90 91 60 38 	lds	r25, 0x3860	; 0x803860 <NVM::nvm_fuse_offset+0x1>
     e9e:	a0 91 61 38 	lds	r26, 0x3861	; 0x803861 <NVM::nvm_fuse_offset+0x2>
     ea2:	b0 91 62 38 	lds	r27, 0x3862	; 0x803862 <NVM::nvm_fuse_offset+0x3>
     ea6:	c8 0e       	add	r12, r24
     ea8:	d9 1e       	adc	r13, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:138
        uint8_t buffer_index = 10;
        while (byte_count--) {
     eaa:	ea 1e       	adc	r14, r26
     eac:	fb 1e       	adc	r15, r27
     eae:	b1 2c       	mov	r11, r1
     eb0:	a1 2c       	mov	r10, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:139
          uint8_t data = JTAG2::packet.body[buffer_index++];
     eb2:	ea e0       	ldi	r30, 0x0A	; 10
     eb4:	ea 0d       	add	r30, r10
     eb6:	0a 15       	cp	r16, r10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:140
          if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) continue;
     eb8:	1b 05       	cpc	r17, r11
     eba:	09 f4       	brne	.+2      	; 0xebe <UPDI::runtime(unsigned char)+0x450>
     ebc:	96 c1       	rjmp	.+812    	; 0x11ea <UPDI::runtime(unsigned char)+0x77c>
     ebe:	f0 e0       	ldi	r31, 0x00	; 0
     ec0:	e9 59       	subi	r30, 0x99	; 153
     ec2:	f7 4c       	sbci	r31, 0xC7	; 199
     ec4:	90 84       	ldd	r9, Z+8	; 0x08
     ec6:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:142
          if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
            if (!NVM::write_fuse_v3(start_addr, data)) return false;
     ec8:	b6 01       	movw	r22, r12
     eca:	d2 d9       	rcall	.-3164   	; 0x270 <UPDI::ld8(unsigned long)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:141
        start_addr += NVM::nvm_fuse_offset;
        uint8_t buffer_index = 10;
        while (byte_count--) {
          uint8_t data = JTAG2::packet.body[buffer_index++];
          if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) continue;
          if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
     ecc:	98 12       	cpse	r9, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:142
            if (!NVM::write_fuse_v3(start_addr, data)) return false;
     ece:	03 c0       	rjmp	.+6      	; 0xed6 <UPDI::runtime(unsigned char)+0x468>
     ed0:	8f b3       	in	r24, 0x1f	; 31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:148
          }
          else if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
            if (!NVM::write_fuse_v2(start_addr, data)) return false;
          }
          else {
            if (!NVM::write_fuse(start_addr, data)) return false;
     ed2:	88 23       	and	r24, r24
     ed4:	69 f0       	breq	.+26     	; 0xef0 <UPDI::runtime(unsigned char)+0x482>
     ed6:	69 2d       	mov	r22, r9
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:150
          }
          start_addr++;
     ed8:	c6 01       	movw	r24, r12
     eda:	ef 9b       	sbis	0x1d, 7	; 29
     edc:	0d c0       	rjmp	.+26     	; 0xef8 <UPDI::runtime(unsigned char)+0x48a>
     ede:	89 dd       	rcall	.-1262   	; 0x9f2 <NVM::write_fuse_v3(unsigned int, unsigned char)>
     ee0:	88 23       	and	r24, r24
     ee2:	09 f4       	brne	.+2      	; 0xee6 <UPDI::runtime(unsigned char)+0x478>
     ee4:	f8 ce       	rjmp	.-528    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:144
          uint8_t data = JTAG2::packet.body[buffer_index++];
          if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) continue;
          if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
            if (!NVM::write_fuse_v3(start_addr, data)) return false;
          }
          else if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
     ee6:	9f ef       	ldi	r25, 0xFF	; 255
     ee8:	c9 1a       	sub	r12, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:145
            if (!NVM::write_fuse_v2(start_addr, data)) return false;
     eea:	d9 0a       	sbc	r13, r25
     eec:	e9 0a       	sbc	r14, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:148
          }
          else {
            if (!NVM::write_fuse(start_addr, data)) return false;
     eee:	f9 0a       	sbc	r15, r25
     ef0:	8f ef       	ldi	r24, 0xFF	; 255
     ef2:	a8 1a       	sub	r10, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:168
        if (mem_type != JTAG2::MTYPE_USERSIG) {
          if (!bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) break;
        }
        else {
          /* デバイス施錠されている場合 */
          if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp))
     ef4:	b8 0a       	sbc	r11, r24
     ef6:	dd cf       	rjmp	.-70     	; 0xeb2 <UPDI::runtime(unsigned char)+0x444>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:270
/*
 * USERROW/USERSIG 特殊書込準備
 */
bool UPDI::enter_userrow (void) {
  /* send urowwrite_key */
  if (!UPDI::send_bytes(UPDI::urowwrite_key, sizeof(UPDI::urowwrite_key))) return false;
     ef8:	ee 9b       	sbis	0x1d, 6	; 29
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <UPDI::runtime(unsigned char)+0x492>
     efc:	99 dd       	rcall	.-1230   	; 0xa30 <NVM::write_fuse_v2(unsigned int, unsigned char)>
     efe:	f0 cf       	rjmp	.-32     	; 0xee0 <UPDI::runtime(unsigned char)+0x472>
     f00:	bb dc       	rcall	.-1674   	; 0x878 <NVM::write_fuse(unsigned int, unsigned char)>
     f02:	ee cf       	rjmp	.-36     	; 0xee0 <UPDI::runtime(unsigned char)+0x472>
     f04:	e1 99       	sbic	0x1c, 1	; 28
     f06:	81 c0       	rjmp	.+258    	; 0x100a <UPDI::runtime(unsigned char)+0x59c>
enter_userrow():
     f08:	6a e0       	ldi	r22, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:272
  /* restart target : change mode */
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     f0a:	70 e0       	ldi	r23, 0x00	; 0
     f0c:	8e e8       	ldi	r24, 0x8E	; 142
     f0e:	9a e9       	ldi	r25, 0x9A	; 154
     f10:	21 d9       	rcall	.-3518   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     f12:	88 23       	and	r24, r24
     f14:	09 f4       	brne	.+2      	; 0xf18 <UPDI::runtime(unsigned char)+0x4aa>
     f16:	df ce       	rjmp	.-578    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     f18:	81 e0       	ldi	r24, 0x01	; 1
     f1a:	3c d9       	rcall	.-3464   	; 0x194 <UPDI::updi_reset(bool)>
     f1c:	88 23       	and	r24, r24
     f1e:	09 f4       	brne	.+2      	; 0xf22 <UPDI::runtime(unsigned char)+0x4b4>
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     f20:	da ce       	rjmp	.-588    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     f22:	80 e0       	ldi	r24, 0x00	; 0
     f24:	37 d9       	rcall	.-3474   	; 0x194 <UPDI::updi_reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:273
  do { delay_micros(50); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_RSTSYS));
     f26:	88 23       	and	r24, r24
     f28:	09 f4       	brne	.+2      	; 0xf2c <UPDI::runtime(unsigned char)+0x4be>
     f2a:	d5 ce       	rjmp	.-598    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
delay_micros():
     f2c:	e6 ea       	ldi	r30, 0xA6	; 166
     f2e:	ea 95       	dec	r30
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     f30:	f1 f7       	brne	.-4      	; 0xf2e <UPDI::runtime(unsigned char)+0x4c0>
     f32:	00 c0       	rjmp	.+0      	; 0xf34 <UPDI::runtime(unsigned char)+0x4c6>
enter_userrow():
     f34:	80 e2       	ldi	r24, 0x20	; 32
     f36:	91 d9       	rcall	.-3294   	; 0x25a <UPDI::is_sys_stat(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:274
  do { delay_micros(50); } while (!UPDI::is_sys_stat(UPDI::UPDI_SYS_UROWPROG));
     f38:	81 11       	cpse	r24, r1
     f3a:	f8 cf       	rjmp	.-16     	; 0xf2c <UPDI::runtime(unsigned char)+0x4be>
delay_micros():
     f3c:	f6 ea       	ldi	r31, 0xA6	; 166
     f3e:	fa 95       	dec	r31
     f40:	f1 f7       	brne	.-4      	; 0xf3e <UPDI::runtime(unsigned char)+0x4d0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:603

bool NVM::write_userrow (size_t byte_count) {
  if (!UPDI::enter_userrow()) return false;

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = NVM::nvm_user_sig_offset;
     f42:	00 c0       	rjmp	.+0      	; 0xf44 <UPDI::runtime(unsigned char)+0x4d6>
enter_userrow():
     f44:	84 e0       	ldi	r24, 0x04	; 4
     f46:	89 d9       	rcall	.-3310   	; 0x25a <UPDI::is_sys_stat(unsigned char)>
     f48:	88 23       	and	r24, r24
     f4a:	c1 f3       	breq	.-16     	; 0xf3c <UPDI::runtime(unsigned char)+0x4ce>
write_userrow():
     f4c:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
     f50:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
     f54:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
     f58:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
     f5c:	80 93 32 38 	sts	0x3832, r24	; 0x803832 <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:604
  set_repeat[2] = (uint8_t)byte_count - 1;
     f60:	90 93 33 38 	sts	0x3833, r25	; 0x803833 <NVM::set_ptr+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:605
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
     f64:	a0 93 34 38 	sts	0x3834, r26	; 0x803834 <NVM::set_ptr+0x4>
     f68:	b0 93 35 38 	sts	0x3835, r27	; 0x803835 <NVM::set_ptr+0x5>
     f6c:	8f ef       	ldi	r24, 0xFF	; 255
     f6e:	80 0f       	add	r24, r16
     f70:	80 93 2d 38 	sts	0x382D, r24	; 0x80382d <NVM::set_repeat+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:606
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     f74:	65 e0       	ldi	r22, 0x05	; 5
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	80 e3       	ldi	r24, 0x30	; 48
     f7a:	98 e3       	ldi	r25, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:607
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
     f7c:	eb d8       	rcall	.-3626   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     f7e:	88 23       	and	r24, r24
     f80:	09 f4       	brne	.+2      	; 0xf84 <UPDI::runtime(unsigned char)+0x516>
     f82:	a9 ce       	rjmp	.-686    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     f84:	c3 d8       	rcall	.-3706   	; 0x10c <UPDI::RECV()>
     f86:	80 34       	cpi	r24, 0x40	; 64
     f88:	09 f0       	breq	.+2      	; 0xf8c <UPDI::runtime(unsigned char)+0x51e>
     f8a:	a5 ce       	rjmp	.-694    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     f8c:	65 e0       	ldi	r22, 0x05	; 5
     f8e:	70 e0       	ldi	r23, 0x00	; 0
     f90:	8b e2       	ldi	r24, 0x2B	; 43
     f92:	98 e3       	ldi	r25, 0x38	; 56
     f94:	df d8       	rcall	.-3650   	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
     f96:	88 23       	and	r24, r24
     f98:	09 f4       	brne	.+2      	; 0xf9c <UPDI::runtime(unsigned char)+0x52e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:613

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  uint8_t* q = &JTAG2::packet.body[266];
  do {
    *q++ = *p;
     f9a:	9d ce       	rjmp	.-710    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     f9c:	37 e6       	ldi	r19, 0x67	; 103
     f9e:	e3 2e       	mov	r14, r19
     fa0:	38 e3       	ldi	r19, 0x38	; 56
     fa2:	f3 2e       	mov	r15, r19
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:614
    if (!UPDI::SEND(*p++)) return false;
     fa4:	09 59       	subi	r16, 0x99	; 153
     fa6:	17 4c       	sbci	r17, 0xC7	; 199
     fa8:	f7 01       	movw	r30, r14
     faa:	82 89       	ldd	r24, Z+18	; 0x12
     fac:	ee 5e       	subi	r30, 0xEE	; 238
     fae:	fe 4f       	sbci	r31, 0xFE	; 254
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:615
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
     fb0:	80 83       	st	Z, r24
     fb2:	f7 01       	movw	r30, r14
     fb4:	82 89       	ldd	r24, Z+18	; 0x12
     fb6:	b6 d8       	rcall	.-3732   	; 0x124 <UPDI::SEND(unsigned char)>
     fb8:	88 23       	and	r24, r24
     fba:	09 f4       	brne	.+2      	; 0xfbe <UPDI::runtime(unsigned char)+0x550>
     fbc:	8c ce       	rjmp	.-744    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:616
  } while (--byte_count);
     fbe:	a6 d8       	rcall	.-3764   	; 0x10c <UPDI::RECV()>
     fc0:	80 34       	cpi	r24, 0x40	; 64
     fc2:	09 f0       	breq	.+2      	; 0xfc6 <UPDI::runtime(unsigned char)+0x558>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:618

  UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_SYS_CTRLA, UPDI::UPDI_SET_UROWDONE);
     fc4:	88 ce       	rjmp	.-752    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     fc6:	ff ef       	ldi	r31, 0xFF	; 255
     fc8:	ef 1a       	sub	r14, r31
     fca:	ff 0a       	sbc	r15, r31
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
     fcc:	e0 16       	cp	r14, r16
     fce:	f1 06       	cpc	r15, r17
     fd0:	59 f7       	brne	.-42     	; 0xfa8 <UPDI::runtime(unsigned char)+0x53a>
     fd2:	62 e0       	ldi	r22, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:619
  do { delay_micros(50); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_UROWPROG));
     fd4:	8a e0       	ldi	r24, 0x0A	; 10
     fd6:	d5 d8       	rcall	.-3670   	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>
delay_micros():
     fd8:	86 ea       	ldi	r24, 0xA6	; 166
     fda:	8a 95       	dec	r24
     fdc:	f1 f7       	brne	.-4      	; 0xfda <UPDI::runtime(unsigned char)+0x56c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:620
  UPDI::set_cs_stat(UPDI::UPDI_CS_ASI_KEY_STATUS, UPDI::UPDI_KEY_UROWWRITE);
     fde:	00 c0       	rjmp	.+0      	; 0xfe0 <UPDI::runtime(unsigned char)+0x572>
write_userrow():
     fe0:	84 e0       	ldi	r24, 0x04	; 4
     fe2:	3b d9       	rcall	.-3466   	; 0x25a <UPDI::is_sys_stat(unsigned char)>
     fe4:	81 11       	cpse	r24, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:621
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
     fe6:	f8 cf       	rjmp	.-16     	; 0xfd8 <UPDI::runtime(unsigned char)+0x56a>
     fe8:	60 e2       	ldi	r22, 0x20	; 32
     fea:	87 e0       	ldi	r24, 0x07	; 7
     fec:	ca d8       	rcall	.-3692   	; 0x182 <UPDI::set_cs_stat(unsigned char, unsigned char)>
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	d1 d8       	rcall	.-3678   	; 0x194 <UPDI::updi_reset(bool)>
     ff2:	88 23       	and	r24, r24
     ff4:	09 f4       	brne	.+2      	; 0xff8 <UPDI::runtime(unsigned char)+0x58a>
     ff6:	6f ce       	rjmp	.-802    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
     ff8:	80 e0       	ldi	r24, 0x00	; 0
     ffa:	cc d8       	rcall	.-3688   	; 0x194 <UPDI::updi_reset(bool)>
     ffc:	98 2f       	mov	r25, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:622
  UPDI_CONTROL |= _BV(UPDI::UPDI_URWR_bp);
     ffe:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:473
        }
        else {
          if (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS)) break;
          if (!(UPDI_LASTL & UPDI::UPDI_SYS_NVMPROG)) break;
        }
        _result = NVM::write_memory();
    1000:	09 f4       	brne	.+2      	; 0x1004 <UPDI::runtime(unsigned char)+0x596>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:170
        }
        else {
          /* デバイス施錠されている場合 */
          if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp))
            return NVM::write_userrow(byte_count);
          start_addr += NVM::nvm_user_sig_offset;
    1002:	69 ce       	rjmp	.-814    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    1004:	e5 9a       	sbi	0x1c, 5	; 28
_ZN4UPDI7runtimeEh():
    1006:	99 83       	std	Y+1, r25	; 0x01
    1008:	42 ce       	rjmp	.-892    	; 0xc8e <UPDI::runtime(unsigned char)+0x220>
write_memory():
    100a:	80 91 5b 38 	lds	r24, 0x385B	; 0x80385b <NVM::nvm_user_sig_offset>
    100e:	90 91 5c 38 	lds	r25, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
    1012:	a0 91 5d 38 	lds	r26, 0x385D	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
    1016:	b0 91 5e 38 	lds	r27, 0x385E	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
    101a:	c8 0e       	add	r12, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:187
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
    101c:	d9 1e       	adc	r13, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:189
          /* 書く前にページ消去 */
          if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
    101e:	ea 1e       	adc	r14, r26
    1020:	fb 1e       	adc	r15, r27
    1022:	62 ce       	rjmp	.-828    	; 0xce8 <UPDI::runtime(unsigned char)+0x27a>
    1024:	ee 9b       	sbis	0x1d, 6	; 29
    1026:	f0 ce       	rjmp	.-544    	; 0xe08 <UPDI::runtime(unsigned char)+0x39a>
    1028:	88 e0       	ldi	r24, 0x08	; 8
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:190
          if (!UPDI::st8(start_addr, 0xFF)) return false;
    102a:	68 dc       	rcall	.-1840   	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
    102c:	88 23       	and	r24, r24
    102e:	09 f4       	brne	.+2      	; 0x1032 <UPDI::runtime(unsigned char)+0x5c4>
    1030:	52 ce       	rjmp	.-860    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    1032:	4f ef       	ldi	r20, 0xFF	; 255
    1034:	c7 01       	movw	r24, r14
    1036:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:191
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
    1038:	b2 d8       	rcall	.-3740   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
    103a:	88 23       	and	r24, r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:204
    }
  }
  else {
    /* ここは 1byte単位書込で通る */
    uint8_t data = JTAG2::packet.body[10];
    switch (mem_type) {
    103c:	09 f4       	brne	.+2      	; 0x1040 <UPDI::runtime(unsigned char)+0x5d2>
    103e:	4b ce       	rjmp	.-874    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    1040:	e2 9a       	sbi	0x1c, 2	; 28
    1042:	7e ce       	rjmp	.-772    	; 0xd40 <UPDI::runtime(unsigned char)+0x2d2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:225
      case JTAG2::MTYPE_USERSIG : {       // 0xC5

        /* AVR_EB系統の特別な SIGROW==BOOTROW バイト書込 */
        /* この系統では 0x1100からの64byte は BOOTROWで、Flash領域として書ける */
        /* それ以外は書込不可か EEPROMとして扱う */
        if (mem_type != JTAG2::MTYPE_USERSIG) {
    1044:	9b e3       	ldi	r25, 0x3B	; 59
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:226
          if (!bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) break;
    1046:	98 0f       	add	r25, r24
    1048:	92 30       	cpi	r25, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:234
        /* 普通ここは terminal mode の場合のみ通過するはず */
        /* AVR_DA/DB/DD/EA is Flash */
        /* この系統は Flash として実装されている */

        /* NVMCTRL v3 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp)) {
    104a:	08 f0       	brcs	.+2      	; 0x104e <UPDI::runtime(unsigned char)+0x5e0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:236
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
    104c:	dd ce       	rjmp	.-582    	; 0xe08 <UPDI::runtime(unsigned char)+0x39a>
    104e:	85 3c       	cpi	r24, 0xC5	; 197
    1050:	11 f0       	breq	.+4      	; 0x1056 <UPDI::runtime(unsigned char)+0x5e8>
    1052:	ef 9b       	sbis	0x1d, 7	; 29
    1054:	d9 ce       	rjmp	.-590    	; 0xe08 <UPDI::runtime(unsigned char)+0x39a>
    1056:	ef 9b       	sbis	0x1d, 7	; 29
    1058:	2c c0       	rjmp	.+88     	; 0x10b2 <UPDI::runtime(unsigned char)+0x644>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:237
            NVM::nvm_wait_v3();
    105a:	8c 2d       	mov	r24, r12
    105c:	9c 2d       	mov	r25, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:238
            if (!UPDI::st8(start_addr, 0xFF)) return false;
    105e:	9f 73       	andi	r25, 0x3F	; 63
    1060:	a1 f4       	brne	.+40     	; 0x108a <UPDI::runtime(unsigned char)+0x61c>
    1062:	9f ef       	ldi	r25, 0xFF	; 255
    1064:	b9 12       	cpse	r11, r25
    1066:	11 c0       	rjmp	.+34     	; 0x108a <UPDI::runtime(unsigned char)+0x61c>
    1068:	6b db       	rcall	.-2346   	; 0x740 <NVM::nvm_wait_v3()>
    106a:	4f ef       	ldi	r20, 0xFF	; 255
    106c:	c7 01       	movw	r24, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:239
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
    106e:	b6 01       	movw	r22, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:482
    if (!UPDI::SEND(*p++)) return false;
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
  } while (--byte_count);

  if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_EEPERW)) return false;
  return NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_NOCMD);
    1070:	96 d8       	rcall	.-3796   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
    1072:	88 23       	and	r24, r24
    1074:	09 f4       	brne	.+2      	; 0x1078 <UPDI::runtime(unsigned char)+0x60a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:212
      case JTAG2::MTYPE_LOCK_BITS :       // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {     // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
          return NVM::write_fuse_v3(start_addr, data);
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
    1076:	2f ce       	rjmp	.-930    	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    1078:	88 e0       	ldi	r24, 0x08	; 8
write_eeprom_v3():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:213
          return NVM::write_fuse_v2(start_addr, data);
    107a:	70 db       	rcall	.-2336   	; 0x75c <NVM::nvm_ctrl_v3(unsigned char)>
    107c:	5d ce       	rjmp	.-838    	; 0xd38 <UPDI::runtime(unsigned char)+0x2ca>
write_memory():
    107e:	ee 9b       	sbis	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:214
        return NVM::write_fuse(start_addr, data);
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <UPDI::runtime(unsigned char)+0x618>
    1082:	d6 dc       	rcall	.-1620   	; 0xa30 <NVM::write_fuse_v2(unsigned int, unsigned char)>
    1084:	59 ce       	rjmp	.-846    	; 0xd38 <UPDI::runtime(unsigned char)+0x2ca>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:244
            if (!NVM::nvm_ctrl_v3(NVM::NVM_V3_CMD_FLPER)) return false;
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
    1086:	f8 db       	rcall	.-2064   	; 0x878 <NVM::write_fuse(unsigned int, unsigned char)>
    1088:	57 ce       	rjmp	.-850    	; 0xd38 <UPDI::runtime(unsigned char)+0x2ca>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:245
            JTAG2::packet.body[11] = data;
    108a:	80 ff       	sbrs	r24, 0
    108c:	0e c0       	rjmp	.+28     	; 0x10aa <UPDI::runtime(unsigned char)+0x63c>
    108e:	e7 e6       	ldi	r30, 0x67	; 103
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:246
            JTAG2::packet.body[10] = 0xFF;
    1090:	f8 e3       	ldi	r31, 0x38	; 56
    1092:	b3 8a       	std	Z+19, r11	; 0x13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:247
            (uint8_t)start_addr--;
    1094:	8f ef       	ldi	r24, 0xFF	; 255
    1096:	82 8b       	std	Z+18, r24	; 0x12
    1098:	e1 e0       	ldi	r30, 0x01	; 1
    109a:	ce 1a       	sub	r12, r30
    109c:	d1 08       	sbc	r13, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:253
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
    109e:	e1 08       	sbc	r14, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:254
          return NVM::write_flash_v3(start_addr, byte_count);
    10a0:	f1 08       	sbc	r15, r1
    10a2:	e2 9a       	sbi	0x1c, 2	; 28
    10a4:	42 e0       	ldi	r20, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:250
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
    10a6:	50 e0       	ldi	r21, 0x00	; 0
    10a8:	44 ce       	rjmp	.-888    	; 0xd32 <UPDI::runtime(unsigned char)+0x2c4>
    10aa:	8f ef       	ldi	r24, 0xFF	; 255
    10ac:	80 93 7a 38 	sts	0x387A, r24	; 0x80387a <JTAG2::packet+0x13>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:258
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
          return NVM::write_flash_v3(start_addr, byte_count);
        }

        /* NVMCTRL v2 */
        if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp)) {
    10b0:	f8 cf       	rjmp	.-16     	; 0x10a2 <UPDI::runtime(unsigned char)+0x634>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:260
          /* アドレス先頭かつ0xFF書込ならページ消去 */
          if (((uint8_t)start_addr & 63) == 0 && data == 0xFF) {
    10b2:	ee 9b       	sbis	0x1d, 6	; 29
    10b4:	a9 ce       	rjmp	.-686    	; 0xe08 <UPDI::runtime(unsigned char)+0x39a>
    10b6:	8c 2d       	mov	r24, r12
    10b8:	9c 2d       	mov	r25, r12
    10ba:	9f 73       	andi	r25, 0x3F	; 63
    10bc:	69 f4       	brne	.+26     	; 0x10d8 <UPDI::runtime(unsigned char)+0x66a>
    10be:	ff ef       	ldi	r31, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:261
            if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_FLPER)) return false;
    10c0:	bf 12       	cpse	r11, r31
    10c2:	0a c0       	rjmp	.+20     	; 0x10d8 <UPDI::runtime(unsigned char)+0x66a>
    10c4:	88 e0       	ldi	r24, 0x08	; 8
    10c6:	1a dc       	rcall	.-1996   	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
    10c8:	88 23       	and	r24, r24
    10ca:	09 f4       	brne	.+2      	; 0x10ce <UPDI::runtime(unsigned char)+0x660>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:262
            if (!UPDI::st8(start_addr, 0xFF)) return false;
    10cc:	04 ce       	rjmp	.-1016   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    10ce:	4f ef       	ldi	r20, 0xFF	; 255
    10d0:	c7 01       	movw	r24, r14
    10d2:	b6 01       	movw	r22, r12
    10d4:	64 d8       	rcall	.-3896   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
    10d6:	30 ce       	rjmp	.-928    	; 0xd38 <UPDI::runtime(unsigned char)+0x2ca>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:267
            return true;
          }
          /* Flash は偶数単位でしか書けないため偶数化する */
          /* 他方のバイトには0xFFを補完 */
          if ((uint8_t)start_addr & 1) {
    10d8:	80 ff       	sbrs	r24, 0
    10da:	0e c0       	rjmp	.+28     	; 0x10f8 <UPDI::runtime(unsigned char)+0x68a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:268
            JTAG2::packet.body[11] = data;
    10dc:	e7 e6       	ldi	r30, 0x67	; 103
    10de:	f8 e3       	ldi	r31, 0x38	; 56
    10e0:	b3 8a       	std	Z+19, r11	; 0x13
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:269
            JTAG2::packet.body[10] = 0xFF;
    10e2:	8f ef       	ldi	r24, 0xFF	; 255
    10e4:	82 8b       	std	Z+18, r24	; 0x12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:270
            (uint8_t)start_addr--;
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	c8 1a       	sub	r12, r24
    10ea:	d1 08       	sbc	r13, r1
    10ec:	e1 08       	sbc	r14, r1
    10ee:	f1 08       	sbc	r15, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:276
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
          }
          byte_count = 2;
          UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
    10f0:	e2 9a       	sbi	0x1c, 2	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:277
          return NVM::write_flash_v2(start_addr, byte_count);
    10f2:	42 e0       	ldi	r20, 0x02	; 2
    10f4:	50 e0       	ldi	r21, 0x00	; 0
    10f6:	25 ce       	rjmp	.-950    	; 0xd42 <UPDI::runtime(unsigned char)+0x2d4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:273
            JTAG2::packet.body[11] = data;
            JTAG2::packet.body[10] = 0xFF;
            (uint8_t)start_addr--;
          }
          else {
            JTAG2::packet.body[11] = 0xFF;
    10f8:	8f ef       	ldi	r24, 0xFF	; 255
    10fa:	80 93 7a 38 	sts	0x387A, r24	; 0x80387a <JTAG2::packet+0x13>
    10fe:	f8 cf       	rjmp	.-16     	; 0x10f0 <UPDI::runtime(unsigned char)+0x682>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:286
      }
    }
  }
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN3_bp))
    return NVM::write_eeprom_v3(start_addr, byte_count);
  if (bit_is_set(UPDI_NVMCTRL, UPDI::UPDI_GEN2_bp))
    1100:	ee 9b       	sbis	0x1d, 6	; 29
    1102:	2f c0       	rjmp	.+94     	; 0x1162 <UPDI::runtime(unsigned char)+0x6f4>
write_eeprom_v2():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:451
  return NVM::nvm_wait() == 0;
}

/* NVMCTRL v2 */
bool NVM::write_eeprom_v2 (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
    1104:	8f 3f       	cpi	r24, 0xFF	; 255
    1106:	91 05       	cpc	r25, r1
    1108:	11 f0       	breq	.+4      	; 0x110e <UPDI::runtime(unsigned char)+0x6a0>
    110a:	08 f0       	brcs	.+2      	; 0x110e <UPDI::runtime(unsigned char)+0x6a0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:452
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
    110c:	e4 cd       	rjmp	.-1080   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    110e:	83 e1       	ldi	r24, 0x13	; 19
    1110:	f5 db       	rcall	.-2070   	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
    1112:	97 e6       	ldi	r25, 0x67	; 103
    1114:	a9 2e       	mov	r10, r25
    1116:	98 e3       	ldi	r25, 0x38	; 56
    1118:	b9 2e       	mov	r11, r25
    111a:	09 59       	subi	r16, 0x99	; 153
    111c:	17 4c       	sbci	r17, 0xC7	; 199
    111e:	88 23       	and	r24, r24
    1120:	09 f4       	brne	.+2      	; 0x1124 <UPDI::runtime(unsigned char)+0x6b6>
    1122:	d9 cd       	rjmp	.-1102   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:455
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if ((NVM::nvm_wait() & 0x70) != 0) return false;
    1124:	9b db       	rcall	.-2250   	; 0x85c <NVM::nvm_wait()>
    1126:	80 77       	andi	r24, 0x70	; 112
    1128:	09 f0       	breq	.+2      	; 0x112c <UPDI::runtime(unsigned char)+0x6be>
    112a:	d5 cd       	rjmp	.-1110   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    112c:	26 01       	movw	r4, r12
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:456
    if (!UPDI::st8(start_addr++, *p++)) return false;
    112e:	37 01       	movw	r6, r14
    1130:	ff ef       	ldi	r31, 0xFF	; 255
    1132:	4f 1a       	sub	r4, r31
    1134:	5f 0a       	sbc	r5, r31
    1136:	6f 0a       	sbc	r6, r31
    1138:	7f 0a       	sbc	r7, r31
    113a:	f5 01       	movw	r30, r10
    113c:	42 89       	ldd	r20, Z+18	; 0x12
    113e:	c7 01       	movw	r24, r14
    1140:	b6 01       	movw	r22, r12
    1142:	2d d8       	rcall	.-4006   	; 0x19e <UPDI::st8(unsigned long, unsigned char)>
    1144:	88 23       	and	r24, r24
    1146:	09 f4       	brne	.+2      	; 0x114a <UPDI::runtime(unsigned char)+0x6dc>
    1148:	c6 cd       	rjmp	.-1140   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    114a:	ff ef       	ldi	r31, 0xFF	; 255
    114c:	af 1a       	sub	r10, r31
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:457
  } while (--byte_count);
    114e:	bf 0a       	sbc	r11, r31
    1150:	0a 15       	cp	r16, r10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:458
  return NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_NOCMD);
    1152:	1b 05       	cpc	r17, r11
    1154:	19 f4       	brne	.+6      	; 0x115c <UPDI::runtime(unsigned char)+0x6ee>
    1156:	80 e0       	ldi	r24, 0x00	; 0
    1158:	d1 db       	rcall	.-2142   	; 0x8fc <NVM::nvm_ctrl_v2(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:456
  if (byte_count == 0 || byte_count > 256) return false;
  if (!NVM::nvm_ctrl_v2(NVM::NVM_V2_CMD_EEERWR)) return false;
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if ((NVM::nvm_wait() & 0x70) != 0) return false;
    if (!UPDI::st8(start_addr++, *p++)) return false;
    115a:	ee cd       	rjmp	.-1060   	; 0xd38 <UPDI::runtime(unsigned char)+0x2ca>
_ZN4UPDI7runtimeEh():
    115c:	73 01       	movw	r14, r6
    115e:	62 01       	movw	r12, r4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:423
 * EEPROM領域バイト書込
 */

/* NVMCTRL v0 */
bool NVM::write_eeprom (uint32_t start_addr, size_t byte_count) {
  if (byte_count == 0 || byte_count > 256) return false;
    1160:	e1 cf       	rjmp	.-62     	; 0x1124 <UPDI::runtime(unsigned char)+0x6b6>
write_eeprom():
    1162:	8f 3f       	cpi	r24, 0xFF	; 255
    1164:	91 05       	cpc	r25, r1
    1166:	11 f0       	breq	.+4      	; 0x116c <UPDI::runtime(unsigned char)+0x6fe>
    1168:	08 f0       	brcs	.+2      	; 0x116c <UPDI::runtime(unsigned char)+0x6fe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:426

  /* NVMCTRL page buffer clear */
  NVM::nvm_wait();
    116a:	b5 cd       	rjmp	.-1174   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    116c:	77 db       	rcall	.-2322   	; 0x85c <NVM::nvm_wait()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:427
  if (!NVM::nvm_ctrl(NVM::NVM_CMD_PBC)) return false;
    116e:	84 e0       	ldi	r24, 0x04	; 4
    1170:	00 d9       	rcall	.-3584   	; 0x372 <NVM::nvm_ctrl(unsigned char)>
    1172:	88 23       	and	r24, r24
    1174:	09 f4       	brne	.+2      	; 0x1178 <UPDI::runtime(unsigned char)+0x70a>
    1176:	af cd       	rjmp	.-1186   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:428
  NVM::nvm_wait();
    1178:	71 db       	rcall	.-2334   	; 0x85c <NVM::nvm_wait()>
    117a:	c0 92 32 38 	sts	0x3832, r12	; 0x803832 <NVM::set_ptr+0x2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:431

  /* setting register pointer */
  _CAPS32(set_ptr[2])->dword = start_addr;
    117e:	d0 92 33 38 	sts	0x3833, r13	; 0x803833 <NVM::set_ptr+0x3>
    1182:	e0 92 34 38 	sts	0x3834, r14	; 0x803834 <NVM::set_ptr+0x4>
    1186:	f0 92 35 38 	sts	0x3835, r15	; 0x803835 <NVM::set_ptr+0x5>
    118a:	8f ef       	ldi	r24, 0xFF	; 255
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:432
  set_repeat[2] = (uint8_t)byte_count - 1;
    118c:	80 0f       	add	r24, r16
    118e:	80 93 2d 38 	sts	0x382D, r24	; 0x80382d <NVM::set_repeat+0x2>
    1192:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:433
  if (!UPDI::send_bytes(set_ptr, sizeof(set_ptr) - 1)) return false;
    1194:	70 e0       	ldi	r23, 0x00	; 0
    1196:	80 e3       	ldi	r24, 0x30	; 48
    1198:	98 e3       	ldi	r25, 0x38	; 56
    119a:	0e 94 aa 00 	call	0x154	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    119e:	88 23       	and	r24, r24
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <UPDI::runtime(unsigned char)+0x736>
    11a2:	99 cd       	rjmp	.-1230   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    11a4:	0e 94 86 00 	call	0x10c	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:434
  if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
    11a8:	80 34       	cpi	r24, 0x40	; 64
    11aa:	09 f0       	breq	.+2      	; 0x11ae <UPDI::runtime(unsigned char)+0x740>
    11ac:	94 cd       	rjmp	.-1240   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    11ae:	65 e0       	ldi	r22, 0x05	; 5
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:435
  if (!UPDI::send_bytes(set_repeat, sizeof(set_repeat))) return false;
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	8b e2       	ldi	r24, 0x2B	; 43
    11b4:	98 e3       	ldi	r25, 0x38	; 56
    11b6:	0e 94 aa 00 	call	0x154	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    11ba:	88 23       	and	r24, r24
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <UPDI::runtime(unsigned char)+0x752>
    11be:	8b cd       	rjmp	.-1258   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    11c0:	89 e7       	ldi	r24, 0x79	; 121
    11c2:	e8 2e       	mov	r14, r24
    11c4:	88 e3       	ldi	r24, 0x38	; 56
    11c6:	f8 2e       	mov	r15, r24
    11c8:	f7 01       	movw	r30, r14
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:440

  /* page buffer stored */
  uint8_t* p = &JTAG2::packet.body[10];
  do {
    if (!UPDI::SEND(*p++)) return false;
    11ca:	81 91       	ld	r24, Z+
    11cc:	7f 01       	movw	r14, r30
    11ce:	0e 94 92 00 	call	0x124	; 0x124 <UPDI::SEND(unsigned char)>
    11d2:	88 23       	and	r24, r24
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <UPDI::runtime(unsigned char)+0x76a>
    11d6:	7f cd       	rjmp	.-1282   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    11d8:	0e 94 86 00 	call	0x10c	; 0x10c <UPDI::RECV()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:441
    if (UPDI::UPDI_ACK != UPDI::RECV()) return false;
    11dc:	80 34       	cpi	r24, 0x40	; 64
    11de:	09 f0       	breq	.+2      	; 0x11e2 <UPDI::runtime(unsigned char)+0x774>
    11e0:	7a cd       	rjmp	.-1292   	; 0xcd6 <UPDI::runtime(unsigned char)+0x268>
    11e2:	01 50       	subi	r16, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:442
  } while (--byte_count);
    11e4:	11 09       	sbc	r17, r1
    11e6:	81 f7       	brne	.-32     	; 0x11c8 <UPDI::runtime(unsigned char)+0x75a>
    11e8:	f8 cd       	rjmp	.-1040   	; 0xdda <UPDI::runtime(unsigned char)+0x36c>
_ZN4UPDI7runtimeEh():
    11ea:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/NVM.cpp:209
    switch (mem_type) {
      /* FUSES/LOCKBITS 領域 */
      /* 常に奇数量絶対アドレス指定の特殊書込 */
      case JTAG2::MTYPE_LOCK_BITS :       // 0xB3
      case JTAG2::MTYPE_FUSE_BITS : {     // 0xB2
        if (UPDI::ld8(start_addr) == data && UPDI_LASTH == 0) return true;
    11ec:	0c cf       	rjmp	.-488    	; 0x1006 <UPDI::runtime(unsigned char)+0x598>
    11ee:	e7 e6       	ldi	r30, 0x67	; 103
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:477
        break;
      }
      case UPDI::UPDI_CMD_ERASE : {
        if (JTAG2::packet.body[1] == JTAG2::XMEGA_ERASE_CHIP
    11f0:	f8 e3       	ldi	r31, 0x38	; 56
    11f2:	81 85       	ldd	r24, Z+9	; 0x09
    11f4:	81 11       	cpse	r24, r1
    11f6:	4b cd       	rjmp	.-1386   	; 0xc8e <UPDI::runtime(unsigned char)+0x220>
    11f8:	82 85       	ldd	r24, Z+10	; 0x0a
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:478
          && _CAPS32(JTAG2::packet.body[2])->dword == 0) {
    11fa:	93 85       	ldd	r25, Z+11	; 0x0b
    11fc:	a4 85       	ldd	r26, Z+12	; 0x0c
    11fe:	b5 85       	ldd	r27, Z+13	; 0x0d
    1200:	89 2b       	or	r24, r25
    1202:	8a 2b       	or	r24, r26
    1204:	8b 2b       	or	r24, r27
    1206:	09 f0       	breq	.+2      	; 0x120a <UPDI::runtime(unsigned char)+0x79c>
    1208:	42 cd       	rjmp	.-1404   	; 0xc8e <UPDI::runtime(unsigned char)+0x220>
chip_erase():
    120a:	e0 9b       	sbis	0x1c, 0	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:313
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();
    120c:	35 c0       	rjmp	.+106    	; 0x1278 <UPDI::runtime(unsigned char)+0x80a>
    120e:	6a e0       	ldi	r22, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:316

  /* send nvmprog_key */
  if (!UPDI::send_bytes(UPDI::nvmprog_key, sizeof(UPDI::nvmprog_key))) return false;
    1210:	70 e0       	ldi	r23, 0x00	; 0
    1212:	82 ea       	ldi	r24, 0xA2	; 162
    1214:	9a e9       	ldi	r25, 0x9A	; 154
    1216:	0e 94 aa 00 	call	0x154	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    121a:	88 23       	and	r24, r24
    121c:	09 f4       	brne	.+2      	; 0x1220 <UPDI::runtime(unsigned char)+0x7b2>
    121e:	7d cc       	rjmp	.-1798   	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
    1220:	6a e0       	ldi	r22, 0x0A	; 10
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:319

  /* send erase_key */
  if (!UPDI::send_bytes(UPDI::erase_key, sizeof(UPDI::erase_key))) return false;
    1222:	70 e0       	ldi	r23, 0x00	; 0
    1224:	88 e9       	ldi	r24, 0x98	; 152
    1226:	9a e9       	ldi	r25, 0x9A	; 154
    1228:	0e 94 aa 00 	call	0x154	; 0x154 <UPDI::send_bytes(unsigned char const*, unsigned int)>
    122c:	88 23       	and	r24, r24
    122e:	09 f4       	brne	.+2      	; 0x1232 <UPDI::runtime(unsigned char)+0x7c4>
    1230:	74 cc       	rjmp	.-1816   	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
delay_micros():
    1232:	f6 ea       	ldi	r31, 0xA6	; 166
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
    1234:	fa 95       	dec	r31
    1236:	f1 f7       	brne	.-4      	; 0x1234 <UPDI::runtime(unsigned char)+0x7c6>
    1238:	00 c0       	rjmp	.+0      	; 0x123a <UPDI::runtime(unsigned char)+0x7cc>
is_cs_stat():
    123a:	87 e0       	ldi	r24, 0x07	; 7
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:201
  set_ptr[1] = UPDI::UPDI_LDCS | code;
  while (!UPDI::send_bytes(set_ptr, sizeof(set_ptr))) UPDI::BREAK();
  return UPDI::RECV();
}
inline bool UPDI::is_cs_stat (const uint8_t code, uint8_t check) {
  return check == (UPDI::get_cs_stat(code) & check);
    123c:	01 d8       	rcall	.-4094   	; 0x240 <UPDI::get_cs_stat(unsigned char)>
chip_erase():
    123e:	83 ff       	sbrs	r24, 3
    1240:	f8 cf       	rjmp	.-16     	; 0x1232 <UPDI::runtime(unsigned char)+0x7c4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:322

  /* send erase_key */
  if (!UPDI::send_bytes(UPDI::erase_key, sizeof(UPDI::erase_key))) return false;

  /* restart target : change mode */
  do { delay_micros(50); } while (!UPDI::is_key_stat(UPDI::UPSI_KEY_CHIPERASE));
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	0e 94 ca 00 	call	0x194	; 0x194 <UPDI::updi_reset(bool)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:323
  if (!UPDI::updi_reset(true) || !UPDI::updi_reset(false)) return false;
    1248:	88 23       	and	r24, r24
    124a:	09 f4       	brne	.+2      	; 0x124e <UPDI::runtime(unsigned char)+0x7e0>
    124c:	66 cc       	rjmp	.-1844   	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	0e 94 ca 00 	call	0x194	; 0x194 <UPDI::updi_reset(bool)>
    1254:	88 23       	and	r24, r24
    1256:	09 f4       	brne	.+2      	; 0x125a <UPDI::runtime(unsigned char)+0x7ec>
    1258:	60 cc       	rjmp	.-1856   	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
delay_micros():
    125a:	86 ea       	ldi	r24, 0xA6	; 166
    125c:	8a 95       	dec	r24
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
    125e:	f1 f7       	brne	.-4      	; 0x125c <UPDI::runtime(unsigned char)+0x7ee>
    1260:	00 c0       	rjmp	.+0      	; 0x1262 <UPDI::runtime(unsigned char)+0x7f4>
chip_erase():
    1262:	81 e0       	ldi	r24, 0x01	; 1
    1264:	0e 94 2d 01 	call	0x25a	; 0x25a <UPDI::is_sys_stat(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:326

  /* wait enable : chip erase mode success */
  do { delay_micros(50); } while (UPDI::is_sys_stat(UPDI::UPDI_SYS_LOCKSTATUS));
    1268:	81 11       	cpse	r24, r1
    126a:	f7 cf       	rjmp	.-18     	; 0x125a <UPDI::runtime(unsigned char)+0x7ec>
    126c:	e2 9a       	sbi	0x1c, 2	; 28
    126e:	e0 9b       	sbis	0x1c, 0	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:327
  UPDI_CONTROL |= _BV(UPDI::UPDI_ERFM_bp);
    1270:	05 c0       	rjmp	.+10     	; 0x127c <UPDI::runtime(unsigned char)+0x80e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:329

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    1272:	e1 98       	cbi	0x1c, 1	; 28
    1274:	1e d9       	rcall	.-3524   	; 0x4b2 <UPDI::enter_prog()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:330
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
    1276:	af cc       	rjmp	.-1698   	; 0xbd6 <UPDI::runtime(unsigned char)+0x168>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:333
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
    1278:	59 d9       	rcall	.-3406   	; 0x52c <HV_Pulse()>
    127a:	c9 cf       	rjmp	.-110    	; 0x120e <UPDI::runtime(unsigned char)+0x7a0>
    127c:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:313
 * HV制御はここを通る時のみ行われる
 */

bool UPDI::chip_erase (void) {
  /* Send HV Pulse */
  if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) HV_Pulse();
    127e:	8d d9       	rcall	.-3302   	; 0x59a <UPDI::enter_updi(bool)>
    1280:	88 23       	and	r24, r24
    1282:	09 f4       	brne	.+2      	; 0x1286 <UPDI::runtime(unsigned char)+0x818>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:333

  if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp)) {
    UPDI_CONTROL &= ~_BV(UPDI::UPDI_PROG_bp);
    return UPDI::enter_prog();
  }
  return UPDI::enter_updi(true) && UPDI::enter_prog();
    1284:	4a cc       	rjmp	.-1900   	; 0xb1a <UPDI::runtime(unsigned char)+0xac>
    1286:	f6 cf       	rjmp	.-20     	; 0x1274 <UPDI::runtime(unsigned char)+0x806>
_ZN4UPDI7runtimeEh():
    1288:	81 e0       	ldi	r24, 0x01	; 1
    128a:	00 d8       	rcall	.-4096   	; 0x28c <UPDI::Target_Reset(bool)>
    128c:	88 23       	and	r24, r24
    128e:	09 f4       	brne	.+2      	; 0x1292 <UPDI::runtime(unsigned char)+0x824>
    1290:	a2 cc       	rjmp	.-1724   	; 0xbd6 <UPDI::runtime(unsigned char)+0x168>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:484
          _result = UPDI::chip_erase();
        }
        break;
      }
      case UPDI::UPDI_CMD_GO : {
        _result = UPDI::Target_Reset(true) && UPDI::Target_Reset(false);
    1292:	80 e0       	ldi	r24, 0x00	; 0
    1294:	0e 94 46 01 	call	0x28c	; 0x28c <UPDI::Target_Reset(bool)>
    1298:	9e cc       	rjmp	.-1732   	; 0xbd6 <UPDI::runtime(unsigned char)+0x168>

0000129a <__vector_13>:
__vector_13():
    129a:	11 24       	eor	r1, r1
    129c:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <UPDI::nvmprog_key+0x7f6fde>
    12a0:	81 e0       	ldi	r24, 0x01	; 1
    12a2:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <UPDI::nvmprog_key+0x7f6fe4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:280
 *
 * ここから割込元に戻ることはない
 */

ISR(TCB0_INT_vect, ISR_NAKED) {
  __asm__ __volatile__ ("EOR R1,R1");
    12a6:	62 e0       	ldi	r22, 0x02	; 2
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:281
  TCB0_CTRLA = 0;
    12a8:	70 e0       	ldi	r23, 0x00	; 0
    12aa:	88 e3       	ldi	r24, 0x38	; 56
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:282
  TCB0_INTFLAGS = TCB_CAPT_bm;
    12ac:	98 e3       	ldi	r25, 0x38	; 56
    12ae:	cd d3       	rcall	.+1946   	; 0x1a4a <longjmp>

000012b0 <__vector_6>:
__vector_6():
    12b0:	1f 92       	push	r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:283
  longjmp(TIM::CONTEXT, 2);
    12b2:	0f 92       	push	r0
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	0f 92       	push	r0
    12b8:	11 24       	eor	r1, r1
    12ba:	2f 93       	push	r18
    12bc:	3f 93       	push	r19
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:248
 *
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
    12be:	4f 93       	push	r20
    12c0:	5f 93       	push	r21
    12c2:	6f 93       	push	r22
    12c4:	7f 93       	push	r23
    12c6:	8f 93       	push	r24
    12c8:	9f 93       	push	r25
    12ca:	af 93       	push	r26
    12cc:	bf 93       	push	r27
    12ce:	ef 93       	push	r30
    12d0:	ff 93       	push	r31
    12d2:	80 91 09 04 	lds	r24, 0x0409	; 0x800409 <UPDI::nvmprog_key+0x7f6967>
    12d6:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6967>
    12da:	12 9b       	sbis	0x02, 2	; 2
    12dc:	16 c0       	rjmp	.+44     	; 0x130a <__vector_6+0x5a>
System_Reset():
    12de:	88 ed       	ldi	r24, 0xD8	; 216
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:250
  portRegister(RTS_SENSE_PIN).INTFLAGS =
  portRegister(RTS_SENSE_PIN).INTFLAGS;
    12e0:	91 e0       	ldi	r25, 0x01	; 1
    12e2:	84 bf       	out	0x34, r24	; 52
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:249
 * LOW Active で UPDIターゲットをリセットON/OFF
 * Deactive で 本体リセット
 */

ISR(portIntrruptVector(RTS_SENSE_PIN)) {
  portRegister(RTS_SENSE_PIN).INTFLAGS =
    12e4:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f659f>
__vector_6():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:252
  portRegister(RTS_SENSE_PIN).INTFLAGS;

  if ( digitalRead(RTS_SENSE_PIN) ) {
    12e8:	ff 91       	pop	r31
    12ea:	ef 91       	pop	r30
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
/*
 * 本体リセット
 */

void SYS::System_Reset (void) {
  _PROTECTED_WRITE(RSTCTRL_SWRR, RSTCTRL_SWRE_bm);
    12ec:	bf 91       	pop	r27
    12ee:	af 91       	pop	r26
    12f0:	9f 91       	pop	r25
    12f2:	8f 91       	pop	r24
    12f4:	7f 91       	pop	r23
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:271
    openDrainWrite(TRST_PIN, HIGH);

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
  }
}
    12f6:	6f 91       	pop	r22
    12f8:	5f 91       	pop	r21
    12fa:	4f 91       	pop	r20
    12fc:	3f 91       	pop	r19
    12fe:	2f 91       	pop	r18
    1300:	0f 90       	pop	r0
    1302:	0f be       	out	0x3f, r0	; 63
    1304:	0f 90       	pop	r0
    1306:	1f 90       	pop	r1
    1308:	18 95       	reti
    130a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <TIM::LED_Flash()>
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	0e 94 46 01 	call	0x28c	; 0x28c <UPDI::Target_Reset(bool)>
    1314:	21 9a       	sbi	0x04, 1	; 4
    1316:	00 00       	nop
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:258
    /* RTS 開放で本体リセット */
    SYS::System_Reset();
  }
  else {
    /* LED は点滅 */
    TIM::LED_Flash();
    1318:	21 98       	cbi	0x04, 1	; 4
    131a:	80 e0       	ldi	r24, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:261

    /* ターゲット再起動 */
    UPDI::Target_Reset(true);
    131c:	0e 94 46 01 	call	0x28c	; 0x28c <UPDI::Target_Reset(bool)>
    1320:	e3 cf       	rjmp	.-58     	; 0x12e8 <__vector_6+0x38>

00001322 <__vector_7>:
__vector_7():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:264

    /* ターゲットリセットパルス */
    openDrainWrite(TRST_PIN, LOW);
    1322:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <TIM::LED_Flash()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:266
    nop();
    openDrainWrite(TRST_PIN, HIGH);
    1326:	81 e0       	ldi	r24, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:269

    /* ターゲット再起動解除 */
    UPDI::Target_Reset(false);
    1328:	0e 94 46 01 	call	0x28c	; 0x28c <UPDI::Target_Reset(bool)>
    132c:	88 e0       	ldi	r24, 0x08	; 8
    132e:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6d64>
delay_micros():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:217
 * このハンドラから主処理に戻ることはない
 */

ISR(portIntrruptVector(SW_SENSE_PIN), ISR_NAKED) {
  /* LED は点滅 */
  TIM::LED_Flash();
    1332:	8f ec       	ldi	r24, 0xCF	; 207
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:220

  /* ターゲットリセットON */
  UPDI::Target_Reset(true);
    1334:	97 e0       	ldi	r25, 0x07	; 7
    1336:	01 97       	sbiw	r24, 0x01	; 1
    1338:	f1 f7       	brne	.-4      	; 0x1336 <__vector_7+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:221
  UPDI_USART.CTRLB = UPDI_USART_OFF;
    133a:	00 c0       	rjmp	.+0      	; 0x133c <__vector_7+0x1a>
    133c:	00 00       	nop
__vector_7():
    133e:	01 9a       	sbi	0x00, 1	; 0
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/delay_busywait.h:31
    1340:	10 92 11 04 	sts	0x0411, r1	; 0x800411 <UPDI::nvmprog_key+0x7f696f>
    1344:	09 98       	cbi	0x01, 1	; 1
    1346:	21 9a       	sbi	0x04, 1	; 4
    1348:	0e 94 54 01 	call	0x2a8	; 0x2a8 <TIM::LED_Blink()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:227

  /* チャタリング抑制 */
  delay_micros(800);

  /* ターゲットリセット維持 */
  pinMode(UPDI_TDAT_PIN, OUTPUT);
    134c:	30 9b       	sbis	0x06, 0	; 6
    134e:	fe cf       	rjmp	.-4      	; 0x134c <__vector_7+0x2a>
System_Reset():
    1350:	88 ed       	ldi	r24, 0xD8	; 216
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:228
  digitalWrite(UPDI_TDAT_PIN, LOW);
    1352:	91 e0       	ldi	r25, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:229
  openDrainWrite(TRST_PIN, LOW);
    1354:	84 bf       	out	0x34, r24	; 52
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:232

  /* LEDは 交互点滅 */
  TIM::LED_Blink();
    1356:	90 93 41 00 	sts	0x0041, r25	; 0x800041 <UPDI::nvmprog_key+0x7f659f>

0000135a <main>:
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:235

  /* 押している間は待機 */
  while (!digitalRead(SW_SENSE_PIN));
    135a:	f8 94       	cli
initVariant():
    135c:	24 e0       	ldi	r18, 0x04	; 4
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:87
    135e:	e0 e1       	ldi	r30, 0x10	; 16
    1360:	f4 e0       	ldi	r31, 0x04	; 4
    1362:	83 e0       	ldi	r24, 0x03	; 3
    1364:	98 e0       	ldi	r25, 0x08	; 8
    1366:	21 93       	st	Z+, r18
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/variants/tinyAVR2_20/variant.h:281
    "   DEC  R24     \n"
    "   BRNE 2b        " /* 3 loop PORTA to PORTC */
    : : "z" ((register8_t*)&PORTA_PIN0CTRL),
        "r" ((uint8_t)PORT_ISC_INPUT_DISABLE_gc)
      : "r24", "r25"
  );
    1368:	9a 95       	dec	r25
    136a:	e9 f7       	brne	.-6      	; 0x1366 <main+0xc>
    136c:	78 96       	adiw	r30, 0x18	; 24
    136e:	8a 95       	dec	r24
    1370:	c9 f7       	brne	.-14     	; 0x1364 <main+0xa>
_CLKCTRL_SETUP():
/Users/askn/Library/Arduino15/packages/MultiX-Zinnia/hardware/UPDI4AVR/0.2.7/cores/megaAVR/api/CLKCTRL_megaAVR.h:127
  // _PROTECTED_WRITE(CLKCTRL.MCLKCTRLA, CLKCTRL_CLKSEL_OSC20M_gc);

#else

  #if defined(_CLKCTRL_PDIV_)
  _PROTECTED_WRITE(CLKCTRL_MCLKCTRLB, _CLKCTRL_PDIV_ | CLKCTRL_PEN_bm);
    1372:	88 ed       	ldi	r24, 0xD8	; 216
    1374:	41 e0       	ldi	r20, 0x01	; 1
    1376:	50 e0       	ldi	r21, 0x00	; 0
    1378:	84 bf       	out	0x34, r24	; 52
    137a:	40 93 61 00 	sts	0x0061, r20	; 0x800061 <UPDI::nvmprog_key+0x7f65bf>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:17
#include <avr/io.h>

void SYS::setup (void) {

  /* ターゲットリセット開放 */
  pinControlRegister(TRST_PIN) = TRST_PIN_CONFIG;
    137e:	8c e0       	ldi	r24, 0x0C	; 12
    1380:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <UPDI::nvmprog_key+0x7f698f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:20

  /* 出力方向ポート */
  PORTA_DIRSET = _BV(pinPosition(HVP1_PIN))
    1384:	88 ef       	ldi	r24, 0xF8	; 248
    1386:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <UPDI::nvmprog_key+0x7f695f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:25
               | _BV(pinPosition(HVP2_PIN))
               | _BV(pinPosition(HV12_PIN))
               | _BV(pinPosition(LEDG_PIN))
               | _BV(pinPosition(LEDY_PIN));
  PORTB_DIRSET = _BV(pinPosition(HV8_PIN));
    138a:	80 e2       	ldi	r24, 0x20	; 32
    138c:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <UPDI::nvmprog_key+0x7f697f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:28

  /* USART 切替 LOW=ターゲット開通（PG_Disable） */
  PORTC_DIRSET = _BV(pinPosition(PGEN_PIN));
    1390:	81 e0       	ldi	r24, 0x01	; 1
    1392:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <UPDI::nvmprog_key+0x7f699f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:31

  /* LED 出力 */
  LEDG_EVOUT_MUX = LEDG_EVOUT_ALT;          /* OUT:PA7 */
    1396:	80 93 e0 05 	sts	0x05E0, r24	; 0x8005e0 <UPDI::nvmprog_key+0x7f6b3e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:32
  PORTMUX_CCLROUTEA = PORTMUX_LUT3_ALT1_gc; /* OUT:PA5 IN:PC0,PC1,PC2 */
    139a:	98 e0       	ldi	r25, 0x08	; 8
    139c:	90 93 e1 05 	sts	0x05E1, r25	; 0x8005e1 <UPDI::nvmprog_key+0x7f6b3f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:33
  PORTA_OUTSET = _BV(pinPosition(LEDG_PIN))
    13a0:	30 ea       	ldi	r19, 0xA0	; 160
    13a2:	30 93 05 04 	sts	0x0405, r19	; 0x800405 <UPDI::nvmprog_key+0x7f6963>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:37
               | _BV(pinPosition(LEDY_PIN));

  /* USART代替選択 */
  PORTMUX_USARTROUTEA = JTAG_PMUX_ALT | UPDI_PMUX_ALT;
    13a6:	35 e0       	ldi	r19, 0x05	; 5
    13a8:	30 93 e2 05 	sts	0x05E2, r19	; 0x8005e2 <UPDI::nvmprog_key+0x7f6b40>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:40

  /* JTAG ポート */
  pinControlRegister(JTAG_TXD_PIN) = JTAG_TXD_CONFIG;
    13ac:	90 93 52 04 	sts	0x0452, r25	; 0x800452 <UPDI::nvmprog_key+0x7f69b0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:41
  pinControlRegister(JTAG_RXD_PIN) = JTAG_RXD_CONFIG;
    13b0:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <UPDI::nvmprog_key+0x7f69af>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:44

  /* UPDI ポート */
  pinControlRegister(UPDI_TDAT_PIN) = UPDI_TDAT_CONFIG;
    13b4:	90 93 11 04 	sts	0x0411, r25	; 0x800411 <UPDI::nvmprog_key+0x7f696f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:47

  /* HV 発生器 */
  pinControlRegister(HVP1_PIN) = HVP1_PIN_CONFIG;
    13b8:	20 93 13 04 	sts	0x0413, r18	; 0x800413 <UPDI::nvmprog_key+0x7f6971>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:48
  pinControlRegister(HVP2_PIN) = HVP2_PIN_CONFIG;
    13bc:	44 e8       	ldi	r20, 0x84	; 132
    13be:	40 93 14 04 	sts	0x0414, r20	; 0x800414 <UPDI::nvmprog_key+0x7f6972>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:51

  /* SW1 割込許可 */
  pinControlRegister(SW_SENSE_PIN) = SW_SENSE_CONFIG;
    13c2:	4d e0       	ldi	r20, 0x0D	; 13
    13c4:	40 93 30 04 	sts	0x0430, r20	; 0x800430 <UPDI::nvmprog_key+0x7f698e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:54

  /* RTS 認識 */
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
    13c8:	49 e0       	ldi	r20, 0x09	; 9
    13ca:	40 93 12 04 	sts	0x0412, r20	; 0x800412 <UPDI::nvmprog_key+0x7f6970>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:57

  /* JP1 認識 */
  pinControlRegister(JP_SENSE_PIN) = JP_SENSE_CONFIG;
    13ce:	90 93 53 04 	sts	0x0453, r25	; 0x800453 <UPDI::nvmprog_key+0x7f69b1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:60

  /* 状態変数初期化 */
  UPDI_CONTROL = 0;
    13d2:	1c ba       	out	0x1c, r1	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:61
  UPDI_NVMCTRL = 0;
    13d4:	1d ba       	out	0x1d, r1	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:47

  /*
   * EVSYS信号分配
   */

  EVSYS_CHANNEL0 = EVSYS_CHANNEL0_CCL_LUT0_gc;
    13d6:	90 e1       	ldi	r25, 0x10	; 16
    13d8:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <UPDI::nvmprog_key+0x7f66ee>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:48
  EVSYS_CHANNEL1 = EVSYS_CHANNEL1_RTC_PIT_DIV128_gc;
    13dc:	9a e0       	ldi	r25, 0x0A	; 10
    13de:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <UPDI::nvmprog_key+0x7f66ef>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:49
  EVSYS_CHANNEL2 = EVSYS_CHANNEL2_CCL_LUT1_gc;
    13e2:	91 e1       	ldi	r25, 0x11	; 17
    13e4:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <UPDI::nvmprog_key+0x7f66f0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:50
  EVSYS_CHANNEL3 = EVSYS_CHANNEL3_PORTA_PIN5_gc;
    13e8:	9d e4       	ldi	r25, 0x4D	; 77
    13ea:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <UPDI::nvmprog_key+0x7f66f1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:51
  EVSYS_USERTCB0COUNT = EVSYS_USER_CHANNEL1_gc;
    13ee:	92 e0       	ldi	r25, 0x02	; 2
    13f0:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <UPDI::nvmprog_key+0x7f670f>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:52
  EVSYS_USERTCB1COUNT = EVSYS_USER_CHANNEL1_gc;
    13f4:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <UPDI::nvmprog_key+0x7f6711>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:53
  EVSYS_USERCCLLUT0A  = EVSYS_USER_CHANNEL3_gc;
    13f8:	20 93 a0 01 	sts	0x01A0, r18	; 0x8001a0 <UPDI::nvmprog_key+0x7f66fe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:54
  EVSYS_USERCCLLUT1A  = EVSYS_USER_CHANNEL3_gc;
    13fc:	20 93 a2 01 	sts	0x01A2, r18	; 0x8001a2 <UPDI::nvmprog_key+0x7f6700>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:61
  /*
   * CCL/LUT構築
   */

  /* TRUTH0: 010 is ON */
  CCL_TRUTH0    = CCL_TRUTH_2_bm;
    1400:	20 93 cb 01 	sts	0x01CB, r18	; 0x8001cb <UPDI::nvmprog_key+0x7f6729>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:62
  CCL_LUT0CTRLC = CCL_INSEL0_EVENTA_gc;
    1404:	93 e0       	ldi	r25, 0x03	; 3
    1406:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <UPDI::nvmprog_key+0x7f6728>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:63
  CCL_LUT0CTRLB = CCL_INSEL1_TCB1_gc;                       /* IN1:POS */
    140a:	20 ec       	ldi	r18, 0xC0	; 192
    140c:	20 93 c9 01 	sts	0x01C9, r18	; 0x8001c9 <UPDI::nvmprog_key+0x7f6727>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:64
  CCL_LUT0CTRLA = CCL_ENABLE_bm;
    1410:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <UPDI::nvmprog_key+0x7f6726>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:67

  /* TRUTH1: 001 010 is ON */
  CCL_TRUTH1    = CCL_TRUTH_1_bm | CCL_TRUTH_2_bm;
    1414:	26 e0       	ldi	r18, 0x06	; 6
    1416:	20 93 cf 01 	sts	0x01CF, r18	; 0x8001cf <UPDI::nvmprog_key+0x7f672d>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:68
  CCL_LUT1CTRLC = CCL_INSEL0_EVENTA_gc;
    141a:	90 93 ce 01 	sts	0x01CE, r25	; 0x8001ce <UPDI::nvmprog_key+0x7f672c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:69
  CCL_LUT1CTRLB = CCL_INSEL0_TCA0_gc | CCL_INSEL1_TCB1_gc;  /* IN0:POS IN1:POS */
    141e:	2a ec       	ldi	r18, 0xCA	; 202
    1420:	20 93 cd 01 	sts	0x01CD, r18	; 0x8001cd <UPDI::nvmprog_key+0x7f672b>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:70
  CCL_LUT1CTRLA = CCL_ENABLE_bm;
    1424:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <UPDI::nvmprog_key+0x7f672a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:76

  /* TRUTH3: 001 010 is ON */
  /* CCL_INSEL0_USART0_gc : USART0TX normal HIGH */
  /* CCL_INSEL1_IO_gc     : USART1RX normal HIGH */
  /* CCL_INSEL2_IO_gc     : USART1TX normal HIGH */
  CCL_TRUTH3    = (uint8_t) ~CCL_TRUTH_7_bm;
    1428:	2f e7       	ldi	r18, 0x7F	; 127
    142a:	20 93 d7 01 	sts	0x01D7, r18	; 0x8001d7 <UPDI::nvmprog_key+0x7f6735>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:77
  CCL_LUT3CTRLC = CCL_INSEL2_IO_gc;
    142e:	30 93 d6 01 	sts	0x01D6, r19	; 0x8001d6 <UPDI::nvmprog_key+0x7f6734>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:78
  CCL_LUT3CTRLB = CCL_INSEL0_USART0_gc | CCL_INSEL1_IO_gc;
    1432:	28 e5       	ldi	r18, 0x58	; 88
    1434:	20 93 d5 01 	sts	0x01D5, r18	; 0x8001d5 <UPDI::nvmprog_key+0x7f6733>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:79
  CCL_LUT3CTRLA = CCL_ENABLE_bm | CCL_OUTEN_bm;
    1438:	21 e4       	ldi	r18, 0x41	; 65
    143a:	20 93 d4 01 	sts	0x01D4, r18	; 0x8001d4 <UPDI::nvmprog_key+0x7f6732>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:82

  /* CCL 有効化 */
  CCL_CTRLA = CCL_RUNSTDBY_bm | CCL_ENABLE_bm;
    143e:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <UPDI::nvmprog_key+0x7f671e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:85

  /* RTC_PIT 有効化 */
  RTC_PITCTRLA = RTC_PITEN_bm;
    1442:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <UPDI::nvmprog_key+0x7f66ae>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:92
  /*
   * タイマー
   */

  /* TCA0 */
  TCA0_SPLIT_CTRLD = TCA_SPLIT_SPLITM_bm;
    1446:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <UPDI::nvmprog_key+0x7f6f61>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:93
  TCA0_SPLIT_LPER  = TCA0_STEP - 2;
    144a:	29 e8       	ldi	r18, 0x89	; 137
    144c:	20 93 26 0a 	sts	0x0A26, r18	; 0x800a26 <UPDI::nvmprog_key+0x7f6f84>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:94
  TCA0_SPLIT_LCMP0 = TCA0_STEP / 2;
    1450:	25 e4       	ldi	r18, 0x45	; 69
    1452:	20 93 28 0a 	sts	0x0A28, r18	; 0x800a28 <UPDI::nvmprog_key+0x7f6f86>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:95
  TCA0_SPLIT_HPER  = 1;
    1456:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <UPDI::nvmprog_key+0x7f6f85>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:96
  TCA0_SPLIT_HCMP0 = 1;     /* WOA3=PA3 */
    145a:	80 93 29 0a 	sts	0x0A29, r24	; 0x800a29 <UPDI::nvmprog_key+0x7f6f87>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:97
  TCA0_SPLIT_HCMP1 = 1;     /* WOA4=PA4 */
    145e:	80 93 2b 0a 	sts	0x0A2B, r24	; 0x800a2b <UPDI::nvmprog_key+0x7f6f89>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:98
  TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1024_gc;
    1462:	3f e8       	ldi	r19, 0x8F	; 143
    1464:	30 93 00 0a 	sts	0x0A00, r19	; 0x800a00 <UPDI::nvmprog_key+0x7f6f5e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:101

  /* TCB1 */
  TCB1_CTRLB = TCB_CNTMODE_PWM8_gc;
    1468:	37 e0       	ldi	r19, 0x07	; 7
    146a:	30 93 91 0a 	sts	0x0A91, r19	; 0x800a91 <UPDI::nvmprog_key+0x7f6fef>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:110
   *
   * RTS Deactive なら ハートビート
   * RTS Active なら フラッシュ
   */

  if ( digitalRead(RTS_SENSE_PIN) ) {
    146e:	12 9b       	sbis	0x02, 2	; 2
    1470:	91 c0       	rjmp	.+290    	; 0x1594 <main+0x23a>
LED_HeartBeat():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:150
 * LED動作切替
 */

/* ハートビート（待機中）*/
void TIM::LED_HeartBeat (void) {
  if (TIM::mode != 1) {
    1472:	30 91 50 38 	lds	r19, 0x3850	; 0x803850 <TIM::mode>
    1476:	31 30       	cpi	r19, 0x01	; 1
    1478:	81 f0       	breq	.+32     	; 0x149a <main+0x140>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:151
    TIM::mode = 1;
    147a:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:152
    TCB1_CCMP = TCB1_HBEAT;
    147e:	4a e8       	ldi	r20, 0x8A	; 138
    1480:	55 e4       	ldi	r21, 0x45	; 69
    1482:	40 93 9c 0a 	sts	0x0A9C, r20	; 0x800a9c <UPDI::nvmprog_key+0x7f6ffa>
    1486:	50 93 9d 0a 	sts	0x0A9D, r21	; 0x800a9d <UPDI::nvmprog_key+0x7f6ffb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:153
    TCB1_CNT = 0;
    148a:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f6ff8>
    148e:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f6ff9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:154
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_TCA0_gc;
    1492:	20 93 90 0a 	sts	0x0A90, r18	; 0x800a90 <UPDI::nvmprog_key+0x7f6fee>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:155
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
    1496:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <UPDI::nvmprog_key+0x7f6707>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:82
  };
}

/* 初期化 */
void JTAG2::setup (void) {
  JTAG_USART.BAUD = pgm_read_word( &BAUD_TABLE[JTAG2::BAUD_19200] );
    149a:	ed e9       	ldi	r30, 0x9D	; 157
    149c:	f0 e0       	ldi	r31, 0x00	; 0
    149e:	85 91       	lpm	r24, Z+
    14a0:	94 91       	lpm	r25, Z
    14a2:	80 93 28 08 	sts	0x0828, r24	; 0x800828 <UPDI::nvmprog_key+0x7f6d86>
    14a6:	90 93 29 08 	sts	0x0829, r25	; 0x800829 <UPDI::nvmprog_key+0x7f6d87>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:83
  JTAG_USART.CTRLA = JTAG_USART_CTRLA;
    14aa:	10 92 25 08 	sts	0x0825, r1	; 0x800825 <UPDI::nvmprog_key+0x7f6d83>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:84
  JTAG_USART.CTRLC = JTAG_USART_CTRLC;
    14ae:	83 e0       	ldi	r24, 0x03	; 3
    14b0:	80 93 27 08 	sts	0x0827, r24	; 0x800827 <UPDI::nvmprog_key+0x7f6d85>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:85
  JTAG_USART.CTRLB = JTAG_USART_OFF;
    14b4:	88 e8       	ldi	r24, 0x88	; 136
    14b6:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6d84>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:29
void UPDI::guardtime (void) {
  delay_micros(UPDI_GUARDTIME);
}

void UPDI::setup (void) {
  UPDI_USART.BAUD  = UPDI_BAUD_CALC;
    14ba:	80 eb       	ldi	r24, 0xB0	; 176
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	80 93 08 08 	sts	0x0808, r24	; 0x800808 <UPDI::nvmprog_key+0x7f6d66>
    14c2:	90 93 09 08 	sts	0x0809, r25	; 0x800809 <UPDI::nvmprog_key+0x7f6d67>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:30
  UPDI_USART.CTRLA = UPDI_USART_CTRLA;
    14c6:	8a e0       	ldi	r24, 0x0A	; 10
    14c8:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <UPDI::nvmprog_key+0x7f6d63>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:31
  UPDI_USART.CTRLC = UPDI_USART_CTRLC;
    14cc:	8b e2       	ldi	r24, 0x2B	; 43
    14ce:	80 93 07 08 	sts	0x0807, r24	; 0x800807 <UPDI::nvmprog_key+0x7f6d65>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:32
  UPDI_USART.CTRLB = UPDI_USART_ON;
    14d2:	88 ec       	ldi	r24, 0xC8	; 200
    14d4:	80 93 06 08 	sts	0x0806, r24	; 0x800806 <UPDI::nvmprog_key+0x7f6d64>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:33
  UPDI_CONTROL &= ~_BV(UPDI::UPDI_CLKU_bp);
    14d8:	e7 98       	cbi	0x1c, 7	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:36

  /* ソフトリセット後は ターゲットのリセットを解除 */
  if ( bit_is_set(RSTCTRL_RSTFR, RSTCTRL_SWRF_bp) ) UPDI::Target_Reset(false);
    14da:	80 91 40 00 	lds	r24, 0x0040	; 0x800040 <UPDI::nvmprog_key+0x7f659e>
    14de:	84 ff       	sbrs	r24, 4
    14e0:	03 c0       	rjmp	.+6      	; 0x14e8 <main+0x18e>
    14e2:	80 e0       	ldi	r24, 0x00	; 0
    14e4:	0e 94 46 01 	call	0x28c	; 0x28c <UPDI::Target_Reset(bool)>
ready():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:119
/*
 * 起動シーケンスの最後に実行
 */

void SYS::ready (void) {
  RSTCTRL_RSTFR = 0xFF;
    14e8:	8f ef       	ldi	r24, 0xFF	; 255
    14ea:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <UPDI::nvmprog_key+0x7f659e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:122

  /* 初期化中に検出された非同期割込をクリアする */
  portRegister(RTS_SENSE_PIN).INTFLAGS = 0xFF;
    14ee:	80 93 09 04 	sts	0x0409, r24	; 0x800409 <UPDI::nvmprog_key+0x7f6967>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:125

  /* 割込許可 */
  sei();
    14f2:	78 94       	sei
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:251
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
    14f4:	32 e0       	ldi	r19, 0x02	; 2
    14f6:	23 2e       	mov	r2, r19
    14f8:	31 2c       	mov	r3, r1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    14fa:	43 e0       	ldi	r20, 0x03	; 3
    14fc:	c4 2e       	mov	r12, r20
    14fe:	d1 2c       	mov	r13, r1
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:258
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? '2' : '0';
    else return false;
    JTAG2::packet.size = 2;
    1500:	52 e0       	ldi	r21, 0x02	; 2
    1502:	45 2e       	mov	r4, r21
    1504:	51 2c       	mov	r5, r1
    1506:	61 2c       	mov	r6, r1
    1508:	71 2c       	mov	r7, r1
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    150a:	6d e1       	ldi	r22, 0x1D	; 29
    150c:	86 2e       	mov	r8, r22
    150e:	91 2c       	mov	r9, r1
    1510:	a1 2c       	mov	r10, r1
    1512:	b1 2c       	mov	r11, r1
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    1514:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6d82>
    1518:	87 ff       	sbrs	r24, 7
    151a:	fc cf       	rjmp	.-8      	; 0x1514 <main+0x1ba>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    151c:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6d7e>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:126
  uint16_t _crc = ~0;
  uint8_t *p = (uint8_t*) &packet.soh;
  uint8_t *q = (uint8_t*) &packet.soh;

  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
    1520:	8b 31       	cpi	r24, 0x1B	; 27
    1522:	c1 f7       	brne	.-16     	; 0x1514 <main+0x1ba>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:127
  (*p++) = JTAG2::MESSAGE_START;
    1524:	80 93 67 38 	sts	0x3867, r24	; 0x803867 <JTAG2::packet>
    1528:	e8 e6       	ldi	r30, 0x68	; 104
    152a:	f8 e3       	ldi	r31, 0x38	; 56
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    152c:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6d82>
    1530:	87 ff       	sbrs	r24, 7
    1532:	fc cf       	rjmp	.-8      	; 0x152c <main+0x1d2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    1534:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6d7e>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:130
  /* 受信待ち（無限ループ）*/
  while (get() != JTAG2::MESSAGE_START);
  (*p++) = JTAG2::MESSAGE_START;

  /* 最初の7byte */
  for (int8_t i = 0; i < 7; i++) *p++ = get();
    1538:	81 93       	st	Z+, r24
    153a:	8f e6       	ldi	r24, 0x6F	; 111
    153c:	98 e3       	ldi	r25, 0x38	; 56
    153e:	8e 17       	cp	r24, r30
    1540:	9f 07       	cpc	r25, r31
    1542:	a1 f7       	brne	.-24     	; 0x152c <main+0x1d2>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:133

  /* STX 確認 */
  if (packet.stx != JTAG2::TOKEN) return false;
    1544:	80 91 6e 38 	lds	r24, 0x386E	; 0x80386e <JTAG2::packet+0x7>
    1548:	8e 30       	cpi	r24, 0x0E	; 14
    154a:	21 f7       	brne	.-56     	; 0x1514 <main+0x1ba>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:136

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;
    154c:	80 91 6a 38 	lds	r24, 0x386A	; 0x80386a <JTAG2::packet+0x3>
    1550:	90 91 6b 38 	lds	r25, 0x386B	; 0x80386b <JTAG2::packet+0x4>
    1554:	a0 91 6c 38 	lds	r26, 0x386C	; 0x80386c <JTAG2::packet+0x5>
    1558:	b0 91 6d 38 	lds	r27, 0x386D	; 0x80386d <JTAG2::packet+0x6>
    155c:	8a 30       	cpi	r24, 0x0A	; 10
    155e:	92 40       	sbci	r25, 0x02	; 2
    1560:	a1 05       	cpc	r26, r1
    1562:	b1 05       	cpc	r27, r1
    1564:	b8 f6       	brcc	.-82     	; 0x1514 <main+0x1ba>
    1566:	cf e6       	ldi	r28, 0x6F	; 111
    1568:	d8 e3       	ldi	r29, 0x38	; 56
    156a:	7e 01       	movw	r14, r28
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    156c:	8e ef       	ldi	r24, 0xFE	; 254
    156e:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
    1570:	20 91 6a 38 	lds	r18, 0x386A	; 0x80386a <JTAG2::packet+0x3>
    1574:	30 91 6b 38 	lds	r19, 0x386B	; 0x80386b <JTAG2::packet+0x4>
    1578:	82 17       	cp	r24, r18
    157a:	93 07       	cpc	r25, r19
    157c:	74 f4       	brge	.+28     	; 0x159a <main+0x240>
get():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:101
  pinMode(JTAG_TXD_PIN, INPUT_PULLUP);
  SYS::PG_Disable();
}

uint8_t JTAG2::get (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_RXCIF_bp);
    157e:	20 91 24 08 	lds	r18, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6d82>
    1582:	27 ff       	sbrs	r18, 7
    1584:	fc cf       	rjmp	.-8      	; 0x157e <main+0x224>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:102
  return JTAG_USART.RXDATAL;
    1586:	20 91 20 08 	lds	r18, 0x0820	; 0x800820 <UPDI::nvmprog_key+0x7f6d7e>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139

  /* パケット長確認 */
  if (packet.size > sizeof(packet.body)) return false;

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();
    158a:	d7 01       	movw	r26, r14
    158c:	2d 93       	st	X+, r18
    158e:	7d 01       	movw	r14, r26
    1590:	01 96       	adiw	r24, 0x01	; 1
    1592:	ee cf       	rjmp	.-36     	; 0x1570 <main+0x216>
setup():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:114

  if ( digitalRead(RTS_SENSE_PIN) ) {
    LED_HeartBeat();
  }
  else {
    LED_Flash();
    1594:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <TIM::LED_Flash()>
    1598:	80 cf       	rjmp	.-256    	; 0x149a <main+0x140>
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:139
    159a:	07 e6       	ldi	r16, 0x67	; 103
    159c:	18 e3       	ldi	r17, 0x38	; 56
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:121
  return _crc_ccitt_update(_crc, _data);
}

/* JTAG Receive */
bool JTAG2::packet_receive (void) {
  uint16_t _crc = ~0;
    159e:	8f ef       	ldi	r24, 0xFF	; 255
    15a0:	9f ef       	ldi	r25, 0xFF	; 255
packet_receive():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:142

  /* 残りを受信 */
  for (int16_t j = -2; j < packet.size_word[0]; j++) *p++ = get();

  /* 受信バッファが満たされたら CRC 確認 */
  while (p != q) _crc = JTAG2::crc16_update(_crc, *q++);
    15a2:	0e 15       	cp	r16, r14
    15a4:	1f 05       	cpc	r17, r15
    15a6:	31 f0       	breq	.+12     	; 0x15b4 <main+0x25a>
    15a8:	f8 01       	movw	r30, r16
    15aa:	61 91       	ld	r22, Z+
    15ac:	8f 01       	movw	r16, r30
crc16_update():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:116
void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
}

uint16_t JTAG2::crc16_update(uint16_t _crc, uint8_t _data) {
  return _crc_ccitt_update(_crc, _data);
    15ae:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <_crc_ccitt_update(unsigned int, unsigned char)>
    15b2:	f7 cf       	rjmp	.-18     	; 0x15a2 <main+0x248>
wakeup_jtag():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:385
  JTAG2::answer_transfer();
}

void JTAG2::wakeup_jtag (void) {
  for (;;) {
    if (JTAG2::packet_receive()) JTAG2::process_command();
    15b4:	89 2b       	or	r24, r25
    15b6:	09 f0       	breq	.+2      	; 0x15ba <main+0x260>
    15b8:	ad cf       	rjmp	.-166    	; 0x1514 <main+0x1ba>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:274
  packet.body[0] = JTAG2::RSP_PARAMETER;
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
    15ba:	a8 95       	wdr
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
  switch ( packet.body[0] ) {
    15bc:	80 91 6f 38 	lds	r24, 0x386F	; 0x80386f <JTAG2::packet+0x8>
    15c0:	88 30       	cpi	r24, 0x08	; 8
    15c2:	09 f4       	brne	.+2      	; 0x15c6 <main+0x26c>
    15c4:	ae c1       	rjmp	.+860    	; 0x1922 <main+0x5c8>
    15c6:	d0 f5       	brcc	.+116    	; 0x163c <main+0x2e2>
    15c8:	82 30       	cpi	r24, 0x02	; 2
    15ca:	09 f4       	brne	.+2      	; 0x15ce <main+0x274>
    15cc:	9f c0       	rjmp	.+318    	; 0x170c <main+0x3b2>
    15ce:	48 f4       	brcc	.+18     	; 0x15e2 <main+0x288>
    15d0:	88 23       	and	r24, r24
    15d2:	09 f4       	brne	.+2      	; 0x15d6 <main+0x27c>
    15d4:	ab c1       	rjmp	.+854    	; 0x192c <main+0x5d2>
    15d6:	81 30       	cpi	r24, 0x01	; 1
    15d8:	09 f4       	brne	.+2      	; 0x15dc <main+0x282>
    15da:	47 c0       	rjmp	.+142    	; 0x166a <main+0x310>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:377
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    15dc:	80 ea       	ldi	r24, 0xA0	; 160
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	d6 c0       	rjmp	.+428    	; 0x178e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    15e2:	84 30       	cpi	r24, 0x04	; 4
    15e4:	09 f4       	brne	.+2      	; 0x15e8 <main+0x28e>
    15e6:	79 c1       	rjmp	.+754    	; 0x18da <main+0x580>
    15e8:	08 f4       	brcc	.+2      	; 0x15ec <main+0x292>
    15ea:	d4 c0       	rjmp	.+424    	; 0x1794 <main+0x43a>
    15ec:	85 30       	cpi	r24, 0x05	; 5
    15ee:	b1 f7       	brne	.-20     	; 0x15dc <main+0x282>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:243
/*
 * Dummy SIGNATURE
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
    15f0:	80 91 70 38 	lds	r24, 0x3870	; 0x803870 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:246
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0]
    - (bit_is_set(UPDI_NVMCTRL, UPDI_BROW_bp) ? (uint8_t)NVM::EB_SIGROW
    15f4:	ec 99       	sbic	0x1d, 4	; 29
    15f6:	2e c1       	rjmp	.+604    	; 0x1854 <main+0x4fa>
main():
    15f8:	90 e0       	ldi	r25, 0x00	; 0
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:249
                                              : (uint8_t)NVM::BASE_SIGROW);
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    15fa:	e1 99       	sbic	0x1c, 1	; 28
    15fc:	49 c1       	rjmp	.+658    	; 0x1890 <main+0x536>
    15fe:	84 3b       	cpi	r24, 0xB4	; 180
    1600:	09 f0       	breq	.+2      	; 0x1604 <main+0x2aa>
    1602:	46 c1       	rjmp	.+652    	; 0x1890 <main+0x536>
    1604:	80 91 71 38 	lds	r24, 0x3871	; 0x803871 <JTAG2::packet+0xa>
    1608:	81 30       	cpi	r24, 0x01	; 1
    160a:	09 f0       	breq	.+2      	; 0x160e <main+0x2b4>
    160c:	41 c1       	rjmp	.+642    	; 0x1890 <main+0x536>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:245
 */

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0]
    160e:	80 91 75 38 	lds	r24, 0x3875	; 0x803875 <JTAG2::packet+0xe>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:250
    - (bit_is_set(UPDI_NVMCTRL, UPDI_BROW_bp) ? (uint8_t)NVM::EB_SIGROW
                                              : (uint8_t)NVM::BASE_SIGROW);
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    1612:	22 e8       	ldi	r18, 0x82	; 130
    1614:	20 93 6f 38 	sts	0x386F, r18	; 0x80386f <JTAG2::packet+0x8>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:251
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    1618:	e0 99       	sbic	0x1c, 0	; 28
    161a:	1e c1       	rjmp	.+572    	; 0x1858 <main+0x4fe>
    161c:	9f b3       	in	r25, 0x1f	; 31
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	91 11       	cpse	r25, r1
    1622:	80 e0       	ldi	r24, 0x00	; 0
    1624:	81 95       	neg	r24
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:258
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
                       : bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? '2' : '0';
    else return false;
    JTAG2::packet.size = 2;
    1626:	40 92 6a 38 	sts	0x386A, r4	; 0x80386a <JTAG2::packet+0x3>
    162a:	50 92 6b 38 	sts	0x386B, r5	; 0x80386b <JTAG2::packet+0x4>
    162e:	60 92 6c 38 	sts	0x386C, r6	; 0x80386c <JTAG2::packet+0x5>
    1632:	70 92 6d 38 	sts	0x386D, r7	; 0x80386d <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:259
    JTAG2::packet.body[1] = c;
    1636:	80 93 70 38 	sts	0x3870, r24	; 0x803870 <JTAG2::packet+0x9>
    163a:	65 c0       	rjmp	.+202    	; 0x1706 <main+0x3ac>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
    163c:	84 31       	cpi	r24, 0x14	; 20
    163e:	09 f4       	brne	.+2      	; 0x1642 <main+0x2e8>
    1640:	ea c0       	rjmp	.+468    	; 0x1816 <main+0x4bc>
    1642:	48 f4       	brcc	.+18     	; 0x1656 <main+0x2fc>
    1644:	8b 30       	cpi	r24, 0x0B	; 11
    1646:	50 f2       	brcs	.-108    	; 0x15dc <main+0x282>
    1648:	8d 30       	cpi	r24, 0x0D	; 13
    164a:	10 f0       	brcs	.+4      	; 0x1650 <main+0x2f6>
    164c:	8f 30       	cpi	r24, 0x0F	; 15
    164e:	31 f6       	brne	.-116    	; 0x15dc <main+0x282>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:338
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
      JTAG2::set_response(JTAG2::RSP_OK);
    1650:	80 e8       	ldi	r24, 0x80	; 128
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	9c c0       	rjmp	.+312    	; 0x178e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:275
}

/* JTAG Process */
inline void JTAG2::process_command (void) {
  wdt_reset();
  switch ( packet.body[0] ) {
    1656:	84 33       	cpi	r24, 0x34	; 52
    1658:	09 f4       	brne	.+2      	; 0x165c <main+0x302>
    165a:	46 c1       	rjmp	.+652    	; 0x18e8 <main+0x58e>
    165c:	86 33       	cpi	r24, 0x36	; 54
    165e:	09 f4       	brne	.+2      	; 0x1662 <main+0x308>
    1660:	73 c1       	rjmp	.+742    	; 0x1948 <main+0x5ee>
    1662:	85 31       	cpi	r24, 0x15	; 21
    1664:	09 f0       	breq	.+2      	; 0x1668 <main+0x30e>
    1666:	ba cf       	rjmp	.-140    	; 0x15dc <main+0x282>
    1668:	f3 cf       	rjmp	.-26     	; 0x1650 <main+0x2f6>
RTS_Disable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:107
void SYS::RTS_Enable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_CONFIG;
}

void SYS::RTS_Disable (void) {
  pinControlRegister(RTS_SENSE_PIN) = RTS_SENSE_DISABLE;
    166a:	88 e0       	ldi	r24, 0x08	; 8
    166c:	80 93 12 04 	sts	0x0412, r24	; 0x800412 <UPDI::nvmprog_key+0x7f6970>
WDT_ON():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:139
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }
    1670:	8b e0       	ldi	r24, 0x0B	; 11
    1672:	0e 94 8e 01 	call	0x31c	; 0x31c <SYS::WDT_SET(unsigned char)>
LED_Stop():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:187
}

/* 停止（UPDI許認可前）*/
/* TCA0はチャージポンプ駆動速度に変更 */
void TIM::LED_Stop (void) {
  if (TIM::mode != 0) {
    1676:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    167a:	88 23       	and	r24, r24
    167c:	41 f0       	breq	.+16     	; 0x168e <main+0x334>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:188
    TIM::mode = 0;
    167e:	10 92 50 38 	sts	0x3850, r1	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:189
    TCA0_SPLIT_CTRLA = TCA_SPLIT_RUNSTDBY_bm | TCA_SPLIT_ENABLE_bm | TCA_SPLIT_CLKSEL_DIV1_gc;
    1682:	81 e8       	ldi	r24, 0x81	; 129
    1684:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <UPDI::nvmprog_key+0x7f6f5e>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:190
    LEDG_EVOUT = EVSYS_USER_OFF_gc;
    1688:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <UPDI::nvmprog_key+0x7f6707>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:191
    digitalWrite(LEDG_PIN, LOW);
    168c:	0f 98       	cbi	0x01, 7	; 1
PG_Enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:95
/*
 * 各種ON/OFF
 */

void SYS::PG_Enable (void) {
  digitalWrite(PGEN_PIN, HIGH);
    168e:	48 9a       	sbi	0x09, 0	; 9
transfer_enable():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:90
  JTAG_USART.CTRLB = JTAG_USART_OFF;
}

void JTAG2::transfer_enable (void) {
  SYS::PG_Enable();
  pinMode(JTAG_TXD_PIN, OUTPUT);
    1690:	42 9a       	sbi	0x08, 2	; 8
    1692:	10 92 52 04 	sts	0x0452, r1	; 0x800452 <UPDI::nvmprog_key+0x7f69b0>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:91
  JTAG_USART.CTRLB = JTAG_USART_ON;
    1696:	88 ec       	ldi	r24, 0xC8	; 200
    1698:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6d84>
sign_on_response():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:175
  packet.body[3] = UPDI_NVMCTRL;
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
    169c:	80 92 6a 38 	sts	0x386A, r8	; 0x80386a <JTAG2::packet+0x3>
    16a0:	90 92 6b 38 	sts	0x386B, r9	; 0x80386b <JTAG2::packet+0x4>
    16a4:	a0 92 6c 38 	sts	0x386C, r10	; 0x80386c <JTAG2::packet+0x5>
    16a8:	b0 92 6d 38 	sts	0x386D, r11	; 0x80386d <JTAG2::packet+0x6>
    16ac:	e8 e7       	ldi	r30, 0x78	; 120
    16ae:	f0 e0       	ldi	r31, 0x00	; 0
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:177
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
    16b0:	84 91       	lpm	r24, Z
    16b2:	89 93       	st	Y+, r24
    16b4:	31 96       	adiw	r30, 0x01	; 1
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:176
}

/* SIGN_ON Response */
void JTAG2::sign_on_response (void) {
  packet.size = sizeof(sign_on_resp);
  for (uint8_t i = 0; i < sizeof(sign_on_resp); i++)
    16b6:	28 e3       	ldi	r18, 0x38	; 56
    16b8:	cc 38       	cpi	r28, 0x8C	; 140
    16ba:	d2 07       	cpc	r29, r18
    16bc:	c9 f7       	brne	.-14     	; 0x16b0 <main+0x356>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:182
    packet.body[i] = pgm_read_byte( &sign_on_resp[i] );
  /* SERNUMから Version情報を生成する */
  uint8_t* p = (uint8_t*) &SIGROW_SERNUM0;
  uint8_t* q = (uint8_t*) &SIGROW_SERNUM4;
  uint8_t* r = (uint8_t*) &packet.body[10];
    *r++ = *q++ ^ *p++ ^ *p++;
    16be:	80 91 07 11 	lds	r24, 0x1107	; 0x801107 <UPDI::nvmprog_key+0x7f7665>
    16c2:	90 91 03 11 	lds	r25, 0x1103	; 0x801103 <UPDI::nvmprog_key+0x7f7661>
    16c6:	89 27       	eor	r24, r25
    16c8:	90 91 04 11 	lds	r25, 0x1104	; 0x801104 <UPDI::nvmprog_key+0x7f7662>
    16cc:	89 27       	eor	r24, r25
    16ce:	80 93 79 38 	sts	0x3879, r24	; 0x803879 <JTAG2::packet+0x12>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:183
    *r++ = *q++ ^ *p++ ^ *p++;
    16d2:	80 91 08 11 	lds	r24, 0x1108	; 0x801108 <UPDI::nvmprog_key+0x7f7666>
    16d6:	90 91 05 11 	lds	r25, 0x1105	; 0x801105 <UPDI::nvmprog_key+0x7f7663>
    16da:	89 27       	eor	r24, r25
    16dc:	90 91 06 11 	lds	r25, 0x1106	; 0x801106 <UPDI::nvmprog_key+0x7f7664>
    16e0:	89 27       	eor	r24, r25
    16e2:	80 93 7a 38 	sts	0x387A, r24	; 0x80387a <JTAG2::packet+0x13>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:184
    *r++ = *q++;
    16e6:	80 91 09 11 	lds	r24, 0x1109	; 0x801109 <UPDI::nvmprog_key+0x7f7667>
    16ea:	80 93 7b 38 	sts	0x387B, r24	; 0x80387b <JTAG2::packet+0x14>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:185
    *r++ = *q++;
    16ee:	80 91 0a 11 	lds	r24, 0x110A	; 0x80110a <UPDI::nvmprog_key+0x7f7668>
    16f2:	80 93 7c 38 	sts	0x387C, r24	; 0x80387c <JTAG2::packet+0x15>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:186
    *r++ = *q++;
    16f6:	80 91 0b 11 	lds	r24, 0x110B	; 0x80110b <UPDI::nvmprog_key+0x7f7669>
    16fa:	80 93 7d 38 	sts	0x387D, r24	; 0x80387d <JTAG2::packet+0x16>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:187
    *r++ = *q++;
    16fe:	80 91 0c 11 	lds	r24, 0x110C	; 0x80110c <UPDI::nvmprog_key+0x7f766a>
    1702:	80 93 7e 38 	sts	0x387E, r24	; 0x80387e <JTAG2::packet+0x17>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:380
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    }
  }
  JTAG2::answer_transfer();
    1706:	0e 94 03 02 	call	0x406	; 0x406 <JTAG2::answer_transfer()>
    170a:	04 cf       	rjmp	.-504    	; 0x1514 <main+0x1ba>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:193
  JTAG2::answer_transfer();
}

/* CMND_SET_PARAMETER */
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
    170c:	f0 90 71 38 	lds	r15, 0x3871	; 0x803871 <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:194
  switch (packet.body[1]) {
    1710:	80 91 70 38 	lds	r24, 0x3870	; 0x803870 <JTAG2::packet+0x9>
    1714:	83 30       	cpi	r24, 0x03	; 3
    1716:	b1 f1       	breq	.+108    	; 0x1784 <main+0x42a>
    1718:	85 30       	cpi	r24, 0x05	; 5
    171a:	09 f0       	breq	.+2      	; 0x171e <main+0x3c4>
    171c:	99 cf       	rjmp	.-206    	; 0x1650 <main+0x2f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:203
      break;
    }
    /* JTAGインタフェース速度 */
    case JTAG2::PARAM_BAUD_RATE : {
      /* 対応範囲確認 */
      if ((param_val >= JTAG2::BAUD_LOWER) && (param_val <= JTAG2::BAUD_UPPER)) {
    171e:	8e ef       	ldi	r24, 0xFE	; 254
    1720:	8f 0d       	add	r24, r15
    1722:	88 31       	cpi	r24, 0x18	; 24
    1724:	90 f5       	brcc	.+100    	; 0x178a <main+0x430>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:204
        uint16_t baud = pgm_read_word( &BAUD_TABLE[param_val] );
    1726:	8f 2d       	mov	r24, r15
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	fc 01       	movw	r30, r24
    172c:	ee 0f       	add	r30, r30
    172e:	ff 1f       	adc	r31, r31
    1730:	eb 56       	subi	r30, 0x6B	; 107
    1732:	ff 4f       	sbci	r31, 0xFF	; 255
    1734:	c5 91       	lpm	r28, Z+
    1736:	d4 91       	lpm	r29, Z
    1738:	8e 01       	movw	r16, r28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:205
        if (baud) {
    173a:	20 97       	sbiw	r28, 0x00	; 0
    173c:	31 f1       	breq	.+76     	; 0x178a <main+0x430>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:207
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
    173e:	80 93 36 38 	sts	0x3836, r24	; 0x803836 <JTAG2::PARAM_BAUD_RATE_VAL>
    1742:	90 93 37 38 	sts	0x3837, r25	; 0x803837 <JTAG2::PARAM_BAUD_RATE_VAL+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:208
          JTAG2::set_response(JTAG2::RSP_OK);
    1746:	80 e8       	ldi	r24, 0x80	; 128
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:209
          JTAG2::answer_transfer();
    174e:	0e 94 03 02 	call	0x406	; 0x406 <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    1752:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6d82>
    1756:	86 ff       	sbrs	r24, 6
    1758:	fc cf       	rjmp	.-8      	; 0x1752 <main+0x3f8>
set_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:211
          /* 正常なら応答したのち速度変更 */
          PARAM_BAUD_RATE_VAL = (jtag_baud_rate_e) param_val;
          JTAG2::set_response(JTAG2::RSP_OK);
          JTAG2::answer_transfer();
          JTAG2::flush();
          if (baud < 64) {
    175a:	c0 34       	cpi	r28, 0x40	; 64
    175c:	d1 05       	cpc	r29, r1
    175e:	30 f4       	brcc	.+12     	; 0x176c <main+0x412>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:212
            JTAG_USART.CTRLB = JTAG_USART_DBLON;
    1760:	8a ec       	ldi	r24, 0xCA	; 202
    1762:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <UPDI::nvmprog_key+0x7f6d84>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:213
            baud <<= 1;
    1766:	8e 01       	movw	r16, r28
    1768:	00 0f       	add	r16, r16
    176a:	11 1f       	adc	r17, r17
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:215
          }
          JTAG_USART.BAUD = baud;
    176c:	00 93 28 08 	sts	0x0828, r16	; 0x800828 <UPDI::nvmprog_key+0x7f6d86>
    1770:	10 93 29 08 	sts	0x0829, r17	; 0x800829 <UPDI::nvmprog_key+0x7f6d87>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:217
          /* terminal mode を許可する速度 */
          if (param_val == JTAG2::BAUD_38400 || param_val == JTAG2::BAUD_666666)
    1774:	85 e0       	ldi	r24, 0x05	; 5
    1776:	f8 16       	cp	r15, r24
    1778:	19 f0       	breq	.+6      	; 0x1780 <main+0x426>
    177a:	98 e1       	ldi	r25, 0x18	; 24
    177c:	f9 12       	cpse	r15, r25
    177e:	ca ce       	rjmp	.-620    	; 0x1514 <main+0x1ba>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:218
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
    1780:	e6 9a       	sbi	0x1c, 6	; 28
    1782:	c8 ce       	rjmp	.-624    	; 0x1514 <main+0x1ba>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:197
bool JTAG2::set_parameter (void) {
  uint8_t param_val = packet.body[2];
  switch (packet.body[1]) {
    /* エミュレーションモード */
    case JTAG2::PARAM_EMU_MODE : {
      PARAM_EMU_MODE_VAL = param_val;
    1784:	f0 92 4f 38 	sts	0x384F, r15	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
    1788:	63 cf       	rjmp	.-314    	; 0x1650 <main+0x2f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:223
            UPDI_CONTROL |= _BV(UPDI::UPDI_TERM_bp);
          return false;
        }
      }
      /* 範囲違反は失敗応答 */
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_VALUE);
    178a:	86 ea       	ldi	r24, 0xA6	; 166
    178c:	90 e0       	ldi	r25, 0x00	; 0
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:377
    case JTAG2::CMND_LEAVE_PROGMODE : {
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_FAILED);
    178e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <JTAG2::set_response(JTAG2::jtag_response_e)>
    1792:	b9 cf       	rjmp	.-142    	; 0x1706 <main+0x3ac>
get_parameter():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    1794:	80 91 70 38 	lds	r24, 0x3870	; 0x803870 <JTAG2::packet+0x9>
    1798:	83 30       	cpi	r24, 0x03	; 3
    179a:	89 f1       	breq	.+98     	; 0x17fe <main+0x4a4>
    179c:	38 f4       	brcc	.+14     	; 0x17ac <main+0x452>
    179e:	81 30       	cpi	r24, 0x01	; 1
    17a0:	81 f0       	breq	.+32     	; 0x17c2 <main+0x468>
    17a2:	82 30       	cpi	r24, 0x02	; 2
    17a4:	b9 f0       	breq	.+46     	; 0x17d4 <main+0x47a>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:265
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
      break;
    }
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
    17a6:	81 ea       	ldi	r24, 0xA1	; 161
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	f1 cf       	rjmp	.-30     	; 0x178e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:234
}

/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    17ac:	85 30       	cpi	r24, 0x05	; 5
    17ae:	81 f1       	breq	.+96     	; 0x1810 <main+0x4b6>
    17b0:	86 30       	cpi	r24, 0x06	; 6
    17b2:	c9 f7       	brne	.-14     	; 0x17a6 <main+0x44c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:260
      packet.body[1] = PARAM_BAUD_RATE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
    17b4:	0e 94 97 01 	call	0x32e	; 0x32e <SYS::get_vcc()>
    17b8:	80 93 70 38 	sts	0x3870, r24	; 0x803870 <JTAG2::packet+0x9>
    17bc:	90 93 71 38 	sts	0x3871, r25	; 0x803871 <JTAG2::packet+0xa>
    17c0:	04 c0       	rjmp	.+8      	; 0x17ca <main+0x470>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:236
/* CMND_GET_PARAMETER */
void JTAG2::get_parameter (void) {
  volatile uint8_t &param_type = packet.body[1];
  switch (param_type) {
    case JTAG2::PARAM_HW_VER : {
      packet.body[1] = sign_on_resp[5];
    17c2:	80 93 70 38 	sts	0x3870, r24	; 0x803870 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:237
      packet.body[2] = sign_on_resp[9];
    17c6:	80 93 71 38 	sts	0x3871, r24	; 0x803871 <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:261
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_VTARGET : {
      _CAPS16(packet.body[1])->word = SYS::get_vcc();
      packet.size_word[0] = 3;
    17ca:	c0 92 6a 38 	sts	0x386A, r12	; 0x80386a <JTAG2::packet+0x3>
    17ce:	d0 92 6b 38 	sts	0x386B, r13	; 0x80386b <JTAG2::packet+0x4>
    17d2:	11 c0       	rjmp	.+34     	; 0x17f6 <main+0x49c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:242
      packet.body[2] = sign_on_resp[9];
      packet.size_word[0] = 3;
      break;
    }
    case JTAG2::PARAM_FW_VER : {
      packet.body[1] = sign_on_resp[3];
    17d4:	91 e0       	ldi	r25, 0x01	; 1
    17d6:	90 93 70 38 	sts	0x3870, r25	; 0x803870 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:243
      packet.body[2] = sign_on_resp[4];
    17da:	80 93 71 38 	sts	0x3871, r24	; 0x803871 <JTAG2::packet+0xa>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:244
      packet.body[3] = sign_on_resp[7];
    17de:	85 e3       	ldi	r24, 0x35	; 53
    17e0:	80 93 72 38 	sts	0x3872, r24	; 0x803872 <JTAG2::packet+0xb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:245
      packet.body[4] = sign_on_resp[8];
    17e4:	87 e0       	ldi	r24, 0x07	; 7
    17e6:	80 93 73 38 	sts	0x3873, r24	; 0x803873 <JTAG2::packet+0xc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:246
      packet.size_word[0] = 5;
    17ea:	a5 e0       	ldi	r26, 0x05	; 5
    17ec:	b0 e0       	ldi	r27, 0x00	; 0
    17ee:	a0 93 6a 38 	sts	0x386A, r26	; 0x80386a <JTAG2::packet+0x3>
    17f2:	b0 93 6b 38 	sts	0x386B, r27	; 0x80386b <JTAG2::packet+0x4>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:269
    default : {
      JTAG2::set_response(JTAG2::RSP_ILLEGAL_PARAMETER);
      return;
    }
  }
  packet.body[0] = JTAG2::RSP_PARAMETER;
    17f6:	81 e8       	ldi	r24, 0x81	; 129
    17f8:	80 93 6f 38 	sts	0x386F, r24	; 0x80386f <JTAG2::packet+0x8>
    17fc:	84 cf       	rjmp	.-248    	; 0x1706 <main+0x3ac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:250
      packet.body[4] = sign_on_resp[8];
      packet.size_word[0] = 5;
      break;
    }
    case JTAG2::PARAM_EMU_MODE : {
      packet.body[1] = PARAM_EMU_MODE_VAL;
    17fe:	80 91 4f 38 	lds	r24, 0x384F	; 0x80384f <JTAG2::PARAM_EMU_MODE_VAL>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    1802:	80 93 70 38 	sts	0x3870, r24	; 0x803870 <JTAG2::packet+0x9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:256
      packet.size_word[0] = 2;
    1806:	20 92 6a 38 	sts	0x386A, r2	; 0x80386a <JTAG2::packet+0x3>
    180a:	30 92 6b 38 	sts	0x386B, r3	; 0x80386b <JTAG2::packet+0x4>
    180e:	f3 cf       	rjmp	.-26     	; 0x17f6 <main+0x49c>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:255
      packet.body[1] = PARAM_EMU_MODE_VAL;
      packet.size_word[0] = 2;
      break;
    }
    case JTAG2::PARAM_BAUD_RATE : {
      packet.body[1] = PARAM_BAUD_RATE_VAL;
    1810:	80 91 36 38 	lds	r24, 0x3836	; 0x803836 <JTAG2::PARAM_BAUD_RATE_VAL>
    1814:	f6 cf       	rjmp	.-20     	; 0x1802 <main+0x4a8>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:293
    case JTAG2::CMND_GET_PARAMETER : {
      JTAG2::get_parameter();
      break;
    }
    case JTAG2::CMND_ENTER_PROGMODE : {
      uint8_t c = UPDI_CONTROL;
    1816:	cc b3       	in	r28, 0x1c	; 28
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:294
      UPDI::updi_activate();
    1818:	0e 94 5f 03 	call	0x6be	; 0x6be <UPDI::updi_activate()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:295
      JTAG2::set_response(JTAG2::RSP_OK);
    181c:	80 e8       	ldi	r24, 0x80	; 128
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:296
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    1824:	c0 fd       	sbrc	r28, 0
    1826:	0e c0       	rjmp	.+28     	; 0x1844 <main+0x4ea>
    1828:	e0 9b       	sbis	0x1c, 0	; 28
    182a:	0c c0       	rjmp	.+24     	; 0x1844 <main+0x4ea>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:297
        packet.size = 20;
    182c:	84 e1       	ldi	r24, 0x14	; 20
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	a0 e0       	ldi	r26, 0x00	; 0
    1832:	b0 e0       	ldi	r27, 0x00	; 0
    1834:	80 93 6a 38 	sts	0x386A, r24	; 0x80386a <JTAG2::packet+0x3>
    1838:	90 93 6b 38 	sts	0x386B, r25	; 0x80386b <JTAG2::packet+0x4>
    183c:	a0 93 6c 38 	sts	0x386C, r26	; 0x80386c <JTAG2::packet+0x5>
    1840:	b0 93 6d 38 	sts	0x386D, r27	; 0x80386d <JTAG2::packet+0x6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:298
      TIM::LED_Blink();
    1844:	0e 94 54 01 	call	0x2a8	; 0x2a8 <TIM::LED_Blink()>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:300
      /* terminal mode 許可時は WDTを無効にする */
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) SYS::WDT_OFF();
    1848:	e6 9b       	sbis	0x1c, 6	; 28
    184a:	5d cf       	rjmp	.-326    	; 0x1706 <main+0x3ac>
WDT_OFF():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:137
void SYS::WDT_SET (uint8_t _wdt_period) {
  loop_until_bit_is_clear(WDT_STATUS, WDT_SYNCBUSY_bp);
  _PROTECTED_WRITE(WDT_CTRLA, _wdt_period);
}

void SYS::WDT_OFF (void) { WDT_SET(WDT_PERIOD_OFF_gc); }
    184c:	80 e0       	ldi	r24, 0x00	; 0
    184e:	0e 94 8e 01 	call	0x31c	; 0x31c <SYS::WDT_SET(unsigned char)>
    1852:	59 cf       	rjmp	.-334    	; 0x1706 <main+0x3ac>
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:246

bool UPDI::check_sig (void) {
  uint8_t mem_type  = JTAG2::packet.body[1];
  uint8_t s = _CAPS32(JTAG2::packet.body[2])->bytes[0];
  uint8_t a = _CAPS32(JTAG2::packet.body[6])->bytes[0]
    - (bit_is_set(UPDI_NVMCTRL, UPDI_BROW_bp) ? (uint8_t)NVM::EB_SIGROW
    1854:	90 e8       	ldi	r25, 0x80	; 128
    1856:	d1 ce       	rjmp	.-606    	; 0x15fa <main+0x2a0>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:247
                                              : (uint8_t)NVM::BASE_SIGROW);
    1858:	89 1b       	sub	r24, r25
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:252
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    185a:	81 f0       	breq	.+32     	; 0x187c <main+0x522>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:253
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    185c:	81 30       	cpi	r24, 0x01	; 1
    185e:	31 f4       	brne	.+12     	; 0x186c <main+0x512>
    1860:	ee 99       	sbic	0x1d, 6	; 29
    1862:	0e c0       	rjmp	.+28     	; 0x1880 <main+0x526>
    1864:	ed 99       	sbic	0x1d, 5	; 29
    1866:	0e c0       	rjmp	.+28     	; 0x1884 <main+0x52a>
main():
    1868:	84 e7       	ldi	r24, 0x74	; 116
    186a:	dd ce       	rjmp	.-582    	; 0x1626 <main+0x2cc>
check_sig():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:255
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    186c:	82 30       	cpi	r24, 0x02	; 2
    186e:	81 f4       	brne	.+32     	; 0x1890 <main+0x536>
    1870:	ef 99       	sbic	0x1d, 7	; 29
    1872:	0a c0       	rjmp	.+20     	; 0x1888 <main+0x52e>
    1874:	ee 99       	sbic	0x1d, 6	; 29
    1876:	0a c0       	rjmp	.+20     	; 0x188c <main+0x532>
main():
    1878:	80 e3       	ldi	r24, 0x30	; 48
    187a:	d5 ce       	rjmp	.-598    	; 0x1626 <main+0x2cc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:252
                                              : (uint8_t)NVM::BASE_SIGROW);
  uint8_t c;
  if (bit_is_clear(UPDI_CONTROL, UPDI_PROG_bp) && mem_type == JTAG2::MTYPE_SIGN_JTAG && s == 1) {
    JTAG2::packet.body[0] = JTAG2::RSP_MEMORY;
    if (bit_is_clear(UPDI_CONTROL, UPDI_INFO_bp)) c = UPDI_LASTH ? 0x00 : 0xFF;
    else if (a == 0) c = 0x1E;
    187c:	8e e1       	ldi	r24, 0x1E	; 30
    187e:	d3 ce       	rjmp	.-602    	; 0x1626 <main+0x2cc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:253
    else if (a == 1) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN2_bp) ? 'A'
    1880:	81 e4       	ldi	r24, 0x41	; 65
    1882:	d1 ce       	rjmp	.-606    	; 0x1626 <main+0x2cc>
    1884:	8d e6       	ldi	r24, 0x6D	; 109
    1886:	cf ce       	rjmp	.-610    	; 0x1626 <main+0x2cc>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/UPDI.cpp:255
                       : bit_is_set(UPDI_NVMCTRL, UPDI_LOWF_bp) ? 'm' : 't';
    else if (a == 2) c = bit_is_set(UPDI_NVMCTRL, UPDI_GEN3_bp) ? '3'
    1888:	83 e3       	ldi	r24, 0x33	; 51
    188a:	cd ce       	rjmp	.-614    	; 0x1626 <main+0x2cc>
    188c:	82 e3       	ldi	r24, 0x32	; 50
    188e:	cb ce       	rjmp	.-618    	; 0x1626 <main+0x2cc>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:307
    }
    case JTAG2::CMND_READ_MEMORY : {
      /* 非PROG でも SIG要求にはダミー応答する */
      if (UPDI::check_sig()) break;
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();
    1890:	e6 99       	sbic	0x1c, 6	; 28
    1892:	17 c0       	rjmp	.+46     	; 0x18c2 <main+0x568>
LED_TCB1():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:160
    LEDG_EVOUT = EVSYS_USER_CHANNEL2_gc;
  }
}

void LED_TCB1 (uint8_t mode, uint16_t ccmp) {
  if (TIM::mode != mode) {
    1894:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <TIM::mode>
    1898:	84 30       	cpi	r24, 0x04	; 4
    189a:	99 f0       	breq	.+38     	; 0x18c2 <main+0x568>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:161
    TIM::mode = mode;
    189c:	84 e0       	ldi	r24, 0x04	; 4
    189e:	80 93 50 38 	sts	0x3850, r24	; 0x803850 <TIM::mode>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:162
    TCB1_CCMP = ccmp;
    18a2:	85 e1       	ldi	r24, 0x15	; 21
    18a4:	94 e0       	ldi	r25, 0x04	; 4
    18a6:	80 93 9c 0a 	sts	0x0A9C, r24	; 0x800a9c <UPDI::nvmprog_key+0x7f6ffa>
    18aa:	90 93 9d 0a 	sts	0x0A9D, r25	; 0x800a9d <UPDI::nvmprog_key+0x7f6ffb>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:163
    TCB1_CNT = 0;
    18ae:	10 92 9a 0a 	sts	0x0A9A, r1	; 0x800a9a <UPDI::nvmprog_key+0x7f6ff8>
    18b2:	10 92 9b 0a 	sts	0x0A9B, r1	; 0x800a9b <UPDI::nvmprog_key+0x7f6ff9>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:164
    TCB1_CTRLA = TCB_RUNSTDBY_bm | TCB_ENABLE_bm | TCB_CLKSEL_EVENT_gc;
    18b6:	8f e4       	ldi	r24, 0x4F	; 79
    18b8:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <UPDI::nvmprog_key+0x7f6fee>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/TIM.cpp:165
    LEDG_EVOUT = EVSYS_USER_CHANNEL0_gc;
    18bc:	81 e0       	ldi	r24, 0x01	; 1
    18be:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <UPDI::nvmprog_key+0x7f6707>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:312

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    18c2:	e1 99       	sbic	0x1c, 1	; 28
    18c4:	05 c0       	rjmp	.+10     	; 0x18d0 <main+0x576>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:311
      /* terminal mode でなければLED高速点滅 */
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
    18c6:	e5 99       	sbic	0x1c, 5	; 28
    18c8:	03 c0       	rjmp	.+6      	; 0x18d0 <main+0x576>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:313
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
    18ca:	85 ea       	ldi	r24, 0xA5	; 165
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	5f cf       	rjmp	.-322    	; 0x178e <main+0x434>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:312
      if (bit_is_clear(UPDI_CONTROL, UPDI::UPDI_TERM_bp)) TIM::LED_Fast();

      /* PROG状態かUSERROW応答可能な場合はメモリ読出処理へ */
      if ((bit_is_clear(UPDI_CONTROL, UPDI::UPDI_PROG_bp)
        && bit_is_clear(UPDI_CONTROL, UPDI::UPDI_URWR_bp))
      || !UPDI::runtime(UPDI::UPDI_CMD_READ_MEMORY)) {
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	cd d8       	rcall	.-3686   	; 0xa6e <UPDI::runtime(unsigned char)>
    18d4:	81 11       	cpse	r24, r1
    18d6:	17 cf       	rjmp	.-466    	; 0x1706 <main+0x3ac>
    18d8:	f8 cf       	rjmp	.-16     	; 0x18ca <main+0x570>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:319
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_WRITE_MEMORY)
    18da:	82 e0       	ldi	r24, 0x02	; 2
    18dc:	c8 d8       	rcall	.-3696   	; 0xa6e <UPDI::runtime(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:318
        JTAG2::set_response(JTAG2::RSP_ILLEGAL_MCU_STATE);
      }
      break;
    }
    case JTAG2::CMND_WRITE_MEMORY : {
      JTAG2::set_response(
    18de:	81 11       	cpse	r24, r1
    18e0:	b7 ce       	rjmp	.-658    	; 0x1650 <main+0x2f6>
main():
    18e2:	82 ea       	ldi	r24, 0xA2	; 162
    18e4:	90 e0       	ldi	r25, 0x00	; 0
    18e6:	53 cf       	rjmp	.-346    	; 0x178e <main+0x434>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:328
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
    18e8:	cc b3       	in	r28, 0x1c	; 28
    18ea:	83 e0       	ldi	r24, 0x03	; 3
    18ec:	c0 d8       	rcall	.-3712   	; 0xa6e <UPDI::runtime(unsigned char)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:327
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    18ee:	81 11       	cpse	r24, r1
    18f0:	15 c0       	rjmp	.+42     	; 0x191c <main+0x5c2>
main():
    18f2:	85 ea       	ldi	r24, 0xA5	; 165
    18f4:	90 e0       	ldi	r25, 0x00	; 0
process_command():
    18f6:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:332
        UPDI::runtime(UPDI::UPDI_CMD_ERASE)
        ? JTAG2::RSP_OK
        : JTAG2::RSP_ILLEGAL_MCU_STATE
      );
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
    18fa:	c0 fd       	sbrc	r28, 0
    18fc:	04 cf       	rjmp	.-504    	; 0x1706 <main+0x3ac>
    18fe:	e0 9b       	sbis	0x1c, 0	; 28
    1900:	02 cf       	rjmp	.-508    	; 0x1706 <main+0x3ac>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:333
        packet.size = 19;
    1902:	83 e1       	ldi	r24, 0x13	; 19
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	a0 e0       	ldi	r26, 0x00	; 0
    1908:	b0 e0       	ldi	r27, 0x00	; 0
    190a:	80 93 6a 38 	sts	0x386A, r24	; 0x80386a <JTAG2::packet+0x3>
    190e:	90 93 6b 38 	sts	0x386B, r25	; 0x80386b <JTAG2::packet+0x4>
    1912:	a0 93 6c 38 	sts	0x386C, r26	; 0x80386c <JTAG2::packet+0x5>
    1916:	b0 93 6d 38 	sts	0x386D, r27	; 0x80386d <JTAG2::packet+0x6>
    191a:	f5 ce       	rjmp	.-534    	; 0x1706 <main+0x3ac>
main():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:327
      );
      break;
    }
    case JTAG2::CMND_XMEGA_ERASE : {
      uint8_t c = UPDI_CONTROL;
      JTAG2::set_response(
    191c:	80 e8       	ldi	r24, 0x80	; 128
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	ea cf       	rjmp	.-44     	; 0x18f6 <main+0x59c>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:337
      if (!(c & _BV(UPDI::UPDI_INFO_bp)) && bit_is_set(UPDI_CONTROL, UPDI::UPDI_INFO_bp))
        packet.size = 19;
      break;
    }
    case JTAG2::CMND_GO : {
      if (bit_is_set(UPDI_CONTROL, UPDI::UPDI_PROG_bp)) UPDI::runtime(UPDI::UPDI_CMD_GO);
    1922:	e1 9b       	sbis	0x1c, 1	; 28
    1924:	95 ce       	rjmp	.-726    	; 0x1650 <main+0x2f6>
    1926:	84 e0       	ldi	r24, 0x04	; 4
    1928:	a2 d8       	rcall	.-3772   	; 0xa6e <UPDI::runtime(unsigned char)>
    192a:	92 ce       	rjmp	.-732    	; 0x1650 <main+0x2f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:342
      JTAG2::set_response(JTAG2::RSP_OK);
      break;
    }
    case JTAG2::CMND_SIGN_OFF : {
      JTAG2::set_response(JTAG2::RSP_OK);
    192c:	80 e8       	ldi	r24, 0x80	; 128
    192e:	90 e0       	ldi	r25, 0x00	; 0
    1930:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <JTAG2::set_response(JTAG2::jtag_response_e)>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:343
      JTAG2::answer_transfer();
    1934:	0e 94 03 02 	call	0x406	; 0x406 <JTAG2::answer_transfer()>
flush():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:112
  JTAG_USART.STATUS = USART_TXCIF_bm;
  return JTAG_USART.TXDATAL = _data;
}

void JTAG2::flush (void) {
  loop_until_bit_is_set(JTAG_USART.STATUS, USART_TXCIF_bp);
    1938:	80 91 24 08 	lds	r24, 0x0824	; 0x800824 <UPDI::nvmprog_key+0x7f6d82>
    193c:	86 ff       	sbrs	r24, 6
    193e:	fc cf       	rjmp	.-8      	; 0x1938 <main+0x5de>
WDT_REBOOT():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/SYS.cpp:142

void SYS::WDT_ON (void) { WDT_SET(WDT_PERIOD_8KCLK_gc); }

void SYS::WDT_REBOOT (void) {
  WDT_SET(WDT_PERIOD_8CLK_gc);
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	0e 94 8e 01 	call	0x31c	; 0x31c <SYS::WDT_SET(unsigned char)>
    1946:	ff cf       	rjmp	.-2      	; 0x1946 <main+0x5ec>
process_command():
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:352
      SYS::WDT_REBOOT();
      /* Session Complete */
    }
    // Ex) struct xmega_device_desc
    case JTAG2::CMND_SET_XMEGA_PARAMS : {
      NVM::nvm_eeprom_offset   = _CAPS32(packet.body[12])->dword;
    1948:	80 91 7b 38 	lds	r24, 0x387B	; 0x80387b <JTAG2::packet+0x14>
    194c:	90 91 7c 38 	lds	r25, 0x387C	; 0x80387c <JTAG2::packet+0x15>
    1950:	a0 91 7d 38 	lds	r26, 0x387D	; 0x80387d <JTAG2::packet+0x16>
    1954:	b0 91 7e 38 	lds	r27, 0x387E	; 0x80387e <JTAG2::packet+0x17>
    1958:	80 93 63 38 	sts	0x3863, r24	; 0x803863 <NVM::nvm_eeprom_offset>
    195c:	90 93 64 38 	sts	0x3864, r25	; 0x803864 <NVM::nvm_eeprom_offset+0x1>
    1960:	a0 93 65 38 	sts	0x3865, r26	; 0x803865 <NVM::nvm_eeprom_offset+0x2>
    1964:	b0 93 66 38 	sts	0x3866, r27	; 0x803866 <NVM::nvm_eeprom_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:353
      NVM::nvm_fuse_offset     = _CAPS32(packet.body[16])->dword;
    1968:	80 91 7f 38 	lds	r24, 0x387F	; 0x80387f <JTAG2::packet+0x18>
    196c:	90 91 80 38 	lds	r25, 0x3880	; 0x803880 <JTAG2::packet+0x19>
    1970:	a0 91 81 38 	lds	r26, 0x3881	; 0x803881 <JTAG2::packet+0x1a>
    1974:	b0 91 82 38 	lds	r27, 0x3882	; 0x803882 <JTAG2::packet+0x1b>
    1978:	80 93 5f 38 	sts	0x385F, r24	; 0x80385f <NVM::nvm_fuse_offset>
    197c:	90 93 60 38 	sts	0x3860, r25	; 0x803860 <NVM::nvm_fuse_offset+0x1>
    1980:	a0 93 61 38 	sts	0x3861, r26	; 0x803861 <NVM::nvm_fuse_offset+0x2>
    1984:	b0 93 62 38 	sts	0x3862, r27	; 0x803862 <NVM::nvm_fuse_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:354
      NVM::nvm_user_sig_offset = _CAPS32(packet.body[24])->dword;
    1988:	80 91 87 38 	lds	r24, 0x3887	; 0x803887 <JTAG2::packet+0x20>
    198c:	90 91 88 38 	lds	r25, 0x3888	; 0x803888 <JTAG2::packet+0x21>
    1990:	a0 91 89 38 	lds	r26, 0x3889	; 0x803889 <JTAG2::packet+0x22>
    1994:	b0 91 8a 38 	lds	r27, 0x388A	; 0x80388a <JTAG2::packet+0x23>
    1998:	80 93 5b 38 	sts	0x385B, r24	; 0x80385b <NVM::nvm_user_sig_offset>
    199c:	90 93 5c 38 	sts	0x385C, r25	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
    19a0:	a0 93 5d 38 	sts	0x385D, r26	; 0x80385d <NVM::nvm_user_sig_offset+0x2>
    19a4:	b0 93 5e 38 	sts	0x385E, r27	; 0x80385e <NVM::nvm_user_sig_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:355
      NVM::nvm_data_offset     = _CAPS32(packet.body[32])->dword;
    19a8:	80 91 8f 38 	lds	r24, 0x388F	; 0x80388f <JTAG2::packet+0x28>
    19ac:	90 91 90 38 	lds	r25, 0x3890	; 0x803890 <JTAG2::packet+0x29>
    19b0:	a0 91 91 38 	lds	r26, 0x3891	; 0x803891 <JTAG2::packet+0x2a>
    19b4:	b0 91 92 38 	lds	r27, 0x3892	; 0x803892 <JTAG2::packet+0x2b>
    19b8:	80 93 57 38 	sts	0x3857, r24	; 0x803857 <NVM::nvm_data_offset>
    19bc:	90 93 58 38 	sts	0x3858, r25	; 0x803858 <NVM::nvm_data_offset+0x1>
    19c0:	a0 93 59 38 	sts	0x3859, r26	; 0x803859 <NVM::nvm_data_offset+0x2>
    19c4:	b0 93 5a 38 	sts	0x385A, r27	; 0x80385a <NVM::nvm_data_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:356
      NVM::flash_page_size     = _CAPS16(packet.body[42])->word;
    19c8:	80 91 99 38 	lds	r24, 0x3899	; 0x803899 <JTAG2::packet+0x32>
    19cc:	90 91 9a 38 	lds	r25, 0x389A	; 0x80389a <JTAG2::packet+0x33>
    19d0:	80 93 55 38 	sts	0x3855, r24	; 0x803855 <NVM::flash_page_size>
    19d4:	90 93 56 38 	sts	0x3856, r25	; 0x803856 <NVM::flash_page_size+0x1>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:359
    //NVM::eeprom_page_size    = packet.body[46];
      // AVR_DA/DB/DD/EA/EB
      if (_CAPS32(NVM::nvm_user_sig_offset)->bytes[1] != 0x13) {
    19d8:	80 91 5c 38 	lds	r24, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
    19dc:	83 31       	cpi	r24, 0x13	; 19
    19de:	09 f4       	brne	.+2      	; 0x19e2 <main+0x688>
    19e0:	37 ce       	rjmp	.-914    	; 0x1650 <main+0x2f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:360
        NVM::nvm_flash_offset  = 0x800000;
    19e2:	80 e0       	ldi	r24, 0x00	; 0
    19e4:	90 e0       	ldi	r25, 0x00	; 0
    19e6:	a0 e8       	ldi	r26, 0x80	; 128
    19e8:	b0 e0       	ldi	r27, 0x00	; 0
    19ea:	80 93 51 38 	sts	0x3851, r24	; 0x803851 <NVM::nvm_flash_offset>
    19ee:	90 93 52 38 	sts	0x3852, r25	; 0x803852 <NVM::nvm_flash_offset+0x1>
    19f2:	a0 93 53 38 	sts	0x3853, r26	; 0x803853 <NVM::nvm_flash_offset+0x2>
    19f6:	b0 93 54 38 	sts	0x3854, r27	; 0x803854 <NVM::nvm_flash_offset+0x3>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:361
        UPDI_NVMCTRL |= _BV(UPDI::UPDI_GEN2_bp);
    19fa:	ee 9a       	sbi	0x1d, 6	; 29
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:363
        // EB
        if (_CAPS32(NVM::nvm_user_sig_offset)->bytes[1] == 0x12) {
    19fc:	80 91 5c 38 	lds	r24, 0x385C	; 0x80385c <NVM::nvm_user_sig_offset+0x1>
    1a00:	82 31       	cpi	r24, 0x12	; 18
    1a02:	09 f0       	breq	.+2      	; 0x1a06 <main+0x6ac>
    1a04:	25 ce       	rjmp	.-950    	; 0x1650 <main+0x2f6>
/Users/askn/Documents/Zinnia-tools/Products/hardware/UPDI4AVR/libraries/UPDI4AVR/examples/UPDI4AVR_FW753B/src/JTAG2.cpp:364
          UPDI_NVMCTRL |= _BV(UPDI::UPDI_BROW_bp);
    1a06:	ec 9a       	sbi	0x1d, 4	; 29
    1a08:	23 ce       	rjmp	.-954    	; 0x1650 <main+0x2f6>

00001a0a <setjmp>:
setjmp():
    1a0a:	dc 01       	movw	r26, r24
    1a0c:	2d 92       	st	X+, r2
    1a0e:	3d 92       	st	X+, r3
    1a10:	4d 92       	st	X+, r4
    1a12:	5d 92       	st	X+, r5
    1a14:	6d 92       	st	X+, r6
    1a16:	7d 92       	st	X+, r7
    1a18:	8d 92       	st	X+, r8
    1a1a:	9d 92       	st	X+, r9
    1a1c:	ad 92       	st	X+, r10
    1a1e:	bd 92       	st	X+, r11
    1a20:	cd 92       	st	X+, r12
    1a22:	dd 92       	st	X+, r13
    1a24:	ed 92       	st	X+, r14
    1a26:	fd 92       	st	X+, r15
    1a28:	0d 93       	st	X+, r16
    1a2a:	1d 93       	st	X+, r17
    1a2c:	cd 93       	st	X+, r28
    1a2e:	dd 93       	st	X+, r29
    1a30:	ff 91       	pop	r31
    1a32:	ef 91       	pop	r30
    1a34:	8d b7       	in	r24, 0x3d	; 61
    1a36:	8d 93       	st	X+, r24
    1a38:	8e b7       	in	r24, 0x3e	; 62
    1a3a:	8d 93       	st	X+, r24
    1a3c:	8f b7       	in	r24, 0x3f	; 63
    1a3e:	8d 93       	st	X+, r24
    1a40:	ed 93       	st	X+, r30
    1a42:	fd 93       	st	X+, r31
    1a44:	88 27       	eor	r24, r24
    1a46:	99 27       	eor	r25, r25
    1a48:	09 94       	ijmp

00001a4a <longjmp>:
longjmp():
    1a4a:	dc 01       	movw	r26, r24
    1a4c:	cb 01       	movw	r24, r22
    1a4e:	81 30       	cpi	r24, 0x01	; 1
    1a50:	91 05       	cpc	r25, r1
    1a52:	81 1d       	adc	r24, r1
    1a54:	2d 90       	ld	r2, X+
    1a56:	3d 90       	ld	r3, X+
    1a58:	4d 90       	ld	r4, X+
    1a5a:	5d 90       	ld	r5, X+
    1a5c:	6d 90       	ld	r6, X+
    1a5e:	7d 90       	ld	r7, X+
    1a60:	8d 90       	ld	r8, X+
    1a62:	9d 90       	ld	r9, X+
    1a64:	ad 90       	ld	r10, X+
    1a66:	bd 90       	ld	r11, X+
    1a68:	cd 90       	ld	r12, X+
    1a6a:	dd 90       	ld	r13, X+
    1a6c:	ed 90       	ld	r14, X+
    1a6e:	fd 90       	ld	r15, X+
    1a70:	0d 91       	ld	r16, X+
    1a72:	1d 91       	ld	r17, X+
    1a74:	cd 91       	ld	r28, X+
    1a76:	dd 91       	ld	r29, X+
    1a78:	ed 91       	ld	r30, X+
    1a7a:	fd 91       	ld	r31, X+
    1a7c:	0d 90       	ld	r0, X+
    1a7e:	0f be       	out	0x3f, r0	; 63
    1a80:	ed bf       	out	0x3d, r30	; 61
    1a82:	fe bf       	out	0x3e, r31	; 62
    1a84:	ed 91       	ld	r30, X+
    1a86:	fd 91       	ld	r31, X+
    1a88:	09 94       	ijmp

00001a8a <_exit>:
exit():
    1a8a:	f8 94       	cli

00001a8c <__stop_program>:
__stop_program():
    1a8c:	ff cf       	rjmp	.-2      	; 0x1a8c <__stop_program>

Disassembly of section .nvmem:

00001ae4 <.nvmem>:
	...
